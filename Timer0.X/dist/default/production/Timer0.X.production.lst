

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 18 17:57:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _LATDbits	set	3980
    52   000000                     _PORTB	set	3969
    53   000000                     _TRISB	set	3987
    54   000000                     _TRISD	set	3989
    55   000000                     _ADCON1	set	4033
    56   000000                     _PORTD	set	3971
    57   000000                     _LATB	set	3978
    58   000000                     _LATD	set	3980
    59   000000                     _T0CON	set	4053
    60   000000                     _INTCON3bits	set	4080
    61   000000                     _INTCON2bits	set	4081
    62   000000                     _INTCONbits	set	4082
    63   000000                     _TMR0	set	4054
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68   00011C                     __pcinit:
    69                           	callstack 0
    70   00011C                     start_initialization:
    71                           	callstack 0
    72   00011C                     __initialization:
    73                           	callstack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (4 bytes)
    76   00011C  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    77   00011E  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    78   000120  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    79   000122  6A01               	clrf	__pbssCOMRAM& (0+255),c
    80   000124                     end_of_initialization:
    81                           	callstack 0
    82   000124                     __end_of__initialization:
    83                           	callstack 0
    84   000124  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    85   000126  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    86   000128  0100               	movlb	0
    87   00012A  EF09  F000         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90   000001                     __pbssCOMRAM:
    91                           	callstack 0
    92   000001                     _cont:
    93                           	callstack 0
    94   000001                     	ds	2
    95   000003                     _contagem:
    96                           	callstack 0
    97   000003                     	ds	2
    98                           
    99                           	psect	cstackCOMRAM
   100   000000                     __pcstackCOMRAM:
   101                           	callstack 0
   102   000000                     
   103                           ; 1 bytes @ 0x0
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 12 in file "mainTmr0.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;		None
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, status,0
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   123 ;;      Params:         0       0       0       0       0       0       0
   124 ;;      Locals:         0       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0
   126 ;;      Totals:         0       0       0       0       0       0       0
   127 ;;Total ram usage:        0 bytes
   128 ;; Hardware stack levels required when called: 1
   129 ;; This function calls:
   130 ;;		Nothing
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137   000012                     __ptext0:
   138                           	callstack 0
   139   000012                     _main:
   140                           	callstack 30
   141   000012                     
   142                           ;mainTmr0.c: 17: TRISB = 0b00000011;
   143   000012  0E03               	movlw	3
   144   000014  6E93               	movwf	147,c	;volatile
   145                           
   146                           ;mainTmr0.c: 18: TRISD = 0b00000000;
   147   000016  0E00               	movlw	0
   148   000018  6E95               	movwf	149,c	;volatile
   149                           
   150                           ;mainTmr0.c: 19: PORTB = 0b00000000;
   151   00001A  0E00               	movlw	0
   152   00001C  6E81               	movwf	129,c	;volatile
   153                           
   154                           ;mainTmr0.c: 20: LATB = 0;
   155   00001E  0E00               	movlw	0
   156   000020  6E8A               	movwf	138,c	;volatile
   157                           
   158                           ;mainTmr0.c: 21: PORTD = 0;
   159   000022  0E00               	movlw	0
   160   000024  6E83               	movwf	131,c	;volatile
   161                           
   162                           ;mainTmr0.c: 22: LATD = 0;
   163   000026  0E00               	movlw	0
   164   000028  6E8C               	movwf	140,c	;volatile
   165                           
   166                           ;mainTmr0.c: 24: ADCON1 = 0b00001111;
   167   00002A  0E0F               	movlw	15
   168   00002C  6EC1               	movwf	193,c	;volatile
   169   00002E                     
   170                           ;mainTmr0.c: 26: INTCON2bits.RBPU = 0;
   171   00002E  9EF1               	bcf	241,7,c	;volatile
   172   000030                     
   173                           ;mainTmr0.c: 31: INTCON2bits.INTEDG0 = 0;
   174   000030  9CF1               	bcf	241,6,c	;volatile
   175   000032                     
   176                           ;mainTmr0.c: 33: INTCONbits.INT0IF = 0;
   177   000032  92F2               	bcf	242,1,c	;volatile
   178   000034                     
   179                           ;mainTmr0.c: 34: INTCONbits.INT0IE = 1;
   180   000034  88F2               	bsf	242,4,c	;volatile
   181   000036                     
   182                           ;mainTmr0.c: 36: INTCON3bits.INT1IF = 0;
   183   000036  90F0               	bcf	240,0,c	;volatile
   184   000038                     
   185                           ;mainTmr0.c: 37: INTCON3bits.INT1IE = 1;
   186   000038  86F0               	bsf	240,3,c	;volatile
   187   00003A                     
   188                           ;mainTmr0.c: 40: INTCONbits.TMR0IE = 1;
   189   00003A  8AF2               	bsf	242,5,c	;volatile
   190   00003C                     
   191                           ;mainTmr0.c: 42: INTCONbits.TMR0IF = 0;
   192   00003C  94F2               	bcf	242,2,c	;volatile
   193                           
   194                           ;mainTmr0.c: 46: T0CON = 0b11000010;
   195   00003E  0EC2               	movlw	194
   196   000040  6ED5               	movwf	213,c	;volatile
   197                           
   198                           ;mainTmr0.c: 47: TMR0 = 0;
   199   000042  0E00               	movlw	0
   200   000044  6ED7               	movwf	215,c	;volatile
   201   000046  0E00               	movlw	0
   202   000048  6ED6               	movwf	214,c	;volatile
   203   00004A                     
   204                           ;mainTmr0.c: 49: INTCONbits.GIE = 1;
   205   00004A  8EF2               	bsf	242,7,c	;volatile
   206   00004C                     l35:
   207   00004C  0004               	clrwdt		;# 
   208   00004E                     
   209                           ;mainTmr0.c: 53: if(contagem == 10000)
   210   00004E  0E10               	movlw	16
   211   000050  1803               	xorwf	_contagem^0,w,c
   212   000052  E107               	bnz	u11
   213   000054  0E27               	movlw	39
   214   000056  1804               	xorwf	(_contagem+1)^0,w,c
   215   000058  A4D8               	btfss	status,2,c
   216   00005A  EF31  F000         	goto	u11
   217   00005E  EF33  F000         	goto	u10
   218   000062                     u11:
   219   000062  EF26  F000         	goto	l35
   220   000066                     u10:
   221   000066                     
   222                           ;mainTmr0.c: 54: { if(cont == 0){
   223   000066  5001               	movf	_cont^0,w,c
   224   000068  1002               	iorwf	(_cont+1)^0,w,c
   225   00006A  A4D8               	btfss	status,2,c
   226   00006C  EF3A  F000         	goto	u21
   227   000070  EF3C  F000         	goto	u20
   228   000074                     u21:
   229   000074  EF3F  F000         	goto	l826
   230   000078                     u20:
   231   000078                     
   232                           ;mainTmr0.c: 55: LATDbits.LATD0 = 1;
   233   000078  808C               	bsf	140,0,c	;volatile
   234                           
   235                           ;mainTmr0.c: 56: }else if(cont > 0 && cont <= 3){
   236   00007A  EF26  F000         	goto	l35
   237   00007E                     l826:
   238   00007E  5001               	movf	_cont^0,w,c
   239   000080  1002               	iorwf	(_cont+1)^0,w,c
   240   000082  B4D8               	btfsc	status,2,c
   241   000084  EF46  F000         	goto	u31
   242   000088  EF48  F000         	goto	u30
   243   00008C                     u31:
   244   00008C  EF56  F000         	goto	l832
   245   000090                     u30:
   246   000090  5002               	movf	(_cont+1)^0,w,c
   247   000092  E107               	bnz	u41
   248   000094  0E04               	movlw	4
   249   000096  5C01               	subwf	_cont^0,w,c
   250   000098  B0D8               	btfsc	status,0,c
   251   00009A  EF51  F000         	goto	u41
   252   00009E  EF53  F000         	goto	u40
   253   0000A2                     u41:
   254   0000A2  EF56  F000         	goto	l832
   255   0000A6                     u40:
   256   0000A6                     
   257                           ;mainTmr0.c: 57: LATDbits.LATD1 = 1;
   258   0000A6  828C               	bsf	140,1,c	;volatile
   259                           
   260                           ;mainTmr0.c: 58: }else if(cont > 3){
   261   0000A8  EF26  F000         	goto	l35
   262   0000AC                     l832:
   263   0000AC  5002               	movf	(_cont+1)^0,w,c
   264   0000AE  E109               	bnz	u50
   265   0000B0  0E04               	movlw	4
   266   0000B2  5C01               	subwf	_cont^0,w,c
   267   0000B4  A0D8               	btfss	status,0,c
   268   0000B6  EF5F  F000         	goto	u51
   269   0000BA  EF61  F000         	goto	u50
   270   0000BE                     u51:
   271   0000BE  EF64  F000         	goto	l36
   272   0000C2                     u50:
   273   0000C2                     
   274                           ;mainTmr0.c: 59: LATDbits.LATD2 = 1;
   275   0000C2  848C               	bsf	140,2,c	;volatile
   276   0000C4  EF26  F000         	goto	l35
   277   0000C8                     l36:
   278   0000C8  EF26  F000         	goto	l35
   279   0000CC  EF07  F000         	goto	start
   280   0000D0                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function _isr *****************
   284 ;; Defined at:
   285 ;;		line 67 in file "mainTmr0.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   299 ;;      Params:         0       0       0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0
   302 ;;      Totals:         0       0       0       0       0       0       0
   303 ;;Total ram usage:        0 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		Interrupt level 2
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	intcode
   313   000008                     __pintcode:
   314                           	callstack 0
   315   000008                     _isr:
   316                           	callstack 30
   317                           
   318                           ;incstack = 0
   319   000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   320   00000A  ED68  F000         	call	int_func,f	;refresh shadow registers
   321                           
   322                           	psect	intcode_body
   323   0000D0                     __pintcode_body:
   324                           	callstack 30
   325   0000D0                     int_func:
   326                           	callstack 30
   327   0000D0  0006               	pop		; remove dummy address from shadow register refresh
   328   0000D2                     
   329                           ;mainTmr0.c: 68: if(INTCON3bits.INT1IF == 1)
   330   0000D2  A0F0               	btfss	240,0,c	;volatile
   331   0000D4  EF6E  F000         	goto	i2u6_41
   332   0000D8  EF70  F000         	goto	i2u6_40
   333   0000DC                     i2u6_41:
   334   0000DC  EF78  F000         	goto	i2l848
   335   0000E0                     i2u6_40:
   336   0000E0                     
   337                           ;mainTmr0.c: 69: {;mainTmr0.c: 70: INTCON3bits.INT1IF = 0;
   338   0000E0  90F0               	bcf	240,0,c	;volatile
   339   0000E2                     
   340                           ;mainTmr0.c: 71: contagem = 0;
   341   0000E2  0E00               	movlw	0
   342   0000E4  6E04               	movwf	(_contagem+1)^0,c
   343   0000E6  0E00               	movlw	0
   344   0000E8  6E03               	movwf	_contagem^0,c
   345   0000EA                     
   346                           ;mainTmr0.c: 72: LATDbits.LATD0 = 0;
   347   0000EA  908C               	bcf	140,0,c	;volatile
   348   0000EC                     
   349                           ;mainTmr0.c: 73: LATDbits.LATD1 = 0;
   350   0000EC  928C               	bcf	140,1,c	;volatile
   351   0000EE                     
   352                           ;mainTmr0.c: 74: LATDbits.LATD2 = 0;
   353   0000EE  948C               	bcf	140,2,c	;volatile
   354   0000F0                     i2l848:
   355                           
   356                           ;mainTmr0.c: 75: };mainTmr0.c: 76: if (INTCONbits.INT0IF == 1)
   357   0000F0  A2F2               	btfss	242,1,c	;volatile
   358   0000F2  EF7D  F000         	goto	i2u7_41
   359   0000F6  EF7F  F000         	goto	i2u7_40
   360   0000FA                     i2u7_41:
   361   0000FA  EF82  F000         	goto	i2l854
   362   0000FE                     i2u7_40:
   363   0000FE                     
   364                           ;mainTmr0.c: 77: {;mainTmr0.c: 78: INTCONbits.INT0IF = 0;
   365   0000FE  92F2               	bcf	242,1,c	;volatile
   366   000100                     
   367                           ;mainTmr0.c: 79: cont++;
   368   000100  4A01               	infsnz	_cont^0,f,c
   369   000102  2A02               	incf	(_cont+1)^0,f,c
   370   000104                     i2l854:
   371                           
   372                           ;mainTmr0.c: 83: };mainTmr0.c: 84: if (INTCONbits.TMR0IF == 1)
   373   000104  A4F2               	btfss	242,2,c	;volatile
   374   000106  EF87  F000         	goto	i2u8_41
   375   00010A  EF89  F000         	goto	i2u8_40
   376   00010E                     i2u8_41:
   377   00010E  EF8C  F000         	goto	i2l52
   378   000112                     i2u8_40:
   379   000112                     
   380                           ;mainTmr0.c: 85: {;mainTmr0.c: 86: contagem++;
   381   000112  4A03               	infsnz	_contagem^0,f,c
   382   000114  2A04               	incf	(_contagem+1)^0,f,c
   383   000116                     
   384                           ;mainTmr0.c: 87: INTCONbits.TMR0IF = 0;
   385   000116  94F2               	bcf	242,2,c	;volatile
   386   000118                     i2l52:
   387   000118  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   388   00011A  0011               	retfie		f
   389   00011C                     __end_of_isr:
   390                           	callstack 0
   391   000000                     
   392                           	psect	rparam
   393   000000                     
   394                           	psect	temp
   395   000005                     btemp:
   396                           	callstack 0
   397   000005                     	ds	1
   398   000000                     int$flags	set	btemp
   399   000000                     wtemp8	set	btemp+1
   400   000000                     ttemp5	set	btemp+1
   401   000000                     ttemp6	set	btemp+4
   402   000000                     ttemp7	set	btemp+8
   403                           
   404                           	psect	idloc
   405                           
   406                           ;Config register IDLOC0 @ 0x200000
   407                           ;	unspecified, using default values
   408   200000                     	org	2097152
   409   200000  FF                 	db	255
   410                           
   411                           ;Config register IDLOC1 @ 0x200001
   412                           ;	unspecified, using default values
   413   200001                     	org	2097153
   414   200001  FF                 	db	255
   415                           
   416                           ;Config register IDLOC2 @ 0x200002
   417                           ;	unspecified, using default values
   418   200002                     	org	2097154
   419   200002  FF                 	db	255
   420                           
   421                           ;Config register IDLOC3 @ 0x200003
   422                           ;	unspecified, using default values
   423   200003                     	org	2097155
   424   200003  FF                 	db	255
   425                           
   426                           ;Config register IDLOC4 @ 0x200004
   427                           ;	unspecified, using default values
   428   200004                     	org	2097156
   429   200004  FF                 	db	255
   430                           
   431                           ;Config register IDLOC5 @ 0x200005
   432                           ;	unspecified, using default values
   433   200005                     	org	2097157
   434   200005  FF                 	db	255
   435                           
   436                           ;Config register IDLOC6 @ 0x200006
   437                           ;	unspecified, using default values
   438   200006                     	org	2097158
   439   200006  FF                 	db	255
   440                           
   441                           ;Config register IDLOC7 @ 0x200007
   442                           ;	unspecified, using default values
   443   200007                     	org	2097159
   444   200007  FF                 	db	255
   445                           
   446                           	psect	config
   447                           
   448                           ; Padding undefined space
   449   300000                     	org	3145728
   450   300000  FF                 	db	255
   451                           
   452                           ;Config register CONFIG1H @ 0x300001
   453                           ;	Oscillator Selection bits
   454                           ;	OSC = HS, HS oscillator
   455                           ;	Fail-Safe Clock Monitor Enable bit
   456                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   457                           ;	Internal/External Oscillator Switchover bit
   458                           ;	IESO = OFF, Oscillator Switchover mode disabled
   459   300001                     	org	3145729
   460   300001  02                 	db	2
   461                           
   462                           ;Config register CONFIG2L @ 0x300002
   463                           ;	Power-up Timer Enable bit
   464                           ;	PWRT = OFF, PWRT disabled
   465                           ;	Brown-out Reset Enable bits
   466                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   467                           ;	Brown Out Reset Voltage bits
   468                           ;	BORV = 3, Minimum setting
   469   300002                     	org	3145730
   470   300002  1F                 	db	31
   471                           
   472                           ;Config register CONFIG2H @ 0x300003
   473                           ;	Watchdog Timer Enable bit
   474                           ;	WDT = ON, WDT enabled
   475                           ;	Watchdog Timer Postscale Select bits
   476                           ;	WDTPS = 32768, 1:32768
   477   300003                     	org	3145731
   478   300003  1F                 	db	31
   479                           
   480                           ; Padding undefined space
   481   300004                     	org	3145732
   482   300004  FF                 	db	255
   483                           
   484                           ;Config register CONFIG3H @ 0x300005
   485                           ;	CCP2 MUX bit
   486                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   487                           ;	PORTB A/D Enable bit
   488                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   489                           ;	Low-Power Timer1 Oscillator Enable bit
   490                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   491                           ;	MCLR Pin Enable bit
   492                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   493   300005                     	org	3145733
   494   300005  01                 	db	1
   495                           
   496                           ;Config register CONFIG4L @ 0x300006
   497                           ;	Stack Full/Underflow Reset Enable bit
   498                           ;	STVREN = ON, Stack full/underflow will cause Reset
   499                           ;	Single-Supply ICSP Enable bit
   500                           ;	LVP = ON, Single-Supply ICSP enabled
   501                           ;	Extended Instruction Set Enable bit
   502                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   503                           ;	Background Debugger Enable bit
   504                           ;	DEBUG = 0x1, unprogrammed default
   505   300006                     	org	3145734
   506   300006  85                 	db	133
   507                           
   508                           ; Padding undefined space
   509   300007                     	org	3145735
   510   300007  FF                 	db	255
   511                           
   512                           ;Config register CONFIG5L @ 0x300008
   513                           ;	Code Protection bit
   514                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   515                           ;	Code Protection bit
   516                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   517                           ;	Code Protection bit
   518                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   519                           ;	Code Protection bit
   520                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   521   300008                     	org	3145736
   522   300008  0F                 	db	15
   523                           
   524                           ;Config register CONFIG5H @ 0x300009
   525                           ;	Boot Block Code Protection bit
   526                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   527                           ;	Data EEPROM Code Protection bit
   528                           ;	CPD = OFF, Data EEPROM not code-protected
   529   300009                     	org	3145737
   530   300009  C0                 	db	192
   531                           
   532                           ;Config register CONFIG6L @ 0x30000A
   533                           ;	Write Protection bit
   534                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   535                           ;	Write Protection bit
   536                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   537                           ;	Write Protection bit
   538                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   539                           ;	Write Protection bit
   540                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   541   30000A                     	org	3145738
   542   30000A  0F                 	db	15
   543                           
   544                           ;Config register CONFIG6H @ 0x30000B
   545                           ;	Configuration Register Write Protection bit
   546                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   547                           ;	Boot Block Write Protection bit
   548                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   549                           ;	Data EEPROM Write Protection bit
   550                           ;	WRTD = OFF, Data EEPROM not write-protected
   551   30000B                     	org	3145739
   552   30000B  E0                 	db	224
   553                           
   554                           ;Config register CONFIG7L @ 0x30000C
   555                           ;	Table Read Protection bit
   556                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   557                           ;	Table Read Protection bit
   558                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   559                           ;	Table Read Protection bit
   560                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   561                           ;	Table Read Protection bit
   562                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   563   30000C                     	org	3145740
   564   30000C  0F                 	db	15
   565                           
   566                           ;Config register CONFIG7H @ 0x30000D
   567                           ;	Boot Block Table Read Protection bit
   568                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   569   30000D                     	org	3145741
   570   30000D  40                 	db	64
   571                           tosu	equ	0xFFF
   572                           tosh	equ	0xFFE
   573                           tosl	equ	0xFFD
   574                           stkptr	equ	0xFFC
   575                           pclatu	equ	0xFFB
   576                           pclath	equ	0xFFA
   577                           pcl	equ	0xFF9
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           prodh	equ	0xFF4
   583                           prodl	equ	0xFF3
   584                           indf0	equ	0xFEF
   585                           postinc0	equ	0xFEE
   586                           postdec0	equ	0xFED
   587                           preinc0	equ	0xFEC
   588                           plusw0	equ	0xFEB
   589                           fsr0h	equ	0xFEA
   590                           fsr0l	equ	0xFE9
   591                           wreg	equ	0xFE8
   592                           indf1	equ	0xFE7
   593                           postinc1	equ	0xFE6
   594                           postdec1	equ	0xFE5
   595                           preinc1	equ	0xFE4
   596                           plusw1	equ	0xFE3
   597                           fsr1h	equ	0xFE2
   598                           fsr1l	equ	0xFE1
   599                           bsr	equ	0xFE0
   600                           indf2	equ	0xFDF
   601                           postinc2	equ	0xFDE
   602                           postdec2	equ	0xFDD
   603                           preinc2	equ	0xFDC
   604                           plusw2	equ	0xFDB
   605                           fsr2h	equ	0xFDA
   606                           fsr2l	equ	0xFD9
   607                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       4       1        3.2%
BITBIGSFRhhl        2B      0       0      19        0.0%
BITBIGSFRhhhlh      18      0       0      17        0.0%
BITBIGSFRhhhll      13      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlhhh        6      0       0      21        0.0%
BITBIGSFRlhlh        6      0       0      23        0.0%
BITBIGSFRlhhl        1      0       0      22        0.0%
BITBIGSFRlhll        1      0       0      24        0.0%
BITBIGSFRhl          1      0       0      20        0.0%
BITBIGSFRll          1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      26        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 18 17:57:07 2023

                     l35 004C                       l36 00C8                       u10 0066  
                     u11 0062                       u20 0078                       u21 0074  
                     u30 0090                       u31 008C                       u40 00A6  
                     u41 00A2                       u50 00C2                       u51 00BE  
                    l800 0012                      l810 0036                      l802 002E  
                    l820 004E                      l812 0038                      l804 0030  
                    l830 00A6                      l822 0066                      l814 003A  
                    l806 0032                      l832 00AC                      l824 0078  
                    l816 003C                      l808 0034                      l834 00C2  
                    l826 007E                      l818 004A                      l828 0090  
                    _isr 0008                     ?_isr 0000                     _LATB 000F8A  
                   _LATD 000F8C                     i2l52 0118                     _TMR0 000FD6  
                   _cont 0001                     _main 0012                     btemp 0005  
                   start 000E             ___param_bank 000000                    ??_isr 0000  
                  ?_main 0000                    _T0CON 000FD5                    i2l840 00E2  
                  i2l850 00FE                    i2l842 00EA                    i2l852 0100  
                  i2l844 00EC                    i2l836 00D2                    i2l854 0104  
                  i2l846 00EE                    i2l838 00E0                    i2l856 0112  
                  i2l848 00F0                    i2l858 0116                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
                  ttemp5 0006                    ttemp6 0009                    ttemp7 000D  
                  status 000FD8                    wtemp8 0006          __initialization 011C  
           __end_of_main 00D0                   ??_main 0000            __activetblptr 000000  
                 _ADCON1 000FC1                   i2u6_40 00E0                   i2u6_41 00DC  
                 i2u7_40 00FE                   i2u7_41 00FA                   i2u8_40 0112  
                 i2u8_41 010E                   isa$std 000001               __accesstop 0080  
__end_of__initialization 0124            ___rparam_used 000001           __pcstackCOMRAM 0000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 011C  
                __ramtop 0600                  __ptext0 0012           __pintcode_body 00D0  
   end_of_initialization 0124                  int_func 00D0      start_initialization 011C  
            __end_of_isr 011C              __pbssCOMRAM 0001                __pintcode 0008  
               _LATDbits 000F8C              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000                 _contagem 0003  
               isa$xinst 000000                 int$flags 0005               _INTCONbits 000FF2  
               intlevel2 0000  
