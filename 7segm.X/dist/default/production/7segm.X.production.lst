

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jan 19 00:30:03 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.36
    18                           ; Generated 28/01/2022 GMT
    19                           ; 
    20                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _LATAbits	set	3977
    53  0000                     _PORTD	set	3971
    54  0000                     _PORTB	set	3969
    55  0000                     _LATA	set	3977
    56  0000                     _PORTA	set	3968
    57  0000                     _TRISA	set	3986
    58  0000                     _TRISD	set	3989
    59  0000                     _TRISB	set	3987
    60  0000                     _ADCON1	set	4033
    61  0000                     _LATD	set	3980
    62  0000                     _LATB	set	3978
    63  0000                     _T0CON	set	4053
    64  0000                     _INTCON3bits	set	4080
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCONbits	set	4082
    67  0000                     _TMR0	set	4054
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72  000068                     __pcinit:
    73                           	callstack 0
    74  000068                     start_initialization:
    75                           	callstack 0
    76  000068                     __initialization:
    77                           	callstack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (5 bytes)
    80  000068  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    81  00006A  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    82  00006C  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    83  00006E  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    84  000070  6A01               	clrf	__pbssCOMRAM& (0+255),c
    85  000072                     end_of_initialization:
    86                           	callstack 0
    87  000072                     __end_of__initialization:
    88                           	callstack 0
    89  000072  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    90  000074  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    91  000076  0E00               	movlw	low (__Lmediumconst shr (0+16))
    92  000078  6EF8               	movwf	tblptru,c
    93  00007A  0100               	movlb	0
    94  00007C  EF09  F000         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMRAM
    97  000001                     __pbssCOMRAM:
    98                           	callstack 0
    99  000001                     _flag:
   100                           	callstack 0
   101  000001                     	ds	2
   102  000003                     _count:
   103                           	callstack 0
   104  000003                     	ds	2
   105  000005                     _tmp:
   106                           	callstack 0
   107  000005                     	ds	1
   108                           
   109                           	psect	cstackCOMRAM
   110  000000                     __pcstackCOMRAM:
   111                           	callstack 0
   112  000000                     
   113                           ; 1 bytes @ 0x0
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 14 in file "main7seg.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   133 ;;      Params:         0       0       0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0
   136 ;;      Totals:         0       0       0       0       0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called: 1
   139 ;; This function calls:
   140 ;;		Nothing
   141 ;; This function is called by:
   142 ;;		Startup code after reset
   143 ;; This function uses a non-reentrant model
   144 ;;
   145                           
   146                           	psect	text0
   147  000012                     __ptext0:
   148                           	callstack 0
   149  000012                     _main:
   150                           	callstack 30
   151  000012                     
   152                           ;main7seg.c: 17: TRISA = 0b00000000;
   153  000012  0E00               	movlw	0
   154  000014  6E92               	movwf	146,c	;volatile
   155                           
   156                           ;main7seg.c: 18: TRISB = 0b00001111;
   157  000016  0E0F               	movlw	15
   158  000018  6E93               	movwf	147,c	;volatile
   159                           
   160                           ;main7seg.c: 19: TRISD = 0b00000000;
   161  00001A  0E00               	movlw	0
   162  00001C  6E95               	movwf	149,c	;volatile
   163                           
   164                           ;main7seg.c: 20: PORTA = 0;
   165  00001E  0E00               	movlw	0
   166  000020  6E80               	movwf	128,c	;volatile
   167                           
   168                           ;main7seg.c: 21: LATA = 0;
   169  000022  0E00               	movlw	0
   170  000024  6E89               	movwf	137,c	;volatile
   171                           
   172                           ;main7seg.c: 22: PORTB = 0;
   173  000026  0E00               	movlw	0
   174  000028  6E81               	movwf	129,c	;volatile
   175                           
   176                           ;main7seg.c: 23: LATB = 0;
   177  00002A  0E00               	movlw	0
   178  00002C  6E8A               	movwf	138,c	;volatile
   179                           
   180                           ;main7seg.c: 24: PORTD = 0;
   181  00002E  0E00               	movlw	0
   182  000030  6E83               	movwf	131,c	;volatile
   183                           
   184                           ;main7seg.c: 25: LATD = 0;
   185  000032  0E00               	movlw	0
   186  000034  6E8C               	movwf	140,c	;volatile
   187                           
   188                           ;main7seg.c: 27: ADCON1 = 0b00001111;
   189  000036  0E0F               	movlw	15
   190  000038  6EC1               	movwf	193,c	;volatile
   191  00003A                     
   192                           ;main7seg.c: 29: INTCON2bits.RBPU = 0;
   193  00003A  9EF1               	bcf	241,7,c	;volatile
   194  00003C                     
   195                           ;main7seg.c: 31: INTCON2bits.INTEDG0 = 0;
   196  00003C  9CF1               	bcf	241,6,c	;volatile
   197  00003E                     
   198                           ;main7seg.c: 33: INTCON3bits.INT1IF = 0;
   199  00003E  90F0               	bcf	240,0,c	;volatile
   200  000040                     
   201                           ;main7seg.c: 34: INTCON3bits.INT1IE = 1;
   202  000040  86F0               	bsf	240,3,c	;volatile
   203  000042                     
   204                           ;main7seg.c: 36: INTCON3bits.INT2IF = 0;
   205  000042  92F0               	bcf	240,1,c	;volatile
   206  000044                     
   207                           ;main7seg.c: 37: INTCON3bits.INT2IE = 1;
   208  000044  88F0               	bsf	240,4,c	;volatile
   209  000046                     
   210                           ;main7seg.c: 39: INTCONbits.INT0IF = 0;
   211  000046  92F2               	bcf	242,1,c	;volatile
   212  000048                     
   213                           ;main7seg.c: 40: INTCONbits.INT0IE = 1;
   214  000048  88F2               	bsf	242,4,c	;volatile
   215  00004A                     
   216                           ;main7seg.c: 42: INTCONbits.TMR0IF = 0;
   217  00004A  94F2               	bcf	242,2,c	;volatile
   218  00004C                     
   219                           ;main7seg.c: 43: INTCONbits.TMR0IE = 1;
   220  00004C  8AF2               	bsf	242,5,c	;volatile
   221                           
   222                           ;main7seg.c: 46: T0CON = 0b11000101;
   223  00004E  0EC5               	movlw	197
   224  000050  6ED5               	movwf	213,c	;volatile
   225                           
   226                           ;main7seg.c: 47: TMR0 = 131;
   227  000052  0E00               	movlw	0
   228  000054  6ED7               	movwf	215,c	;volatile
   229  000056  0E83               	movlw	131
   230  000058  6ED6               	movwf	214,c	;volatile
   231  00005A                     
   232                           ;main7seg.c: 48: (INTCONbits.GIE = 1);
   233  00005A  8EF2               	bsf	242,7,c	;volatile
   234  00005C                     
   235                           ;main7seg.c: 50: LATAbits.LATA2 = 1;
   236  00005C  8489               	bsf	137,2,c	;volatile
   237  00005E                     l65:
   238  00005E  0004               	clrwdt		;# 
   239  000060  EF2F  F000         	goto	l65
   240  000064  EF07  F000         	goto	start
   241  000068                     __end_of_main:
   242                           	callstack 0
   243                           
   244 ;; *************** function _isr *****************
   245 ;; Defined at:
   246 ;;		line 62 in file "main7seg.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		None
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   260 ;;      Params:         0       0       0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels used: 1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		Interrupt level 2
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	intcode
   274  000008                     __pintcode:
   275                           	callstack 0
   276  000008                     _isr:
   277                           	callstack 30
   278                           
   279                           ;incstack = 0
   280  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   281  00000A  ED40  F000         	call	int_func,f	;refresh shadow registers
   282                           
   283                           	psect	intcode_body
   284  000080                     __pintcode_body:
   285                           	callstack 30
   286  000080                     int_func:
   287                           	callstack 30
   288  000080  0006               	pop		; remove dummy address from shadow register refresh
   289  000082  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  000084  0011               	retfie		f
   291  000086                     __end_of_isr:
   292                           	callstack 0
   293  0000                     
   294                           	psect	rparam
   295  0000                     
   296                           	psect	temp
   297  000006                     btemp:
   298                           	callstack 0
   299  000006                     	ds	1
   300  0000                     int$flags	set	btemp
   301  0000                     wtemp8	set	btemp+1
   302  0000                     ttemp5	set	btemp+1
   303  0000                     ttemp6	set	btemp+4
   304  0000                     ttemp7	set	btemp+8
   305                           
   306                           	psect	idloc
   307                           
   308                           ;Config register IDLOC0 @ 0x200000
   309                           ;	unspecified, using default values
   310  200000                     	org	2097152
   311  200000  FF                 	db	255
   312                           
   313                           ;Config register IDLOC1 @ 0x200001
   314                           ;	unspecified, using default values
   315  200001                     	org	2097153
   316  200001  FF                 	db	255
   317                           
   318                           ;Config register IDLOC2 @ 0x200002
   319                           ;	unspecified, using default values
   320  200002                     	org	2097154
   321  200002  FF                 	db	255
   322                           
   323                           ;Config register IDLOC3 @ 0x200003
   324                           ;	unspecified, using default values
   325  200003                     	org	2097155
   326  200003  FF                 	db	255
   327                           
   328                           ;Config register IDLOC4 @ 0x200004
   329                           ;	unspecified, using default values
   330  200004                     	org	2097156
   331  200004  FF                 	db	255
   332                           
   333                           ;Config register IDLOC5 @ 0x200005
   334                           ;	unspecified, using default values
   335  200005                     	org	2097157
   336  200005  FF                 	db	255
   337                           
   338                           ;Config register IDLOC6 @ 0x200006
   339                           ;	unspecified, using default values
   340  200006                     	org	2097158
   341  200006  FF                 	db	255
   342                           
   343                           ;Config register IDLOC7 @ 0x200007
   344                           ;	unspecified, using default values
   345  200007                     	org	2097159
   346  200007  FF                 	db	255
   347                           
   348                           	psect	config
   349                           
   350                           ; Padding undefined space
   351  300000                     	org	3145728
   352  300000  FF                 	db	255
   353                           
   354                           ;Config register CONFIG1H @ 0x300001
   355                           ;	Oscillator Selection bits
   356                           ;	OSC = HS, HS oscillator
   357                           ;	Fail-Safe Clock Monitor Enable bit
   358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   359                           ;	Internal/External Oscillator Switchover bit
   360                           ;	IESO = OFF, Oscillator Switchover mode disabled
   361  300001                     	org	3145729
   362  300001  02                 	db	2
   363                           
   364                           ;Config register CONFIG2L @ 0x300002
   365                           ;	Power-up Timer Enable bit
   366                           ;	PWRT = OFF, PWRT disabled
   367                           ;	Brown-out Reset Enable bits
   368                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   369                           ;	Brown Out Reset Voltage bits
   370                           ;	BORV = 3, Minimum setting
   371  300002                     	org	3145730
   372  300002  1F                 	db	31
   373                           
   374                           ;Config register CONFIG2H @ 0x300003
   375                           ;	Watchdog Timer Enable bit
   376                           ;	WDT = ON, WDT enabled
   377                           ;	Watchdog Timer Postscale Select bits
   378                           ;	WDTPS = 32768, 1:32768
   379  300003                     	org	3145731
   380  300003  1F                 	db	31
   381                           
   382                           ; Padding undefined space
   383  300004                     	org	3145732
   384  300004  FF                 	db	255
   385                           
   386                           ;Config register CONFIG3H @ 0x300005
   387                           ;	CCP2 MUX bit
   388                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   389                           ;	PORTB A/D Enable bit
   390                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   391                           ;	Low-Power Timer1 Oscillator Enable bit
   392                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   393                           ;	MCLR Pin Enable bit
   394                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   395  300005                     	org	3145733
   396  300005  01                 	db	1
   397                           
   398                           ;Config register CONFIG4L @ 0x300006
   399                           ;	Stack Full/Underflow Reset Enable bit
   400                           ;	STVREN = ON, Stack full/underflow will cause Reset
   401                           ;	Single-Supply ICSP Enable bit
   402                           ;	LVP = ON, Single-Supply ICSP enabled
   403                           ;	Extended Instruction Set Enable bit
   404                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   405                           ;	Background Debugger Enable bit
   406                           ;	DEBUG = 0x1, unprogrammed default
   407  300006                     	org	3145734
   408  300006  85                 	db	133
   409                           
   410                           ; Padding undefined space
   411  300007                     	org	3145735
   412  300007  FF                 	db	255
   413                           
   414                           ;Config register CONFIG5L @ 0x300008
   415                           ;	Code Protection bit
   416                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   417                           ;	Code Protection bit
   418                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   419                           ;	Code Protection bit
   420                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   421                           ;	Code Protection bit
   422                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   423  300008                     	org	3145736
   424  300008  0F                 	db	15
   425                           
   426                           ;Config register CONFIG5H @ 0x300009
   427                           ;	Boot Block Code Protection bit
   428                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   429                           ;	Data EEPROM Code Protection bit
   430                           ;	CPD = OFF, Data EEPROM not code-protected
   431  300009                     	org	3145737
   432  300009  C0                 	db	192
   433                           
   434                           ;Config register CONFIG6L @ 0x30000A
   435                           ;	Write Protection bit
   436                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   437                           ;	Write Protection bit
   438                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   439                           ;	Write Protection bit
   440                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   441                           ;	Write Protection bit
   442                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   443  30000A                     	org	3145738
   444  30000A  0F                 	db	15
   445                           
   446                           ;Config register CONFIG6H @ 0x30000B
   447                           ;	Configuration Register Write Protection bit
   448                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   449                           ;	Boot Block Write Protection bit
   450                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   451                           ;	Data EEPROM Write Protection bit
   452                           ;	WRTD = OFF, Data EEPROM not write-protected
   453  30000B                     	org	3145739
   454  30000B  E0                 	db	224
   455                           
   456                           ;Config register CONFIG7L @ 0x30000C
   457                           ;	Table Read Protection bit
   458                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   459                           ;	Table Read Protection bit
   460                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   461                           ;	Table Read Protection bit
   462                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   463                           ;	Table Read Protection bit
   464                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   465  30000C                     	org	3145740
   466  30000C  0F                 	db	15
   467                           
   468                           ;Config register CONFIG7H @ 0x30000D
   469                           ;	Boot Block Table Read Protection bit
   470                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   471  30000D                     	org	3145741
   472  30000D  40                 	db	64
   473                           tosu	equ	0xFFF
   474                           tosh	equ	0xFFE
   475                           tosl	equ	0xFFD
   476                           stkptr	equ	0xFFC
   477                           pclatu	equ	0xFFB
   478                           pclath	equ	0xFFA
   479                           pcl	equ	0xFF9
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           prodh	equ	0xFF4
   485                           prodl	equ	0xFF3
   486                           indf0	equ	0xFEF
   487                           postinc0	equ	0xFEE
   488                           postdec0	equ	0xFED
   489                           preinc0	equ	0xFEC
   490                           plusw0	equ	0xFEB
   491                           fsr0h	equ	0xFEA
   492                           fsr0l	equ	0xFE9
   493                           wreg	equ	0xFE8
   494                           indf1	equ	0xFE7
   495                           postinc1	equ	0xFE6
   496                           postdec1	equ	0xFE5
   497                           preinc1	equ	0xFE4
   498                           plusw1	equ	0xFE3
   499                           fsr1h	equ	0xFE2
   500                           fsr1l	equ	0xFE1
   501                           bsr	equ	0xFE0
   502                           indf2	equ	0xFDF
   503                           postinc2	equ	0xFDE
   504                           postdec2	equ	0xFDD
   505                           preinc2	equ	0xFDC
   506                           plusw2	equ	0xFDB
   507                           fsr2h	equ	0xFDA
   508                           fsr2l	equ	0xFD9
   509                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       5       1        4.0%
BITBIGSFRhhl        2B      0       0      19        0.0%
BITBIGSFRhhhlh      18      0       0      17        0.0%
BITBIGSFRhhhll      13      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlhh         5      0       0      21        0.0%
BITBIGSFRllh         5      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      22        0.0%
BITBIGSFRhl          1      0       0      20        0.0%
BITBIGSFRlll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      25        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jan 19 00:30:03 2023

                     l65 005E                      l831 003C                      l841 0046  
                    l833 003E                      l851 005C                      l843 0048  
                    l835 0040                      l827 0012                      l845 004A  
                    l837 0042                      l829 003A                      l847 004C  
                    l839 0044                      l849 005A                      _isr 0008  
                    _tmp 0005                     ?_isr 0000                     _LATA 000F89  
                   _LATB 000F8A                     _LATD 000F8C                     i2l73 0082  
                   _TMR0 000FD6                     _flag 0001                     _main 0012  
                   btemp 0006                     start 000E             ___param_bank 000000  
                  ??_isr 0000                    ?_main 0000                    _T0CON 000FD5  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _count 0003                    ttemp5 0007                    ttemp6 000A  
                  ttemp7 000E                    wtemp8 0007          __initialization 0068  
           __end_of_main 0068                   ??_main 0000            __activetblptr 000002  
                 _ADCON1 000FC1                   isa$std 000001                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0072            ___rparam_used 000001  
         __pcstackCOMRAM 0000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0068                  __ramtop 0600                  __ptext0 0012  
         __pintcode_body 0080     end_of_initialization 0072            __Lmediumconst 0000  
                int_func 0080      start_initialization 0068              __end_of_isr 0086  
            __pbssCOMRAM 0001                __pintcode 0008                 _LATAbits 000F89  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 0006  
             _INTCONbits 000FF2                 intlevel2 0000  
