

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 18:12:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _LATBbits	set	3978
    53   000000                     _LATAbits	set	3977
    54   000000                     _PORTD	set	3971
    55   000000                     _PORTB	set	3969
    56   000000                     _LATA	set	3977
    57   000000                     _PORTA	set	3968
    58   000000                     _TRISA	set	3986
    59   000000                     _TRISD	set	3989
    60   000000                     _TRISB	set	3987
    61   000000                     _ADCON1	set	4033
    62   000000                     _LATD	set	3980
    63   000000                     _LATB	set	3978
    64   000000                     _T0CON	set	4053
    65   000000                     _INTCON3bits	set	4080
    66   000000                     _INTCON2bits	set	4081
    67   000000                     _INTCONbits	set	4082
    68   000000                     _TMR0	set	4054
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73   000272                     __pcinit:
    74                           	callstack 0
    75   000272                     start_initialization:
    76                           	callstack 0
    77   000272                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (5 bytes)
    81   000272  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    82   000274  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    83   000276  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    84   000278  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85   00027A  6A01               	clrf	__pbssCOMRAM& (0+255),c
    86   00027C                     end_of_initialization:
    87                           	callstack 0
    88   00027C                     __end_of__initialization:
    89                           	callstack 0
    90   00027C  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91   00027E  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92   000280  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93   000282  6EF8               	movwf	tblptru,c
    94   000284  0100               	movlb	0
    95   000286  EF0E  F001         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	bssCOMRAM
    98   000001                     __pbssCOMRAM:
    99                           	callstack 0
   100   000001                     _flag:
   101                           	callstack 0
   102   000001                     	ds	2
   103   000003                     _count:
   104                           	callstack 0
   105   000003                     	ds	2
   106   000005                     _tmp:
   107                           	callstack 0
   108   000005                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111   000006                     __pcstackCOMRAM:
   112                           	callstack 0
   113   000006                     display7s@v:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x0
   117   000006                     	ds	1
   118   000007                     ??_isr:
   119                           
   120                           ; 1 bytes @ 0x1
   121   000007                     	ds	2
   122   000009                     
   123                           ; 1 bytes @ 0x3
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 18 in file "main7seg.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;		None
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, status,2
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   143 ;;      Params:         0       0       0       0       0       0       0
   144 ;;      Locals:         0       0       0       0       0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0
   146 ;;      Totals:         0       0       0       0       0       0       0
   147 ;;Total ram usage:        0 bytes
   148 ;; Hardware stack levels required when called: 2
   149 ;; This function calls:
   150 ;;		Nothing
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157   00021C                     __ptext0:
   158                           	callstack 0
   159   00021C                     _main:
   160                           	callstack 29
   161   00021C                     
   162                           ;main7seg.c: 21: TRISA = 0b00000000;
   163   00021C  0E00               	movlw	0
   164   00021E  6E92               	movwf	146,c	;volatile
   165                           
   166                           ;main7seg.c: 22: TRISB = 0b00001111;
   167   000220  0E0F               	movlw	15
   168   000222  6E93               	movwf	147,c	;volatile
   169                           
   170                           ;main7seg.c: 23: TRISD = 0b00000000;
   171   000224  0E00               	movlw	0
   172   000226  6E95               	movwf	149,c	;volatile
   173                           
   174                           ;main7seg.c: 24: PORTA = 0;
   175   000228  0E00               	movlw	0
   176   00022A  6E80               	movwf	128,c	;volatile
   177                           
   178                           ;main7seg.c: 25: LATA = 0;
   179   00022C  0E00               	movlw	0
   180   00022E  6E89               	movwf	137,c	;volatile
   181                           
   182                           ;main7seg.c: 26: PORTB = 0;
   183   000230  0E00               	movlw	0
   184   000232  6E81               	movwf	129,c	;volatile
   185                           
   186                           ;main7seg.c: 27: LATB = 0;
   187   000234  0E00               	movlw	0
   188   000236  6E8A               	movwf	138,c	;volatile
   189                           
   190                           ;main7seg.c: 28: PORTD = 0;
   191   000238  0E00               	movlw	0
   192   00023A  6E83               	movwf	131,c	;volatile
   193                           
   194                           ;main7seg.c: 29: LATD = 0;
   195   00023C  0E00               	movlw	0
   196   00023E  6E8C               	movwf	140,c	;volatile
   197                           
   198                           ;main7seg.c: 31: ADCON1 = 0b00001111;
   199   000240  0E0F               	movlw	15
   200   000242  6EC1               	movwf	193,c	;volatile
   201   000244                     
   202                           ;main7seg.c: 33: INTCON2bits.RBPU = 0;
   203   000244  9EF1               	bcf	241,7,c	;volatile
   204   000246                     
   205                           ;main7seg.c: 35: INTCON2bits.INTEDG0 = 0;
   206   000246  9CF1               	bcf	241,6,c	;volatile
   207   000248                     
   208                           ;main7seg.c: 37: INTCON3bits.INT1IF = 0;
   209   000248  90F0               	bcf	240,0,c	;volatile
   210   00024A                     
   211                           ;main7seg.c: 38: INTCON3bits.INT1IE = 1;
   212   00024A  86F0               	bsf	240,3,c	;volatile
   213   00024C                     
   214                           ;main7seg.c: 40: INTCON3bits.INT2IF = 0;
   215   00024C  92F0               	bcf	240,1,c	;volatile
   216   00024E                     
   217                           ;main7seg.c: 41: INTCON3bits.INT2IE = 1;
   218   00024E  88F0               	bsf	240,4,c	;volatile
   219   000250                     
   220                           ;main7seg.c: 43: INTCONbits.INT0IF = 0;
   221   000250  92F2               	bcf	242,1,c	;volatile
   222   000252                     
   223                           ;main7seg.c: 44: INTCONbits.INT0IE = 1;
   224   000252  88F2               	bsf	242,4,c	;volatile
   225   000254                     
   226                           ;main7seg.c: 46: INTCONbits.TMR0IF = 0;
   227   000254  94F2               	bcf	242,2,c	;volatile
   228   000256                     
   229                           ;main7seg.c: 47: INTCONbits.TMR0IE = 1;
   230   000256  8AF2               	bsf	242,5,c	;volatile
   231                           
   232                           ;main7seg.c: 50: T0CON = 0b11000101;
   233   000258  0EC5               	movlw	197
   234   00025A  6ED5               	movwf	213,c	;volatile
   235                           
   236                           ;main7seg.c: 51: TMR0 = 131;
   237   00025C  0E00               	movlw	0
   238   00025E  6ED7               	movwf	215,c	;volatile
   239   000260  0E83               	movlw	131
   240   000262  6ED6               	movwf	214,c	;volatile
   241   000264                     
   242                           ;main7seg.c: 52: (INTCONbits.GIE = 1);
   243   000264  8EF2               	bsf	242,7,c	;volatile
   244   000266                     
   245                           ;main7seg.c: 54: LATAbits.LATA2 = 1;
   246   000266  8489               	bsf	137,2,c	;volatile
   247   000268                     l71:
   248   000268  0004               	clrwdt		;# 
   249   00026A  EF34  F001         	goto	l71
   250   00026E  EF07  F000         	goto	start
   251   000272                     __end_of_main:
   252                           	callstack 0
   253                           
   254 ;; *************** function _isr *****************
   255 ;; Defined at:
   256 ;;		line 66 in file "main7seg.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0       0       0
   273 ;;      Totals:         2       0       0       0       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; Hardware stack levels required when called: 1
   277 ;; This function calls:
   278 ;;		_display7s
   279 ;; This function is called by:
   280 ;;		Interrupt level 2
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	intcode
   285   000008                     __pintcode:
   286                           	callstack 0
   287   000008                     _isr:
   288                           	callstack 29
   289                           
   290                           ;incstack = 0
   291   000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   292   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   293                           
   294                           	psect	intcode_body
   295   000012                     __pintcode_body:
   296                           	callstack 29
   297   000012                     int_func:
   298                           	callstack 29
   299   000012  0006               	pop		; remove dummy address from shadow register refresh
   300   000014                     
   301                           ;main7seg.c: 67: if (INTCONbits.INT0F == 1)
   302   000014  A2F2               	btfss	242,1,c	;volatile
   303   000016  EF0F  F000         	goto	i2u1_41
   304   00001A  EF11  F000         	goto	i2u1_40
   305   00001E                     i2u1_41:
   306   00001E  EF18  F000         	goto	i2l940
   307   000022                     i2u1_40:
   308   000022                     
   309                           ;main7seg.c: 68: {;main7seg.c: 69: INTCONbits.INT0F = 0;
   310   000022  92F2               	bcf	242,1,c	;volatile
   311   000024                     
   312                           ;main7seg.c: 70: tmp = 0;
   313   000024  0E00               	movlw	0
   314   000026  6E05               	movwf	_tmp^0,c
   315                           
   316                           ;main7seg.c: 71: flag = 1;
   317   000028  0E00               	movlw	0
   318   00002A  6E02               	movwf	(_flag+1)^0,c
   319   00002C  0E01               	movlw	1
   320   00002E  6E01               	movwf	_flag^0,c
   321   000030                     i2l940:
   322                           
   323                           ;main7seg.c: 72: };main7seg.c: 73: if(INTCON3bits.INT2IF == 1)
   324   000030  A2F0               	btfss	240,1,c	;volatile
   325   000032  EF1D  F000         	goto	i2u2_41
   326   000036  EF1F  F000         	goto	i2u2_40
   327   00003A                     i2u2_41:
   328   00003A  EF25  F000         	goto	i2l948
   329   00003E                     i2u2_40:
   330   00003E                     
   331                           ;main7seg.c: 74: {;main7seg.c: 75: INTCON3bits.INT2IF = 0;
   332   00003E  92F0               	bcf	240,1,c	;volatile
   333   000040                     
   334                           ;main7seg.c: 76: LATD = display7s(tmp);
   335   000040  5005               	movf	_tmp^0,w,c
   336   000042  EC94  F000         	call	_display7s
   337   000046  6E8C               	movwf	140,c	;volatile
   338   000048                     
   339                           ;main7seg.c: 77: tmp++;
   340   000048  2A05               	incf	_tmp^0,f,c
   341   00004A                     i2l948:
   342                           
   343                           ;main7seg.c: 78: };main7seg.c: 79: if(INTCON3bits.INT1IF == 1)
   344   00004A  A0F0               	btfss	240,0,c	;volatile
   345   00004C  EF2A  F000         	goto	i2u3_41
   346   000050  EF2C  F000         	goto	i2u3_40
   347   000054                     i2u3_41:
   348   000054  EF33  F000         	goto	i2l956
   349   000058                     i2u3_40:
   350   000058                     
   351                           ;main7seg.c: 80: {;main7seg.c: 81: INTCON3bits.INT1IF = 0;
   352   000058  90F0               	bcf	240,0,c	;volatile
   353   00005A                     
   354                           ;main7seg.c: 82: tmp = tmp - 1;
   355   00005A  0405               	decf	_tmp^0,w,c
   356   00005C  6E05               	movwf	_tmp^0,c
   357   00005E                     
   358                           ;main7seg.c: 83: LATD = display7s(tmp);
   359   00005E  5005               	movf	_tmp^0,w,c
   360   000060  EC94  F000         	call	_display7s
   361   000064  6E8C               	movwf	140,c	;volatile
   362   000066                     i2l956:
   363                           
   364                           ;main7seg.c: 84: };main7seg.c: 85: if (INTCONbits.TMR0IF == 1)
   365   000066  A4F2               	btfss	242,2,c	;volatile
   366   000068  EF38  F000         	goto	i2u4_41
   367   00006C  EF3A  F000         	goto	i2u4_40
   368   000070                     i2u4_41:
   369   000070  EF92  F000         	goto	i2l86
   370   000074                     i2u4_40:
   371   000074                     
   372                           ;main7seg.c: 86: {;main7seg.c: 87: INTCONbits.TMR0IF = 0;
   373   000074  94F2               	bcf	242,2,c	;volatile
   374   000076                     
   375                           ;main7seg.c: 88: TMR0 = 131;
   376   000076  0E00               	movlw	0
   377   000078  6ED7               	movwf	215,c	;volatile
   378   00007A  0E83               	movlw	131
   379   00007C  6ED6               	movwf	214,c	;volatile
   380   00007E                     
   381                           ;main7seg.c: 89: count ++;
   382   00007E  4A03               	infsnz	_count^0,f,c
   383   000080  2A04               	incf	(_count+1)^0,f,c
   384   000082                     
   385                           ;main7seg.c: 90: if (count == 250)
   386   000082  0EFA               	movlw	250
   387   000084  1803               	xorwf	_count^0,w,c
   388   000086  1004               	iorwf	(_count+1)^0,w,c
   389   000088  A4D8               	btfss	status,2,c
   390   00008A  EF49  F000         	goto	i2u5_41
   391   00008E  EF4B  F000         	goto	i2u5_40
   392   000092                     i2u5_41:
   393   000092  EF92  F000         	goto	i2l86
   394   000096                     i2u5_40:
   395   000096                     
   396                           ;main7seg.c: 91: {;main7seg.c: 92: count = 0;
   397   000096  0E00               	movlw	0
   398   000098  6E04               	movwf	(_count+1)^0,c
   399   00009A  0E00               	movlw	0
   400   00009C  6E03               	movwf	_count^0,c
   401   00009E                     
   402                           ;main7seg.c: 93: LATBbits.LATB1 = ~LATBbits.LATB1;
   403   00009E  B28A               	btfsc	138,1,c	;volatile
   404   0000A0  EF54  F000         	goto	i2u6_41
   405   0000A4  EF57  F000         	goto	i2u6_40
   406   0000A8                     i2u6_41:
   407   0000A8  0E01               	movlw	1
   408   0000AA  EF58  F000         	goto	i2u6_46
   409   0000AE                     i2u6_40:
   410   0000AE  0E00               	movlw	0
   411   0000B0                     i2u6_46:
   412   0000B0  0AFF               	xorlw	255
   413   0000B2  6E07               	movwf	??_isr^0,c
   414   0000B4  4607               	rlncf	??_isr^0,f,c
   415   0000B6  508A               	movf	138,w,c	;volatile
   416   0000B8  1807               	xorwf	??_isr^0,w,c
   417   0000BA  0BFD               	andlw	-3
   418   0000BC  1807               	xorwf	??_isr^0,w,c
   419   0000BE  6E8A               	movwf	138,c	;volatile
   420   0000C0                     
   421                           ;main7seg.c: 94: LATD = display7s(tmp);
   422   0000C0  5005               	movf	_tmp^0,w,c
   423   0000C2  EC94  F000         	call	_display7s
   424   0000C6  6E8C               	movwf	140,c	;volatile
   425   0000C8                     
   426                           ;main7seg.c: 95: tmp++;
   427   0000C8  2A05               	incf	_tmp^0,f,c
   428   0000CA                     
   429                           ;main7seg.c: 96: if(tmp == 10 && flag == 1)
   430   0000CA  0E0A               	movlw	10
   431   0000CC  1805               	xorwf	_tmp^0,w,c
   432   0000CE  A4D8               	btfss	status,2,c
   433   0000D0  EF6C  F000         	goto	i2u7_41
   434   0000D4  EF6E  F000         	goto	i2u7_40
   435   0000D8                     i2u7_41:
   436   0000D8  EF88  F000         	goto	i2l984
   437   0000DC                     i2u7_40:
   438   0000DC  0401               	decf	_flag^0,w,c
   439   0000DE  1002               	iorwf	(_flag+1)^0,w,c
   440   0000E0  A4D8               	btfss	status,2,c
   441   0000E2  EF75  F000         	goto	i2u8_41
   442   0000E6  EF77  F000         	goto	i2u8_40
   443   0000EA                     i2u8_41:
   444   0000EA  EF88  F000         	goto	i2l984
   445   0000EE                     i2u8_40:
   446   0000EE                     
   447                           ;main7seg.c: 97: {;main7seg.c: 98: INTCONbits.TMR0IE = 0;
   448   0000EE  9AF2               	bcf	242,5,c	;volatile
   449   0000F0                     
   450                           ;main7seg.c: 99: _delaywdt((unsigned long)((1000)*(8000000/4000.0)));
   451   0000F0  0E08               	movlw	8
   452   0000F2  6E08               	movwf	(??_isr+1)^0,c
   453   0000F4  0E9E               	movlw	158
   454   0000F6  6E07               	movwf	??_isr^0,c
   455   0000F8  0E4C               	movlw	76
   456   0000FA                     i2u10_47:
   457   0000FA  0004               	clrwdt	
   458   0000FC  2EE8               	decfsz	wreg,f,c
   459   0000FE  D7FD               	bra	i2u10_47
   460   000100  2E07               	decfsz	??_isr^0,f,c
   461   000102  D7FB               	bra	i2u10_47
   462   000104  2E08               	decfsz	(??_isr+1)^0,f,c
   463   000106  D7F9               	bra	i2u10_47
   464   000108                     
   465                           ;main7seg.c: 100: LATD = display7s(0);
   466   000108  0E00               	movlw	0
   467   00010A  EC94  F000         	call	_display7s
   468   00010E  6E8C               	movwf	140,c	;volatile
   469   000110                     i2l984:
   470                           
   471                           ;main7seg.c: 101: };main7seg.c: 102: if (tmp > 15)
   472   000110  0E0F               	movlw	15
   473   000112  6405               	cpfsgt	_tmp^0,c
   474   000114  EF8E  F000         	goto	i2u9_41
   475   000118  EF90  F000         	goto	i2u9_40
   476   00011C                     i2u9_41:
   477   00011C  EF92  F000         	goto	i2l86
   478   000120                     i2u9_40:
   479   000120                     
   480                           ;main7seg.c: 103: {;main7seg.c: 104: tmp = 0;
   481   000120  0E00               	movlw	0
   482   000122  6E05               	movwf	_tmp^0,c
   483   000124                     i2l86:
   484   000124  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   485   000126  0011               	retfie		f
   486   000128                     __end_of_isr:
   487                           	callstack 0
   488                           
   489 ;; *************** function _display7s *****************
   490 ;; Defined at:
   491 ;;		line 11 in file "display7s.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  v               1    wreg     unsigned char 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  v               1    0[COMRAM] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      unsigned char 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         0       0       0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0
   508 ;;      Totals:         1       0       0       0       0       0       0
   509 ;;Total ram usage:        1 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_isr
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text2
   519   000128                     __ptext2:
   520                           	callstack 0
   521   000128                     _display7s:
   522                           	callstack 29
   523                           
   524                           ;incstack = 0
   525                           ;display7s@v stored from wreg
   526   000128  6E06               	movwf	display7s@v^0,c
   527   00012A                     
   528                           ;display7s.c: 13: switch(v)
   529   00012A  EFCA  F000         	goto	i2l906
   530   00012E                     i2l836:
   531                           
   532                           ;display7s.c: 16: return 0x3F;
   533   00012E  0E3F               	movlw	63
   534   000130  EF0D  F001         	goto	i2l5
   535   000134                     i2l840:
   536                           
   537                           ;display7s.c: 18: return 0x06;
   538   000134  0E06               	movlw	6
   539   000136  EF0D  F001         	goto	i2l5
   540   00013A                     i2l844:
   541                           
   542                           ;display7s.c: 20: return 0x5B;
   543   00013A  0E5B               	movlw	91
   544   00013C  EF0D  F001         	goto	i2l5
   545   000140                     i2l848:
   546                           
   547                           ;display7s.c: 22: return 0x4F;
   548   000140  0E4F               	movlw	79
   549   000142  EF0D  F001         	goto	i2l5
   550   000146                     i2l852:
   551                           
   552                           ;display7s.c: 24: return 0x66;
   553   000146  0E66               	movlw	102
   554   000148  EF0D  F001         	goto	i2l5
   555   00014C                     i2l856:
   556                           
   557                           ;display7s.c: 26: return 0x6D;
   558   00014C  0E6D               	movlw	109
   559   00014E  EF0D  F001         	goto	i2l5
   560   000152                     i2l860:
   561                           
   562                           ;display7s.c: 28: return 0x7D;
   563   000152  0E7D               	movlw	125
   564   000154  EF0D  F001         	goto	i2l5
   565   000158                     i2l864:
   566                           
   567                           ;display7s.c: 30: return 0x07;
   568   000158  0E07               	movlw	7
   569   00015A  EF0D  F001         	goto	i2l5
   570   00015E                     i2l868:
   571                           
   572                           ;display7s.c: 32: return 0x7F;
   573   00015E  0E7F               	movlw	127
   574   000160  EF0D  F001         	goto	i2l5
   575   000164                     i2l872:
   576                           
   577                           ;display7s.c: 34: return 0x6F;
   578   000164  0E6F               	movlw	111
   579   000166  EF0D  F001         	goto	i2l5
   580   00016A                     i2l876:
   581                           
   582                           ;display7s.c: 36: return 0x77;
   583   00016A  0E77               	movlw	119
   584   00016C  EF0D  F001         	goto	i2l5
   585   000170                     i2l880:
   586                           
   587                           ;display7s.c: 38: return 0x7c;
   588   000170  0E7C               	movlw	124
   589   000172  EF0D  F001         	goto	i2l5
   590   000176                     i2l884:
   591                           
   592                           ;display7s.c: 40: return 0x58;
   593   000176  0E58               	movlw	88
   594   000178  EF0D  F001         	goto	i2l5
   595   00017C                     i2l888:
   596                           
   597                           ;display7s.c: 42: return 0x5E;
   598   00017C  0E5E               	movlw	94
   599   00017E  EF0D  F001         	goto	i2l5
   600   000182                     i2l892:
   601                           
   602                           ;display7s.c: 44: return 0x79;
   603   000182  0E79               	movlw	121
   604   000184  EF0D  F001         	goto	i2l5
   605   000188                     i2l896:
   606                           
   607                           ;display7s.c: 46: return 0x71;
   608   000188  0E71               	movlw	113
   609   00018A  EF0D  F001         	goto	i2l5
   610   00018E                     i2l900:
   611                           
   612                           ;display7s.c: 48: return 0;
   613   00018E  0E00               	movlw	0
   614   000190  EF0D  F001         	goto	i2l5
   615   000194                     i2l906:
   616   000194  5006               	movf	display7s@v^0,w,c
   617                           
   618                           ; Switch size 1, requested type "simple"
   619                           ; Number of cases is 16, Range of values is 0 to 15
   620                           ; switch strategies available:
   621                           ; Name         Instructions Cycles
   622                           ; simple_byte           49    25 (average)
   623                           ;	Chosen strategy is simple_byte
   624   000196  0A00               	xorlw	0	; case 0
   625   000198  B4D8               	btfsc	status,2,c
   626   00019A  EF97  F000         	goto	i2l836
   627   00019E  0A01               	xorlw	1	; case 1
   628   0001A0  B4D8               	btfsc	status,2,c
   629   0001A2  EF9A  F000         	goto	i2l840
   630   0001A6  0A03               	xorlw	3	; case 2
   631   0001A8  B4D8               	btfsc	status,2,c
   632   0001AA  EF9D  F000         	goto	i2l844
   633   0001AE  0A01               	xorlw	1	; case 3
   634   0001B0  B4D8               	btfsc	status,2,c
   635   0001B2  EFA0  F000         	goto	i2l848
   636   0001B6  0A07               	xorlw	7	; case 4
   637   0001B8  B4D8               	btfsc	status,2,c
   638   0001BA  EFA3  F000         	goto	i2l852
   639   0001BE  0A01               	xorlw	1	; case 5
   640   0001C0  B4D8               	btfsc	status,2,c
   641   0001C2  EFA6  F000         	goto	i2l856
   642   0001C6  0A03               	xorlw	3	; case 6
   643   0001C8  B4D8               	btfsc	status,2,c
   644   0001CA  EFA9  F000         	goto	i2l860
   645   0001CE  0A01               	xorlw	1	; case 7
   646   0001D0  B4D8               	btfsc	status,2,c
   647   0001D2  EFAC  F000         	goto	i2l864
   648   0001D6  0A0F               	xorlw	15	; case 8
   649   0001D8  B4D8               	btfsc	status,2,c
   650   0001DA  EFAF  F000         	goto	i2l868
   651   0001DE  0A01               	xorlw	1	; case 9
   652   0001E0  B4D8               	btfsc	status,2,c
   653   0001E2  EFB2  F000         	goto	i2l872
   654   0001E6  0A03               	xorlw	3	; case 10
   655   0001E8  B4D8               	btfsc	status,2,c
   656   0001EA  EFB5  F000         	goto	i2l876
   657   0001EE  0A01               	xorlw	1	; case 11
   658   0001F0  B4D8               	btfsc	status,2,c
   659   0001F2  EFB8  F000         	goto	i2l880
   660   0001F6  0A07               	xorlw	7	; case 12
   661   0001F8  B4D8               	btfsc	status,2,c
   662   0001FA  EFBB  F000         	goto	i2l884
   663   0001FE  0A01               	xorlw	1	; case 13
   664   000200  B4D8               	btfsc	status,2,c
   665   000202  EFBE  F000         	goto	i2l888
   666   000206  0A03               	xorlw	3	; case 14
   667   000208  B4D8               	btfsc	status,2,c
   668   00020A  EFC1  F000         	goto	i2l892
   669   00020E  0A01               	xorlw	1	; case 15
   670   000210  B4D8               	btfsc	status,2,c
   671   000212  EFC4  F000         	goto	i2l896
   672   000216  EFC7  F000         	goto	i2l900
   673   00021A                     i2l5:
   674   00021A  0012               	return		;funcret
   675   00021C                     __end_of_display7s:
   676                           	callstack 0
   677   000000                     
   678                           	psect	rparam
   679   000000                     
   680                           	psect	temp
   681   000009                     btemp:
   682                           	callstack 0
   683   000009                     	ds	1
   684   000000                     int$flags	set	btemp
   685   000000                     wtemp8	set	btemp+1
   686   000000                     ttemp5	set	btemp+1
   687   000000                     ttemp6	set	btemp+4
   688   000000                     ttemp7	set	btemp+8
   689                           
   690                           	psect	idloc
   691                           
   692                           ;Config register IDLOC0 @ 0x200000
   693                           ;	unspecified, using default values
   694   200000                     	org	2097152
   695   200000  FF                 	db	255
   696                           
   697                           ;Config register IDLOC1 @ 0x200001
   698                           ;	unspecified, using default values
   699   200001                     	org	2097153
   700   200001  FF                 	db	255
   701                           
   702                           ;Config register IDLOC2 @ 0x200002
   703                           ;	unspecified, using default values
   704   200002                     	org	2097154
   705   200002  FF                 	db	255
   706                           
   707                           ;Config register IDLOC3 @ 0x200003
   708                           ;	unspecified, using default values
   709   200003                     	org	2097155
   710   200003  FF                 	db	255
   711                           
   712                           ;Config register IDLOC4 @ 0x200004
   713                           ;	unspecified, using default values
   714   200004                     	org	2097156
   715   200004  FF                 	db	255
   716                           
   717                           ;Config register IDLOC5 @ 0x200005
   718                           ;	unspecified, using default values
   719   200005                     	org	2097157
   720   200005  FF                 	db	255
   721                           
   722                           ;Config register IDLOC6 @ 0x200006
   723                           ;	unspecified, using default values
   724   200006                     	org	2097158
   725   200006  FF                 	db	255
   726                           
   727                           ;Config register IDLOC7 @ 0x200007
   728                           ;	unspecified, using default values
   729   200007                     	org	2097159
   730   200007  FF                 	db	255
   731                           
   732                           	psect	config
   733                           
   734                           ; Padding undefined space
   735   300000                     	org	3145728
   736   300000  FF                 	db	255
   737                           
   738                           ;Config register CONFIG1H @ 0x300001
   739                           ;	Oscillator Selection bits
   740                           ;	OSC = HS, HS oscillator
   741                           ;	Fail-Safe Clock Monitor Enable bit
   742                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   743                           ;	Internal/External Oscillator Switchover bit
   744                           ;	IESO = OFF, Oscillator Switchover mode disabled
   745   300001                     	org	3145729
   746   300001  02                 	db	2
   747                           
   748                           ;Config register CONFIG2L @ 0x300002
   749                           ;	Power-up Timer Enable bit
   750                           ;	PWRT = OFF, PWRT disabled
   751                           ;	Brown-out Reset Enable bits
   752                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   753                           ;	Brown Out Reset Voltage bits
   754                           ;	BORV = 3, Minimum setting
   755   300002                     	org	3145730
   756   300002  1F                 	db	31
   757                           
   758                           ;Config register CONFIG2H @ 0x300003
   759                           ;	Watchdog Timer Enable bit
   760                           ;	WDT = ON, WDT enabled
   761                           ;	Watchdog Timer Postscale Select bits
   762                           ;	WDTPS = 32768, 1:32768
   763   300003                     	org	3145731
   764   300003  1F                 	db	31
   765                           
   766                           ; Padding undefined space
   767   300004                     	org	3145732
   768   300004  FF                 	db	255
   769                           
   770                           ;Config register CONFIG3H @ 0x300005
   771                           ;	CCP2 MUX bit
   772                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   773                           ;	PORTB A/D Enable bit
   774                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   775                           ;	Low-Power Timer1 Oscillator Enable bit
   776                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   777                           ;	MCLR Pin Enable bit
   778                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   779   300005                     	org	3145733
   780   300005  01                 	db	1
   781                           
   782                           ;Config register CONFIG4L @ 0x300006
   783                           ;	Stack Full/Underflow Reset Enable bit
   784                           ;	STVREN = ON, Stack full/underflow will cause Reset
   785                           ;	Single-Supply ICSP Enable bit
   786                           ;	LVP = ON, Single-Supply ICSP enabled
   787                           ;	Extended Instruction Set Enable bit
   788                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   789                           ;	Background Debugger Enable bit
   790                           ;	DEBUG = 0x1, unprogrammed default
   791   300006                     	org	3145734
   792   300006  85                 	db	133
   793                           
   794                           ; Padding undefined space
   795   300007                     	org	3145735
   796   300007  FF                 	db	255
   797                           
   798                           ;Config register CONFIG5L @ 0x300008
   799                           ;	Code Protection bit
   800                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   801                           ;	Code Protection bit
   802                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   803                           ;	Code Protection bit
   804                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   805                           ;	Code Protection bit
   806                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   807   300008                     	org	3145736
   808   300008  0F                 	db	15
   809                           
   810                           ;Config register CONFIG5H @ 0x300009
   811                           ;	Boot Block Code Protection bit
   812                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   813                           ;	Data EEPROM Code Protection bit
   814                           ;	CPD = OFF, Data EEPROM not code-protected
   815   300009                     	org	3145737
   816   300009  C0                 	db	192
   817                           
   818                           ;Config register CONFIG6L @ 0x30000A
   819                           ;	Write Protection bit
   820                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   821                           ;	Write Protection bit
   822                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   823                           ;	Write Protection bit
   824                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   825                           ;	Write Protection bit
   826                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   827   30000A                     	org	3145738
   828   30000A  0F                 	db	15
   829                           
   830                           ;Config register CONFIG6H @ 0x30000B
   831                           ;	Configuration Register Write Protection bit
   832                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   833                           ;	Boot Block Write Protection bit
   834                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   835                           ;	Data EEPROM Write Protection bit
   836                           ;	WRTD = OFF, Data EEPROM not write-protected
   837   30000B                     	org	3145739
   838   30000B  E0                 	db	224
   839                           
   840                           ;Config register CONFIG7L @ 0x30000C
   841                           ;	Table Read Protection bit
   842                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   843                           ;	Table Read Protection bit
   844                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   845                           ;	Table Read Protection bit
   846                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   847                           ;	Table Read Protection bit
   848                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   849   30000C                     	org	3145740
   850   30000C  0F                 	db	15
   851                           
   852                           ;Config register CONFIG7H @ 0x30000D
   853                           ;	Boot Block Table Read Protection bit
   854                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   855   30000D                     	org	3145741
   856   30000D  40                 	db	64
   857                           tosu	equ	0xFFF
   858                           tosh	equ	0xFFE
   859                           tosl	equ	0xFFD
   860                           stkptr	equ	0xFFC
   861                           pclatu	equ	0xFFB
   862                           pclath	equ	0xFFA
   863                           pcl	equ	0xFF9
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           prodh	equ	0xFF4
   869                           prodl	equ	0xFF3
   870                           indf0	equ	0xFEF
   871                           postinc0	equ	0xFEE
   872                           postdec0	equ	0xFED
   873                           preinc0	equ	0xFEC
   874                           plusw0	equ	0xFEB
   875                           fsr0h	equ	0xFEA
   876                           fsr0l	equ	0xFE9
   877                           wreg	equ	0xFE8
   878                           indf1	equ	0xFE7
   879                           postinc1	equ	0xFE6
   880                           postdec1	equ	0xFE5
   881                           preinc1	equ	0xFE4
   882                           plusw1	equ	0xFE3
   883                           fsr1h	equ	0xFE2
   884                           fsr1l	equ	0xFE1
   885                           bsr	equ	0xFE0
   886                           indf2	equ	0xFDF
   887                           postinc2	equ	0xFDE
   888                           postdec2	equ	0xFDD
   889                           preinc2	equ	0xFDC
   890                           plusw2	equ	0xFDB
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      3       8
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_display7s

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0      15
                                              1 COMRAM     2     2      0
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   _display7s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      3       8       1        6.3%
BITBIGSFRhhl        2B      0       0      19        0.0%
BITBIGSFRhhhlh      18      0       0      17        0.0%
BITBIGSFRhhhll      13      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlhh         5      0       0      21        0.0%
BITBIGSFRllh         5      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      22        0.0%
BITBIGSFRhl          1      0       0      20        0.0%
BITBIGSFRlll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      25        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 18:12:30 2023

                     l71 0268                      l910 0244                      l920 024E  
                    l912 0246                      l930 0264                      l922 0250  
                    l914 0248                      l932 0266                      l924 0252  
                    l916 024A                      l908 021C                      l926 0254  
                    l918 024C                      l928 0256                      i2l5 021A  
                    _isr 0008                      _tmp 0005                      wreg 000FE8  
                   ?_isr 0006                     _LATA 000F89                     _LATB 000F8A  
                   _LATD 000F8C                     i2l86 0124                     _TMR0 000FD6  
                   _flag 0001                     _main 021C                     btemp 0009  
                   start 000E             ___param_bank 000000                    ??_isr 0007  
                  ?_main 0006                    _T0CON 000FD5                    i2l900 018E  
                  i2l840 0134                    i2l906 0194                    i2l834 012A  
                  i2l860 0152                    i2l852 0146                    i2l844 013A  
                  i2l836 012E                    i2l940 0030                    i2l950 0058  
                  i2l942 003E                    i2l934 0014                    i2l880 0170  
                  i2l872 0164                    i2l864 0158                    i2l856 014C  
                  i2l848 0140                    i2l960 0076                    i2l952 005A  
                  i2l944 0040                    i2l936 0022                    i2l970 00C0  
                  i2l962 007E                    i2l954 005E                    i2l946 0048  
                  i2l938 0024                    i2l892 0182                    i2l884 0176  
                  i2l876 016A                    i2l868 015E                    i2l980 00F0  
                  i2l972 00C8                    i2l964 0082                    i2l956 0066  
                  i2l948 004A                    i2l982 0108                    i2l974 00CA  
                  i2l966 0096                    i2l958 0074                    i2l896 0188  
                  i2l888 017C                    i2l976 00DC                    i2l984 0110  
                  i2l968 009E                    i2l986 0120                    i2l978 00EE  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _count 0003                    ttemp5 000A                    ttemp6 000D  
                  ttemp7 0011                    status 000FD8                    wtemp8 000A  
        __initialization 0272             __end_of_main 0272                   ??_main 0009  
          __activetblptr 000002                   _ADCON1 000FC1                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 003E                   i2u2_41 003A  
                 i2u3_40 0058                   i2u3_41 0054                   i2u4_40 0074  
                 i2u4_41 0070                   i2u5_40 0096                   i2u5_41 0092  
                 i2u6_40 00AE                   i2u6_41 00A8                   i2u6_46 00B0  
                 i2u7_40 00DC                   i2u7_41 00D8                   i2u8_40 00EE  
                 i2u8_41 00EA                   i2u9_40 0120                   i2u9_41 011C  
                 isa$std 000001                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 027C            ___rparam_used 000001           __pcstackCOMRAM 0006  
                i2u10_47 00FA                  __Hparam 0000                  __Lparam 0000  
      __end_of_display7s 021C                  __pcinit 0272                  __ramtop 0600  
                __ptext0 021C                  __ptext2 0128           __pintcode_body 0012  
   end_of_initialization 027C            __Lmediumconst 0000                  int_func 0012  
             display7s@v 0006      start_initialization 0272              __end_of_isr 0128  
            __pbssCOMRAM 0001                __pintcode 0008                _display7s 0128  
               _LATAbits 000F89                 _LATBbits 000F8A               ?_display7s 0006  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 0009  
            ??_display7s 0006               _INTCONbits 000FF2                 intlevel2 0000  
