

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jan 22 20:43:18 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.36
    19                           ; Generated 28/01/2022 GMT
    20                           ; 
    21                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4520 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _LATBbits	set	3978
    54  0000                     _LATAbits	set	3977
    55  0000                     _PORTD	set	3971
    56  0000                     _PORTB	set	3969
    57  0000                     _LATA	set	3977
    58  0000                     _PORTA	set	3968
    59  0000                     _TRISA	set	3986
    60  0000                     _TRISD	set	3989
    61  0000                     _TRISB	set	3987
    62  0000                     _ADCON1	set	4033
    63  0000                     _LATD	set	3980
    64  0000                     _LATB	set	3978
    65  0000                     _T0CON	set	4053
    66  0000                     _INTCON3bits	set	4080
    67  0000                     _INTCON2bits	set	4081
    68  0000                     _INTCONbits	set	4082
    69  0000                     _TMR0	set	4054
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74  000272                     __pcinit:
    75                           	callstack 0
    76  000272                     start_initialization:
    77                           	callstack 0
    78  000272                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (5 bytes)
    82  000272  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    83  000274  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    84  000276  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    85  000278  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86  00027A  6A01               	clrf	__pbssCOMRAM& (0+255),c
    87  00027C                     end_of_initialization:
    88                           	callstack 0
    89  00027C                     __end_of__initialization:
    90                           	callstack 0
    91  00027C  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  00027E  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  000280  0E00               	movlw	low (__Lmediumconst shr (0+16))
    94  000282  6EF8               	movwf	tblptru,c
    95  000284  0100               	movlb	0
    96  000286  EF0E  F001         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  000001                     __pbssCOMRAM:
   100                           	callstack 0
   101  000001                     _flag:
   102                           	callstack 0
   103  000001                     	ds	2
   104  000003                     _count:
   105                           	callstack 0
   106  000003                     	ds	2
   107  000005                     _tmp:
   108                           	callstack 0
   109  000005                     	ds	1
   110                           
   111                           	psect	cstackCOMRAM
   112  000006                     __pcstackCOMRAM:
   113                           	callstack 0
   114  000006                     display7s@v:
   115                           	callstack 0
   116                           
   117                           ; 1 bytes @ 0x0
   118  000006                     	ds	1
   119  000007                     ??_isr:
   120                           
   121                           ; 1 bytes @ 0x1
   122  000007                     	ds	2
   123  000009                     
   124                           ; 1 bytes @ 0x3
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 14 in file "main7seg.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;		None
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, status,2
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   144 ;;      Params:         0       0       0       0       0       0       0
   145 ;;      Locals:         0       0       0       0       0       0       0
   146 ;;      Temps:          0       0       0       0       0       0       0
   147 ;;      Totals:         0       0       0       0       0       0       0
   148 ;;Total ram usage:        0 bytes
   149 ;; Hardware stack levels required when called: 2
   150 ;; This function calls:
   151 ;;		Nothing
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  00021C                     __ptext0:
   159                           	callstack 0
   160  00021C                     _main:
   161                           	callstack 29
   162  00021C                     
   163                           ;main7seg.c: 17: TRISA = 0b00000000;
   164  00021C  0E00               	movlw	0
   165  00021E  6E92               	movwf	146,c	;volatile
   166                           
   167                           ;main7seg.c: 18: TRISB = 0b00001111;
   168  000220  0E0F               	movlw	15
   169  000222  6E93               	movwf	147,c	;volatile
   170                           
   171                           ;main7seg.c: 19: TRISD = 0b00000000;
   172  000224  0E00               	movlw	0
   173  000226  6E95               	movwf	149,c	;volatile
   174                           
   175                           ;main7seg.c: 20: PORTA = 0;
   176  000228  0E00               	movlw	0
   177  00022A  6E80               	movwf	128,c	;volatile
   178                           
   179                           ;main7seg.c: 21: LATA = 0;
   180  00022C  0E00               	movlw	0
   181  00022E  6E89               	movwf	137,c	;volatile
   182                           
   183                           ;main7seg.c: 22: PORTB = 0;
   184  000230  0E00               	movlw	0
   185  000232  6E81               	movwf	129,c	;volatile
   186                           
   187                           ;main7seg.c: 23: LATB = 0;
   188  000234  0E00               	movlw	0
   189  000236  6E8A               	movwf	138,c	;volatile
   190                           
   191                           ;main7seg.c: 24: PORTD = 0;
   192  000238  0E00               	movlw	0
   193  00023A  6E83               	movwf	131,c	;volatile
   194                           
   195                           ;main7seg.c: 25: LATD = 0;
   196  00023C  0E00               	movlw	0
   197  00023E  6E8C               	movwf	140,c	;volatile
   198                           
   199                           ;main7seg.c: 27: ADCON1 = 0b00001111;
   200  000240  0E0F               	movlw	15
   201  000242  6EC1               	movwf	193,c	;volatile
   202  000244                     
   203                           ;main7seg.c: 29: INTCON2bits.RBPU = 0;
   204  000244  9EF1               	bcf	241,7,c	;volatile
   205  000246                     
   206                           ;main7seg.c: 31: INTCON2bits.INTEDG0 = 0;
   207  000246  9CF1               	bcf	241,6,c	;volatile
   208  000248                     
   209                           ;main7seg.c: 33: INTCON3bits.INT1IF = 0;
   210  000248  90F0               	bcf	240,0,c	;volatile
   211  00024A                     
   212                           ;main7seg.c: 34: INTCON3bits.INT1IE = 1;
   213  00024A  86F0               	bsf	240,3,c	;volatile
   214  00024C                     
   215                           ;main7seg.c: 36: INTCON3bits.INT2IF = 0;
   216  00024C  92F0               	bcf	240,1,c	;volatile
   217  00024E                     
   218                           ;main7seg.c: 37: INTCON3bits.INT2IE = 1;
   219  00024E  88F0               	bsf	240,4,c	;volatile
   220  000250                     
   221                           ;main7seg.c: 39: INTCONbits.INT0IF = 0;
   222  000250  92F2               	bcf	242,1,c	;volatile
   223  000252                     
   224                           ;main7seg.c: 40: INTCONbits.INT0IE = 1;
   225  000252  88F2               	bsf	242,4,c	;volatile
   226  000254                     
   227                           ;main7seg.c: 42: INTCONbits.TMR0IF = 0;
   228  000254  94F2               	bcf	242,2,c	;volatile
   229  000256                     
   230                           ;main7seg.c: 43: INTCONbits.TMR0IE = 1;
   231  000256  8AF2               	bsf	242,5,c	;volatile
   232                           
   233                           ;main7seg.c: 46: T0CON = 0b11000101;
   234  000258  0EC5               	movlw	197
   235  00025A  6ED5               	movwf	213,c	;volatile
   236                           
   237                           ;main7seg.c: 47: TMR0 = 131;
   238  00025C  0E00               	movlw	0
   239  00025E  6ED7               	movwf	215,c	;volatile
   240  000260  0E83               	movlw	131
   241  000262  6ED6               	movwf	214,c	;volatile
   242  000264                     
   243                           ;main7seg.c: 48: (INTCONbits.GIE = 1);
   244  000264  8EF2               	bsf	242,7,c	;volatile
   245  000266                     
   246                           ;main7seg.c: 50: LATAbits.LATA2 = 1;
   247  000266  8489               	bsf	137,2,c	;volatile
   248  000268                     l71:
   249  000268  0004               	clrwdt		;# 
   250  00026A  EF34  F001         	goto	l71
   251  00026E  EF07  F000         	goto	start
   252  000272                     __end_of_main:
   253                           	callstack 0
   254                           
   255 ;; *************** function _isr *****************
   256 ;; Defined at:
   257 ;;		line 62 in file "main7seg.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   271 ;;      Params:         0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0
   273 ;;      Temps:          2       0       0       0       0       0       0
   274 ;;      Totals:         2       0       0       0       0       0       0
   275 ;;Total ram usage:        2 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; Hardware stack levels required when called: 1
   278 ;; This function calls:
   279 ;;		_display7s
   280 ;; This function is called by:
   281 ;;		Interrupt level 2
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	intcode
   286  000008                     __pintcode:
   287                           	callstack 0
   288  000008                     _isr:
   289                           	callstack 29
   290                           
   291                           ;incstack = 0
   292  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   293  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   294                           
   295                           	psect	intcode_body
   296  000012                     __pintcode_body:
   297                           	callstack 29
   298  000012                     int_func:
   299                           	callstack 29
   300  000012  0006               	pop		; remove dummy address from shadow register refresh
   301  000014                     
   302                           ;main7seg.c: 63: if (INTCONbits.INT0F == 1)
   303  000014  A2F2               	btfss	242,1,c	;volatile
   304  000016  EF0F  F000         	goto	i2u1_41
   305  00001A  EF11  F000         	goto	i2u1_40
   306  00001E                     i2u1_41:
   307  00001E  EF18  F000         	goto	i2l940
   308  000022                     i2u1_40:
   309  000022                     
   310                           ;main7seg.c: 64: {;main7seg.c: 65: INTCONbits.INT0F = 0;
   311  000022  92F2               	bcf	242,1,c	;volatile
   312  000024                     
   313                           ;main7seg.c: 66: tmp = 0;
   314  000024  0E00               	movlw	0
   315  000026  6E05               	movwf	_tmp^0,c
   316                           
   317                           ;main7seg.c: 67: flag = 1;
   318  000028  0E00               	movlw	0
   319  00002A  6E02               	movwf	(_flag+1)^0,c
   320  00002C  0E01               	movlw	1
   321  00002E  6E01               	movwf	_flag^0,c
   322  000030                     i2l940:
   323                           
   324                           ;main7seg.c: 68: };main7seg.c: 69: if(INTCON3bits.INT2IF == 1)
   325  000030  A2F0               	btfss	240,1,c	;volatile
   326  000032  EF1D  F000         	goto	i2u2_41
   327  000036  EF1F  F000         	goto	i2u2_40
   328  00003A                     i2u2_41:
   329  00003A  EF25  F000         	goto	i2l948
   330  00003E                     i2u2_40:
   331  00003E                     
   332                           ;main7seg.c: 70: {;main7seg.c: 71: INTCON3bits.INT2IF = 0;
   333  00003E  92F0               	bcf	240,1,c	;volatile
   334  000040                     
   335                           ;main7seg.c: 72: LATD = display7s(tmp);
   336  000040  5005               	movf	_tmp^0,w,c
   337  000042  EC94  F000         	call	_display7s
   338  000046  6E8C               	movwf	140,c	;volatile
   339  000048                     
   340                           ;main7seg.c: 73: tmp++;
   341  000048  2A05               	incf	_tmp^0,f,c
   342  00004A                     i2l948:
   343                           
   344                           ;main7seg.c: 74: };main7seg.c: 75: if(INTCON3bits.INT1IF == 1)
   345  00004A  A0F0               	btfss	240,0,c	;volatile
   346  00004C  EF2A  F000         	goto	i2u3_41
   347  000050  EF2C  F000         	goto	i2u3_40
   348  000054                     i2u3_41:
   349  000054  EF33  F000         	goto	i2l956
   350  000058                     i2u3_40:
   351  000058                     
   352                           ;main7seg.c: 76: {;main7seg.c: 77: INTCON3bits.INT1IF = 0;
   353  000058  90F0               	bcf	240,0,c	;volatile
   354  00005A                     
   355                           ;main7seg.c: 78: tmp = tmp - 1;
   356  00005A  0405               	decf	_tmp^0,w,c
   357  00005C  6E05               	movwf	_tmp^0,c
   358  00005E                     
   359                           ;main7seg.c: 79: LATD = display7s(tmp);
   360  00005E  5005               	movf	_tmp^0,w,c
   361  000060  EC94  F000         	call	_display7s
   362  000064  6E8C               	movwf	140,c	;volatile
   363  000066                     i2l956:
   364                           
   365                           ;main7seg.c: 80: };main7seg.c: 81: if (INTCONbits.TMR0IF == 1)
   366  000066  A4F2               	btfss	242,2,c	;volatile
   367  000068  EF38  F000         	goto	i2u4_41
   368  00006C  EF3A  F000         	goto	i2u4_40
   369  000070                     i2u4_41:
   370  000070  EF92  F000         	goto	i2l86
   371  000074                     i2u4_40:
   372  000074                     
   373                           ;main7seg.c: 82: {;main7seg.c: 83: INTCONbits.TMR0IF = 0;
   374  000074  94F2               	bcf	242,2,c	;volatile
   375  000076                     
   376                           ;main7seg.c: 84: TMR0 = 131;
   377  000076  0E00               	movlw	0
   378  000078  6ED7               	movwf	215,c	;volatile
   379  00007A  0E83               	movlw	131
   380  00007C  6ED6               	movwf	214,c	;volatile
   381  00007E                     
   382                           ;main7seg.c: 85: count ++;
   383  00007E  4A03               	infsnz	_count^0,f,c
   384  000080  2A04               	incf	(_count+1)^0,f,c
   385  000082                     
   386                           ;main7seg.c: 86: if (count == 250)
   387  000082  0EFA               	movlw	250
   388  000084  1803               	xorwf	_count^0,w,c
   389  000086  1004               	iorwf	(_count+1)^0,w,c
   390  000088  A4D8               	btfss	status,2,c
   391  00008A  EF49  F000         	goto	i2u5_41
   392  00008E  EF4B  F000         	goto	i2u5_40
   393  000092                     i2u5_41:
   394  000092  EF92  F000         	goto	i2l86
   395  000096                     i2u5_40:
   396  000096                     
   397                           ;main7seg.c: 87: {;main7seg.c: 88: count = 0;
   398  000096  0E00               	movlw	0
   399  000098  6E04               	movwf	(_count+1)^0,c
   400  00009A  0E00               	movlw	0
   401  00009C  6E03               	movwf	_count^0,c
   402  00009E                     
   403                           ;main7seg.c: 89: LATBbits.LATB1 = ~LATBbits.LATB1;
   404  00009E  B28A               	btfsc	138,1,c	;volatile
   405  0000A0  EF54  F000         	goto	i2u6_41
   406  0000A4  EF57  F000         	goto	i2u6_40
   407  0000A8                     i2u6_41:
   408  0000A8  0E01               	movlw	1
   409  0000AA  EF58  F000         	goto	i2u6_46
   410  0000AE                     i2u6_40:
   411  0000AE  0E00               	movlw	0
   412  0000B0                     i2u6_46:
   413  0000B0  0AFF               	xorlw	255
   414  0000B2  6E07               	movwf	??_isr^0,c
   415  0000B4  4607               	rlncf	??_isr^0,f,c
   416  0000B6  508A               	movf	138,w,c	;volatile
   417  0000B8  1807               	xorwf	??_isr^0,w,c
   418  0000BA  0BFD               	andlw	-3
   419  0000BC  1807               	xorwf	??_isr^0,w,c
   420  0000BE  6E8A               	movwf	138,c	;volatile
   421  0000C0                     
   422                           ;main7seg.c: 90: LATD = display7s(tmp);
   423  0000C0  5005               	movf	_tmp^0,w,c
   424  0000C2  EC94  F000         	call	_display7s
   425  0000C6  6E8C               	movwf	140,c	;volatile
   426  0000C8                     
   427                           ;main7seg.c: 91: tmp++;
   428  0000C8  2A05               	incf	_tmp^0,f,c
   429  0000CA                     
   430                           ;main7seg.c: 92: if(tmp == 10 && flag == 1)
   431  0000CA  0E0A               	movlw	10
   432  0000CC  1805               	xorwf	_tmp^0,w,c
   433  0000CE  A4D8               	btfss	status,2,c
   434  0000D0  EF6C  F000         	goto	i2u7_41
   435  0000D4  EF6E  F000         	goto	i2u7_40
   436  0000D8                     i2u7_41:
   437  0000D8  EF88  F000         	goto	i2l984
   438  0000DC                     i2u7_40:
   439  0000DC  0401               	decf	_flag^0,w,c
   440  0000DE  1002               	iorwf	(_flag+1)^0,w,c
   441  0000E0  A4D8               	btfss	status,2,c
   442  0000E2  EF75  F000         	goto	i2u8_41
   443  0000E6  EF77  F000         	goto	i2u8_40
   444  0000EA                     i2u8_41:
   445  0000EA  EF88  F000         	goto	i2l984
   446  0000EE                     i2u8_40:
   447  0000EE                     
   448                           ;main7seg.c: 93: {;main7seg.c: 94: INTCONbits.TMR0IE = 0;
   449  0000EE  9AF2               	bcf	242,5,c	;volatile
   450  0000F0                     
   451                           ;main7seg.c: 95: _delaywdt((unsigned long)((1000)*(8000000/4000.0)));
   452  0000F0  0E08               	movlw	8
   453  0000F2  6E08               	movwf	(??_isr+1)^0,c
   454  0000F4  0E9E               	movlw	158
   455  0000F6  6E07               	movwf	??_isr^0,c
   456  0000F8  0E4C               	movlw	76
   457  0000FA                     i2u10_47:
   458  0000FA  0004               	clrwdt	
   459  0000FC  2EE8               	decfsz	wreg,f,c
   460  0000FE  D7FD               	bra	i2u10_47
   461  000100  2E07               	decfsz	??_isr^0,f,c
   462  000102  D7FB               	bra	i2u10_47
   463  000104  2E08               	decfsz	(??_isr+1)^0,f,c
   464  000106  D7F9               	bra	i2u10_47
   465  000108                     
   466                           ;main7seg.c: 96: LATD = display7s(0);
   467  000108  0E00               	movlw	0
   468  00010A  EC94  F000         	call	_display7s
   469  00010E  6E8C               	movwf	140,c	;volatile
   470  000110                     i2l984:
   471                           
   472                           ;main7seg.c: 97: };main7seg.c: 98: if (tmp > 15)
   473  000110  0E0F               	movlw	15
   474  000112  6405               	cpfsgt	_tmp^0,c
   475  000114  EF8E  F000         	goto	i2u9_41
   476  000118  EF90  F000         	goto	i2u9_40
   477  00011C                     i2u9_41:
   478  00011C  EF92  F000         	goto	i2l86
   479  000120                     i2u9_40:
   480  000120                     
   481                           ;main7seg.c: 99: {;main7seg.c: 100: tmp = 0;
   482  000120  0E00               	movlw	0
   483  000122  6E05               	movwf	_tmp^0,c
   484  000124                     i2l86:
   485  000124  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   486  000126  0011               	retfie		f
   487  000128                     __end_of_isr:
   488                           	callstack 0
   489                           
   490 ;; *************** function _display7s *****************
   491 ;; Defined at:
   492 ;;		line 11 in file "display7s.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;  v               1    wreg     unsigned char 
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  v               1    0[COMRAM] unsigned char 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      unsigned char 
   499 ;; Registers used:
   500 ;;		wreg, status,2, status,0
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   506 ;;      Params:         0       0       0       0       0       0       0
   507 ;;      Locals:         1       0       0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0       0       0
   509 ;;      Totals:         1       0       0       0       0       0       0
   510 ;;Total ram usage:        1 bytes
   511 ;; Hardware stack levels used: 1
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_isr
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text2
   520  000128                     __ptext2:
   521                           	callstack 0
   522  000128                     _display7s:
   523                           	callstack 29
   524                           
   525                           ;incstack = 0
   526                           ;display7s@v stored from wreg
   527  000128  6E06               	movwf	display7s@v^0,c
   528  00012A                     
   529                           ;display7s.c: 13: switch(v)
   530  00012A  EFCA  F000         	goto	i2l906
   531  00012E                     i2l836:
   532                           
   533                           ;display7s.c: 16: return 0x3F;
   534  00012E  0E3F               	movlw	63
   535  000130  EF0D  F001         	goto	i2l5
   536  000134                     i2l840:
   537                           
   538                           ;display7s.c: 18: return 0x06;
   539  000134  0E06               	movlw	6
   540  000136  EF0D  F001         	goto	i2l5
   541  00013A                     i2l844:
   542                           
   543                           ;display7s.c: 20: return 0x5B;
   544  00013A  0E5B               	movlw	91
   545  00013C  EF0D  F001         	goto	i2l5
   546  000140                     i2l848:
   547                           
   548                           ;display7s.c: 22: return 0x4F;
   549  000140  0E4F               	movlw	79
   550  000142  EF0D  F001         	goto	i2l5
   551  000146                     i2l852:
   552                           
   553                           ;display7s.c: 24: return 0x66;
   554  000146  0E66               	movlw	102
   555  000148  EF0D  F001         	goto	i2l5
   556  00014C                     i2l856:
   557                           
   558                           ;display7s.c: 26: return 0x6D;
   559  00014C  0E6D               	movlw	109
   560  00014E  EF0D  F001         	goto	i2l5
   561  000152                     i2l860:
   562                           
   563                           ;display7s.c: 28: return 0x7D;
   564  000152  0E7D               	movlw	125
   565  000154  EF0D  F001         	goto	i2l5
   566  000158                     i2l864:
   567                           
   568                           ;display7s.c: 30: return 0x07;
   569  000158  0E07               	movlw	7
   570  00015A  EF0D  F001         	goto	i2l5
   571  00015E                     i2l868:
   572                           
   573                           ;display7s.c: 32: return 0x7F;
   574  00015E  0E7F               	movlw	127
   575  000160  EF0D  F001         	goto	i2l5
   576  000164                     i2l872:
   577                           
   578                           ;display7s.c: 34: return 0x6F;
   579  000164  0E6F               	movlw	111
   580  000166  EF0D  F001         	goto	i2l5
   581  00016A                     i2l876:
   582                           
   583                           ;display7s.c: 36: return 0x77;
   584  00016A  0E77               	movlw	119
   585  00016C  EF0D  F001         	goto	i2l5
   586  000170                     i2l880:
   587                           
   588                           ;display7s.c: 38: return 0x7c;
   589  000170  0E7C               	movlw	124
   590  000172  EF0D  F001         	goto	i2l5
   591  000176                     i2l884:
   592                           
   593                           ;display7s.c: 40: return 0x58;
   594  000176  0E58               	movlw	88
   595  000178  EF0D  F001         	goto	i2l5
   596  00017C                     i2l888:
   597                           
   598                           ;display7s.c: 42: return 0x5E;
   599  00017C  0E5E               	movlw	94
   600  00017E  EF0D  F001         	goto	i2l5
   601  000182                     i2l892:
   602                           
   603                           ;display7s.c: 44: return 0x79;
   604  000182  0E79               	movlw	121
   605  000184  EF0D  F001         	goto	i2l5
   606  000188                     i2l896:
   607                           
   608                           ;display7s.c: 46: return 0x71;
   609  000188  0E71               	movlw	113
   610  00018A  EF0D  F001         	goto	i2l5
   611  00018E                     i2l900:
   612                           
   613                           ;display7s.c: 48: return 0;
   614  00018E  0E00               	movlw	0
   615  000190  EF0D  F001         	goto	i2l5
   616  000194                     i2l906:
   617  000194  5006               	movf	display7s@v^0,w,c
   618                           
   619                           ; Switch size 1, requested type "simple"
   620                           ; Number of cases is 16, Range of values is 0 to 15
   621                           ; switch strategies available:
   622                           ; Name         Instructions Cycles
   623                           ; simple_byte           49    25 (average)
   624                           ;	Chosen strategy is simple_byte
   625  000196  0A00               	xorlw	0	; case 0
   626  000198  B4D8               	btfsc	status,2,c
   627  00019A  EF97  F000         	goto	i2l836
   628  00019E  0A01               	xorlw	1	; case 1
   629  0001A0  B4D8               	btfsc	status,2,c
   630  0001A2  EF9A  F000         	goto	i2l840
   631  0001A6  0A03               	xorlw	3	; case 2
   632  0001A8  B4D8               	btfsc	status,2,c
   633  0001AA  EF9D  F000         	goto	i2l844
   634  0001AE  0A01               	xorlw	1	; case 3
   635  0001B0  B4D8               	btfsc	status,2,c
   636  0001B2  EFA0  F000         	goto	i2l848
   637  0001B6  0A07               	xorlw	7	; case 4
   638  0001B8  B4D8               	btfsc	status,2,c
   639  0001BA  EFA3  F000         	goto	i2l852
   640  0001BE  0A01               	xorlw	1	; case 5
   641  0001C0  B4D8               	btfsc	status,2,c
   642  0001C2  EFA6  F000         	goto	i2l856
   643  0001C6  0A03               	xorlw	3	; case 6
   644  0001C8  B4D8               	btfsc	status,2,c
   645  0001CA  EFA9  F000         	goto	i2l860
   646  0001CE  0A01               	xorlw	1	; case 7
   647  0001D0  B4D8               	btfsc	status,2,c
   648  0001D2  EFAC  F000         	goto	i2l864
   649  0001D6  0A0F               	xorlw	15	; case 8
   650  0001D8  B4D8               	btfsc	status,2,c
   651  0001DA  EFAF  F000         	goto	i2l868
   652  0001DE  0A01               	xorlw	1	; case 9
   653  0001E0  B4D8               	btfsc	status,2,c
   654  0001E2  EFB2  F000         	goto	i2l872
   655  0001E6  0A03               	xorlw	3	; case 10
   656  0001E8  B4D8               	btfsc	status,2,c
   657  0001EA  EFB5  F000         	goto	i2l876
   658  0001EE  0A01               	xorlw	1	; case 11
   659  0001F0  B4D8               	btfsc	status,2,c
   660  0001F2  EFB8  F000         	goto	i2l880
   661  0001F6  0A07               	xorlw	7	; case 12
   662  0001F8  B4D8               	btfsc	status,2,c
   663  0001FA  EFBB  F000         	goto	i2l884
   664  0001FE  0A01               	xorlw	1	; case 13
   665  000200  B4D8               	btfsc	status,2,c
   666  000202  EFBE  F000         	goto	i2l888
   667  000206  0A03               	xorlw	3	; case 14
   668  000208  B4D8               	btfsc	status,2,c
   669  00020A  EFC1  F000         	goto	i2l892
   670  00020E  0A01               	xorlw	1	; case 15
   671  000210  B4D8               	btfsc	status,2,c
   672  000212  EFC4  F000         	goto	i2l896
   673  000216  EFC7  F000         	goto	i2l900
   674  00021A                     i2l5:
   675  00021A  0012               	return		;funcret
   676  00021C                     __end_of_display7s:
   677                           	callstack 0
   678  0000                     
   679                           	psect	rparam
   680  0000                     
   681                           	psect	temp
   682  000009                     btemp:
   683                           	callstack 0
   684  000009                     	ds	1
   685  0000                     int$flags	set	btemp
   686  0000                     wtemp8	set	btemp+1
   687  0000                     ttemp5	set	btemp+1
   688  0000                     ttemp6	set	btemp+4
   689  0000                     ttemp7	set	btemp+8
   690                           
   691                           	psect	idloc
   692                           
   693                           ;Config register IDLOC0 @ 0x200000
   694                           ;	unspecified, using default values
   695  200000                     	org	2097152
   696  200000  FF                 	db	255
   697                           
   698                           ;Config register IDLOC1 @ 0x200001
   699                           ;	unspecified, using default values
   700  200001                     	org	2097153
   701  200001  FF                 	db	255
   702                           
   703                           ;Config register IDLOC2 @ 0x200002
   704                           ;	unspecified, using default values
   705  200002                     	org	2097154
   706  200002  FF                 	db	255
   707                           
   708                           ;Config register IDLOC3 @ 0x200003
   709                           ;	unspecified, using default values
   710  200003                     	org	2097155
   711  200003  FF                 	db	255
   712                           
   713                           ;Config register IDLOC4 @ 0x200004
   714                           ;	unspecified, using default values
   715  200004                     	org	2097156
   716  200004  FF                 	db	255
   717                           
   718                           ;Config register IDLOC5 @ 0x200005
   719                           ;	unspecified, using default values
   720  200005                     	org	2097157
   721  200005  FF                 	db	255
   722                           
   723                           ;Config register IDLOC6 @ 0x200006
   724                           ;	unspecified, using default values
   725  200006                     	org	2097158
   726  200006  FF                 	db	255
   727                           
   728                           ;Config register IDLOC7 @ 0x200007
   729                           ;	unspecified, using default values
   730  200007                     	org	2097159
   731  200007  FF                 	db	255
   732                           
   733                           	psect	config
   734                           
   735                           ; Padding undefined space
   736  300000                     	org	3145728
   737  300000  FF                 	db	255
   738                           
   739                           ;Config register CONFIG1H @ 0x300001
   740                           ;	Oscillator Selection bits
   741                           ;	OSC = HS, HS oscillator
   742                           ;	Fail-Safe Clock Monitor Enable bit
   743                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   744                           ;	Internal/External Oscillator Switchover bit
   745                           ;	IESO = OFF, Oscillator Switchover mode disabled
   746  300001                     	org	3145729
   747  300001  02                 	db	2
   748                           
   749                           ;Config register CONFIG2L @ 0x300002
   750                           ;	Power-up Timer Enable bit
   751                           ;	PWRT = OFF, PWRT disabled
   752                           ;	Brown-out Reset Enable bits
   753                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   754                           ;	Brown Out Reset Voltage bits
   755                           ;	BORV = 3, Minimum setting
   756  300002                     	org	3145730
   757  300002  1F                 	db	31
   758                           
   759                           ;Config register CONFIG2H @ 0x300003
   760                           ;	Watchdog Timer Enable bit
   761                           ;	WDT = ON, WDT enabled
   762                           ;	Watchdog Timer Postscale Select bits
   763                           ;	WDTPS = 32768, 1:32768
   764  300003                     	org	3145731
   765  300003  1F                 	db	31
   766                           
   767                           ; Padding undefined space
   768  300004                     	org	3145732
   769  300004  FF                 	db	255
   770                           
   771                           ;Config register CONFIG3H @ 0x300005
   772                           ;	CCP2 MUX bit
   773                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   774                           ;	PORTB A/D Enable bit
   775                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   776                           ;	Low-Power Timer1 Oscillator Enable bit
   777                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   778                           ;	MCLR Pin Enable bit
   779                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   780  300005                     	org	3145733
   781  300005  01                 	db	1
   782                           
   783                           ;Config register CONFIG4L @ 0x300006
   784                           ;	Stack Full/Underflow Reset Enable bit
   785                           ;	STVREN = ON, Stack full/underflow will cause Reset
   786                           ;	Single-Supply ICSP Enable bit
   787                           ;	LVP = ON, Single-Supply ICSP enabled
   788                           ;	Extended Instruction Set Enable bit
   789                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   790                           ;	Background Debugger Enable bit
   791                           ;	DEBUG = 0x1, unprogrammed default
   792  300006                     	org	3145734
   793  300006  85                 	db	133
   794                           
   795                           ; Padding undefined space
   796  300007                     	org	3145735
   797  300007  FF                 	db	255
   798                           
   799                           ;Config register CONFIG5L @ 0x300008
   800                           ;	Code Protection bit
   801                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   802                           ;	Code Protection bit
   803                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   804                           ;	Code Protection bit
   805                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   806                           ;	Code Protection bit
   807                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   808  300008                     	org	3145736
   809  300008  0F                 	db	15
   810                           
   811                           ;Config register CONFIG5H @ 0x300009
   812                           ;	Boot Block Code Protection bit
   813                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   814                           ;	Data EEPROM Code Protection bit
   815                           ;	CPD = OFF, Data EEPROM not code-protected
   816  300009                     	org	3145737
   817  300009  C0                 	db	192
   818                           
   819                           ;Config register CONFIG6L @ 0x30000A
   820                           ;	Write Protection bit
   821                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   822                           ;	Write Protection bit
   823                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   824                           ;	Write Protection bit
   825                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   826                           ;	Write Protection bit
   827                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   828  30000A                     	org	3145738
   829  30000A  0F                 	db	15
   830                           
   831                           ;Config register CONFIG6H @ 0x30000B
   832                           ;	Configuration Register Write Protection bit
   833                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   834                           ;	Boot Block Write Protection bit
   835                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   836                           ;	Data EEPROM Write Protection bit
   837                           ;	WRTD = OFF, Data EEPROM not write-protected
   838  30000B                     	org	3145739
   839  30000B  E0                 	db	224
   840                           
   841                           ;Config register CONFIG7L @ 0x30000C
   842                           ;	Table Read Protection bit
   843                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   844                           ;	Table Read Protection bit
   845                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   846                           ;	Table Read Protection bit
   847                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   848                           ;	Table Read Protection bit
   849                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   850  30000C                     	org	3145740
   851  30000C  0F                 	db	15
   852                           
   853                           ;Config register CONFIG7H @ 0x30000D
   854                           ;	Boot Block Table Read Protection bit
   855                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   856  30000D                     	org	3145741
   857  30000D  40                 	db	64
   858                           tosu	equ	0xFFF
   859                           tosh	equ	0xFFE
   860                           tosl	equ	0xFFD
   861                           stkptr	equ	0xFFC
   862                           pclatu	equ	0xFFB
   863                           pclath	equ	0xFFA
   864                           pcl	equ	0xFF9
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           prodh	equ	0xFF4
   870                           prodl	equ	0xFF3
   871                           indf0	equ	0xFEF
   872                           postinc0	equ	0xFEE
   873                           postdec0	equ	0xFED
   874                           preinc0	equ	0xFEC
   875                           plusw0	equ	0xFEB
   876                           fsr0h	equ	0xFEA
   877                           fsr0l	equ	0xFE9
   878                           wreg	equ	0xFE8
   879                           indf1	equ	0xFE7
   880                           postinc1	equ	0xFE6
   881                           postdec1	equ	0xFE5
   882                           preinc1	equ	0xFE4
   883                           plusw1	equ	0xFE3
   884                           fsr1h	equ	0xFE2
   885                           fsr1l	equ	0xFE1
   886                           bsr	equ	0xFE0
   887                           indf2	equ	0xFDF
   888                           postinc2	equ	0xFDE
   889                           postdec2	equ	0xFDD
   890                           preinc2	equ	0xFDC
   891                           plusw2	equ	0xFDB
   892                           fsr2h	equ	0xFDA
   893                           fsr2l	equ	0xFD9
   894                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      3       8
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_display7s

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0      15
                                              1 COMRAM     2     2      0
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   _display7s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      3       8       1        6.3%
BITBIGSFRhhl        2B      0       0      19        0.0%
BITBIGSFRhhhlh      18      0       0      17        0.0%
BITBIGSFRhhhll      13      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlhh         5      0       0      21        0.0%
BITBIGSFRllh         5      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      22        0.0%
BITBIGSFRhl          1      0       0      20        0.0%
BITBIGSFRlll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      25        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


<<<<<<< HEAD
Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 18:12:30 2023
=======
Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jan 22 20:43:18 2023
>>>>>>> c32a19bcc4e44857c24f46ad81ebde8e039e8bde

                     l71 0268                      l910 0244                      l920 024E  
                    l912 0246                      l930 0264                      l922 0250  
                    l914 0248                      l932 0266                      l924 0252  
                    l916 024A                      l908 021C                      l926 0254  
                    l918 024C                      l928 0256                      i2l5 021A  
                    _isr 0008                      _tmp 0005                      wreg 000FE8  
                   ?_isr 0006                     _LATA 000F89                     _LATB 000F8A  
                   _LATD 000F8C                     i2l86 0124                     _TMR0 000FD6  
                   _flag 0001                     _main 021C                     btemp 0009  
                   start 000E             ___param_bank 000000                    ??_isr 0007  
                  ?_main 0006                    _T0CON 000FD5                    i2l900 018E  
                  i2l840 0134                    i2l906 0194                    i2l834 012A  
                  i2l860 0152                    i2l852 0146                    i2l844 013A  
                  i2l836 012E                    i2l940 0030                    i2l950 0058  
                  i2l942 003E                    i2l934 0014                    i2l880 0170  
                  i2l872 0164                    i2l864 0158                    i2l856 014C  
                  i2l848 0140                    i2l960 0076                    i2l952 005A  
                  i2l944 0040                    i2l936 0022                    i2l970 00C0  
                  i2l962 007E                    i2l954 005E                    i2l946 0048  
                  i2l938 0024                    i2l892 0182                    i2l884 0176  
                  i2l876 016A                    i2l868 015E                    i2l980 00F0  
                  i2l972 00C8                    i2l964 0082                    i2l956 0066  
                  i2l948 004A                    i2l982 0108                    i2l974 00CA  
                  i2l966 0096                    i2l958 0074                    i2l896 0188  
                  i2l888 017C                    i2l976 00DC                    i2l984 0110  
                  i2l968 009E                    i2l986 0120                    i2l978 00EE  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _count 0003                    ttemp5 000A                    ttemp6 000D  
                  ttemp7 0011                    status 000FD8                    wtemp8 000A  
        __initialization 0272             __end_of_main 0272                   ??_main 0009  
          __activetblptr 000002                   _ADCON1 000FC1                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 003E                   i2u2_41 003A  
                 i2u3_40 0058                   i2u3_41 0054                   i2u4_40 0074  
                 i2u4_41 0070                   i2u5_40 0096                   i2u5_41 0092  
                 i2u6_40 00AE                   i2u6_41 00A8                   i2u6_46 00B0  
                 i2u7_40 00DC                   i2u7_41 00D8                   i2u8_40 00EE  
                 i2u8_41 00EA                   i2u9_40 0120                   i2u9_41 011C  
                 isa$std 000001                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 027C            ___rparam_used 000001           __pcstackCOMRAM 0006  
                i2u10_47 00FA                  __Hparam 0000                  __Lparam 0000  
      __end_of_display7s 021C                  __pcinit 0272                  __ramtop 0600  
                __ptext0 021C                  __ptext2 0128           __pintcode_body 0012  
   end_of_initialization 027C            __Lmediumconst 0000                  int_func 0012  
             display7s@v 0006      start_initialization 0272              __end_of_isr 0128  
            __pbssCOMRAM 0001                __pintcode 0008                _display7s 0128  
               _LATAbits 000F89                 _LATBbits 000F8A               ?_display7s 0006  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 0009  
            ??_display7s 0006               _INTCONbits 000FF2                 intlevel2 0000  
