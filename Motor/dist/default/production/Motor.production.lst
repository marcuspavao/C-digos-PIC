

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jan 22 20:52:09 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.36
    25                           ; Generated 28/01/2022 GMT
    26                           ; 
    27                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _PORTC	set	3970
    60  0000                     _TRISC	set	3988
    61  0000                     _PORTCbits	set	3970
    62  0000                     _PORTBbits	set	3969
    63  0000                     _PORTE	set	3972
    64  0000                     _PORTD	set	3971
    65  0000                     _TRISE	set	3990
    66  0000                     _TRISD	set	3989
    67  0000                     _PORTB	set	3969
    68  0000                     _PORTDbits	set	3971
    69  0000                     _TRISDbits	set	3989
    70  0000                     _ADCON1	set	4033
    71  0000                     _ADCON0	set	4034
    72  0000                     _TRISEbits	set	3990
    73  0000                     _LATB	set	3978
    74  0000                     _TRISB	set	3987
    75  0000                     _PORTEbits	set	3972
    76  0000                     _INTCON3bits	set	4080
    77  0000                     _INTCON2bits	set	4081
    78  0000                     _INTCONbits	set	4082
    79  0000                     _LATE	set	3981
    80  0000                     _LATD	set	3980
    81  0000                     _LATC	set	3979
    82                           
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	callstack 0
    86  000600  00                 	db	0
    87  000601                     STR_6:
    88  000601  4D                 	db	77	;'M'
    89  000602  6F                 	db	111	;'o'
    90  000603  74                 	db	116	;'t'
    91  000604  6F                 	db	111	;'o'
    92  000605  72                 	db	114	;'r'
    93  000606  20                 	db	32
    94  000607  31                 	db	49	;'1'
    95  000608  3A                 	db	58	;':'
    96  000609  20                 	db	32
    97  00060A  4F                 	db	79	;'O'
    98  00060B  4E                 	db	78	;'N'
    99  00060C  20                 	db	32
   100  00060D  00                 	db	0
   101  00060E                     STR_4:
   102  00060E  4D                 	db	77	;'M'
   103  00060F  6F                 	db	111	;'o'
   104  000610  74                 	db	116	;'t'
   105  000611  6F                 	db	111	;'o'
   106  000612  72                 	db	114	;'r'
   107  000613  20                 	db	32
   108  000614  32                 	db	50	;'2'
   109  000615  3A                 	db	58	;':'
   110  000616  20                 	db	32
   111  000617  4F                 	db	79	;'O'
   112  000618  4E                 	db	78	;'N'
   113  000619  20                 	db	32
   114  00061A  00                 	db	0
   115  00061B                     STR_1:
   116  00061B  4D                 	db	77	;'M'
   117  00061C  6F                 	db	111	;'o'
   118  00061D  74                 	db	116	;'t'
   119  00061E  6F                 	db	111	;'o'
   120  00061F  72                 	db	114	;'r'
   121  000620  20                 	db	32
   122  000621  31                 	db	49	;'1'
   123  000622  3A                 	db	58	;':'
   124  000623  20                 	db	32
   125  000624  4F                 	db	79	;'O'
   126  000625  46                 	db	70	;'F'
   127  000626  46                 	db	70	;'F'
   128  000627  00                 	db	0
   129  000628                     STR_2:
   130  000628  4D                 	db	77	;'M'
   131  000629  6F                 	db	111	;'o'
   132  00062A  74                 	db	116	;'t'
   133  00062B  6F                 	db	111	;'o'
   134  00062C  72                 	db	114	;'r'
   135  00062D  20                 	db	32
   136  00062E  32                 	db	50	;'2'
   137  00062F  3A                 	db	58	;':'
   138  000630  20                 	db	32
   139  000631  4F                 	db	79	;'O'
   140  000632  46                 	db	70	;'F'
   141  000633  46                 	db	70	;'F'
   142  000634  00                 	db	0
   143  000635                     STR_3:
   144  000635  4D                 	db	77	;'M'
   145  000636  61                 	db	97	;'a'
   146  000637  72                 	db	114	;'r'
   147  000638  63                 	db	99	;'c'
   148  000639  75                 	db	117	;'u'
   149  00063A  73                 	db	115	;'s'
   150  00063B  00                 	db	0
   151  00063C  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  000F60                     __pcinit:
   157                           	callstack 0
   158  000F60                     start_initialization:
   159                           	callstack 0
   160  000F60                     __initialization:
   161                           	callstack 0
   162  000F60                     end_of_initialization:
   163                           	callstack 0
   164  000F60                     __end_of__initialization:
   165                           	callstack 0
   166  000F60  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   167  000F62  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   168  000F64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  000F66  6EF8               	movwf	tblptru,c
   170  000F68  0100               	movlb	0
   171  000F6A  EFBF  F006         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	callstack 0
   176  000001                     ??i2_Lcd_Chr_CP:
   177  000001                     ??i2_Lcd_Cmd:
   178                           
   179                           ; 1 bytes @ 0x0
   180  000001                     	ds	2
   181  000003                     i2Lcd_Chr_CP@data:
   182                           	callstack 0
   183  000003                     i2Lcd_Cmd@data:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187  000003                     	ds	1
   188  000004                     i2Lcd_Out@x:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x3
   192  000004                     	ds	1
   193  000005                     i2Lcd_Out@buffer:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x4
   197  000005                     	ds	2
   198  000007                     i2Lcd_Out@y:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x6
   202  000007                     	ds	1
   203  000008                     i2Lcd_Out@data:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x7
   207  000008                     	ds	1
   208  000009                     ??_isr:
   209                           
   210                           ; 1 bytes @ 0x8
   211  000009                     	ds	6
   212  00000F                     ??_Lcd_Cmd:
   213  00000F                     ??_Lcd_Chr_CP:
   214                           
   215                           ; 1 bytes @ 0xE
   216  00000F                     	ds	2
   217  000011                     Lcd_Chr_CP@data:
   218                           	callstack 0
   219  000011                     Lcd_Cmd@data:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x10
   223  000011                     	ds	1
   224  000012                     ??_Lcd_Init:
   225  000012                     Lcd_Out@x:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x11
   229  000012                     	ds	1
   230  000013                     Lcd_Init@data:
   231                           	callstack 0
   232  000013                     Lcd_Out@buffer:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x12
   236  000013                     	ds	2
   237  000015                     Lcd_Out@y:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x14
   241  000015                     	ds	1
   242  000016                     Lcd_Out@data:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x15
   246  000016                     	ds	1
   247  000017                     ??_main:
   248                           
   249                           ; 1 bytes @ 0x16
   250  000017                     	ds	2
   251  000019                     main@l:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x18
   255  000019                     	ds	2
   256                           
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 17 in file "mainMotor.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;  l               2   24[COMRAM] int 
   267 ;;  col             2    0        int 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   277 ;;      Params:         0       0       0       0       0       0       0
   278 ;;      Locals:         2       0       0       0       0       0       0
   279 ;;      Temps:          2       0       0       0       0       0       0
   280 ;;      Totals:         4       0       0       0       0       0       0
   281 ;;Total ram usage:        4 bytes
   282 ;; Hardware stack levels required when called: 5
   283 ;; This function calls:
   284 ;;		_Lcd_Cmd
   285 ;;		_Lcd_Init
   286 ;;		_Lcd_Out
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text0
   293  000D7E                     __ptext0:
   294                           	callstack 0
   295  000D7E                     _main:
   296                           	callstack 26
   297  000D7E                     
   298                           ;mainMotor.c: 19: ADCON0 = 0b00000000;
   299  000D7E  0E00               	movlw	0
   300  000D80  6EC2               	movwf	194,c	;volatile
   301                           
   302                           ;mainMotor.c: 20: ADCON1 = 0b00001111;
   303  000D82  0E0F               	movlw	15
   304  000D84  6EC1               	movwf	193,c	;volatile
   305  000D86                     
   306                           ;mainMotor.c: 24: INTCON2bits.RBPU = 1;
   307  000D86  8EF1               	bsf	241,7,c	;volatile
   308  000D88                     
   309                           ;mainMotor.c: 26: TRISB = 0b11111111;
   310  000D88  6893               	setf	147,c	;volatile
   311                           
   312                           ;mainMotor.c: 27: TRISC = 0b00000000;
   313  000D8A  0E00               	movlw	0
   314  000D8C  6E94               	movwf	148,c	;volatile
   315                           
   316                           ;mainMotor.c: 28: TRISD = 0b00000000;
   317  000D8E  0E00               	movlw	0
   318  000D90  6E95               	movwf	149,c	;volatile
   319                           
   320                           ;mainMotor.c: 29: TRISE = 0b00000000;
   321  000D92  0E00               	movlw	0
   322  000D94  6E96               	movwf	150,c	;volatile
   323  000D96                     
   324                           ;mainMotor.c: 31: INTCON2bits.INTEDG0 = 0;
   325  000D96  9CF1               	bcf	241,6,c	;volatile
   326  000D98                     
   327                           ;mainMotor.c: 33: INTCONbits.INT0IF = 0;
   328  000D98  92F2               	bcf	242,1,c	;volatile
   329  000D9A                     
   330                           ;mainMotor.c: 34: INTCONbits.INT0IE = 1;
   331  000D9A  88F2               	bsf	242,4,c	;volatile
   332  000D9C                     
   333                           ;mainMotor.c: 36: INTCON3bits.INT1IF = 0;
   334  000D9C  90F0               	bcf	240,0,c	;volatile
   335  000D9E                     
   336                           ;mainMotor.c: 37: INTCON3bits.INT1IE = 1;
   337  000D9E  86F0               	bsf	240,3,c	;volatile
   338                           
   339                           ;mainMotor.c: 39: PORTB = 0;
   340  000DA0  0E00               	movlw	0
   341  000DA2  6E81               	movwf	129,c	;volatile
   342                           
   343                           ;mainMotor.c: 40: LATB = 0;
   344  000DA4  0E00               	movlw	0
   345  000DA6  6E8A               	movwf	138,c	;volatile
   346                           
   347                           ;mainMotor.c: 41: PORTC = 0;
   348  000DA8  0E00               	movlw	0
   349  000DAA  6E82               	movwf	130,c	;volatile
   350                           
   351                           ;mainMotor.c: 42: LATC = 0;
   352  000DAC  0E00               	movlw	0
   353  000DAE  6E8B               	movwf	139,c	;volatile
   354                           
   355                           ;mainMotor.c: 43: PORTD = 0;
   356  000DB0  0E00               	movlw	0
   357  000DB2  6E83               	movwf	131,c	;volatile
   358                           
   359                           ;mainMotor.c: 44: LATD = 0;
   360  000DB4  0E00               	movlw	0
   361  000DB6  6E8C               	movwf	140,c	;volatile
   362                           
   363                           ;mainMotor.c: 45: PORTE = 0;
   364  000DB8  0E00               	movlw	0
   365  000DBA  6E84               	movwf	132,c	;volatile
   366                           
   367                           ;mainMotor.c: 46: LATE = 0;
   368  000DBC  0E00               	movlw	0
   369  000DBE  6E8D               	movwf	141,c	;volatile
   370                           
   371                           ;mainMotor.c: 50: l = 1;
   372  000DC0  0E00               	movlw	0
   373  000DC2  6E1A               	movwf	(main@l+1)^0,c
   374  000DC4  0E01               	movlw	1
   375  000DC6  6E19               	movwf	main@l^0,c
   376  000DC8                     
   377                           ;mainMotor.c: 51: Lcd_Init();
   378  000DC8  EC37  F006         	call	_Lcd_Init	;wreg free
   379  000DCC                     
   380                           ;mainMotor.c: 52: Lcd_Cmd(12);
   381  000DCC  0E0C               	movlw	12
   382  000DCE  EC0B  F005         	call	_Lcd_Cmd
   383  000DD2                     
   384                           ;mainMotor.c: 53: Lcd_Out(1, 0, "Motor 1: OFF");
   385  000DD2  0E00               	movlw	0
   386  000DD4  6E12               	movwf	Lcd_Out@x^0,c
   387  000DD6  0E1B               	movlw	low STR_1
   388  000DD8  6E13               	movwf	Lcd_Out@buffer^0,c
   389  000DDA  0E06               	movlw	high STR_1
   390  000DDC  6E14               	movwf	(Lcd_Out@buffer+1)^0,c
   391  000DDE  0E01               	movlw	1
   392  000DE0  EC20  F007         	call	_Lcd_Out
   393  000DE4                     
   394                           ;mainMotor.c: 54: Lcd_Out(2, 0, "Motor 2: OFF");
   395  000DE4  0E00               	movlw	0
   396  000DE6  6E12               	movwf	Lcd_Out@x^0,c
   397  000DE8  0E28               	movlw	low STR_2
   398  000DEA  6E13               	movwf	Lcd_Out@buffer^0,c
   399  000DEC  0E06               	movlw	high STR_2
   400  000DEE  6E14               	movwf	(Lcd_Out@buffer+1)^0,c
   401  000DF0  0E02               	movlw	2
   402  000DF2  EC20  F007         	call	_Lcd_Out
   403  000DF6                     
   404                           ;mainMotor.c: 55: (INTCONbits.GIE = 1);
   405  000DF6  8EF2               	bsf	242,7,c	;volatile
   406  000DF8                     l1257:
   407                           
   408                           ;mainMotor.c: 57: {;mainMotor.c: 59: if(PORTBbits.RB3 == 0){
   409  000DF8  B681               	btfsc	129,3,c	;volatile
   410  000DFA  EF01  F007         	goto	u341
   411  000DFE  EF03  F007         	goto	u340
   412  000E02                     u341:
   413  000E02  EF1B  F007         	goto	l97
   414  000E06                     u340:
   415  000E06                     
   416                           ;mainMotor.c: 60: Lcd_Cmd(1);
   417  000E06  0E01               	movlw	1
   418  000E08  EC0B  F005         	call	_Lcd_Cmd
   419  000E0C                     
   420                           ;mainMotor.c: 61: Lcd_Out(l, 0, "Marcus");
   421  000E0C  0E00               	movlw	0
   422  000E0E  6E12               	movwf	Lcd_Out@x^0,c
   423  000E10  0E35               	movlw	low STR_3
   424  000E12  6E13               	movwf	Lcd_Out@buffer^0,c
   425  000E14  0E06               	movlw	high STR_3
   426  000E16  6E14               	movwf	(Lcd_Out@buffer+1)^0,c
   427  000E18  5019               	movf	main@l^0,w,c
   428  000E1A  EC20  F007         	call	_Lcd_Out
   429  000E1E                     
   430                           ;mainMotor.c: 62: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   431  000E1E  0E02               	movlw	2
   432  000E20  6E18               	movwf	(??_main+1)^0,c
   433  000E22  0E86               	movlw	134
   434  000E24  6E17               	movwf	??_main^0,c
   435  000E26  0EDB               	movlw	219
   436  000E28                     u437:
   437  000E28  0004               	clrwdt	
   438  000E2A  2EE8               	decfsz	wreg,f,c
   439  000E2C  D7FD               	bra	u437
   440  000E2E  2E17               	decfsz	??_main^0,f,c
   441  000E30  D7FB               	bra	u437
   442  000E32  2E18               	decfsz	(??_main+1)^0,f,c
   443  000E34  D7F9               	bra	u437
   444  000E36                     l97:
   445  000E36  0004               	clrwdt		;# 
   446  000E38  EFFC  F006         	goto	l1257
   447  000E3C  EF07  F000         	goto	start
   448  000E40                     __end_of_main:
   449                           	callstack 0
   450                           
   451 ;; *************** function _Lcd_Out *****************
   452 ;; Defined at:
   453 ;;		line 119 in file "flexlcd.h"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  y               1    wreg     unsigned char 
   456 ;;  x               1   17[COMRAM] unsigned char 
   457 ;;  buffer          2   18[COMRAM] PTR const unsigned char 
   458 ;;		 -> STR_7(13), STR_6(13), STR_5(13), STR_4(13), 
   459 ;;		 -> STR_3(7), STR_2(13), STR_1(13), 
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  y               1   20[COMRAM] unsigned char 
   462 ;;  data            1   21[COMRAM] unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   472 ;;      Params:         3       0       0       0       0       0       0
   473 ;;      Locals:         2       0       0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0
   475 ;;      Totals:         5       0       0       0       0       0       0
   476 ;;Total ram usage:        5 bytes
   477 ;; Hardware stack levels used: 1
   478 ;; Hardware stack levels required when called: 4
   479 ;; This function calls:
   480 ;;		_Lcd_Chr_CP
   481 ;;		_Lcd_Cmd
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text1
   488  000E40                     __ptext1:
   489                           	callstack 0
   490  000E40                     _Lcd_Out:
   491                           	callstack 26
   492                           
   493                           ;incstack = 0
   494                           ;Lcd_Out@y stored from wreg
   495  000E40  6E15               	movwf	Lcd_Out@y^0,c
   496  000E42                     
   497                           ;flexlcd.h: 121: unsigned char data;;flexlcd.h: 122: switch (y)
   498  000E42  EF37  F007         	goto	l1199
   499  000E46                     l1189:
   500  000E46  5012               	movf	Lcd_Out@x^0,w,c
   501  000E48  0F80               	addlw	128
   502  000E4A  6E16               	movwf	Lcd_Out@data^0,c
   503  000E4C  EF4A  F007         	goto	l1201
   504  000E50                     l1191:
   505  000E50  5012               	movf	Lcd_Out@x^0,w,c
   506  000E52  0FC0               	addlw	192
   507  000E54  6E16               	movwf	Lcd_Out@data^0,c
   508  000E56  EF4A  F007         	goto	l1201
   509  000E5A                     l1193:
   510  000E5A  5012               	movf	Lcd_Out@x^0,w,c
   511  000E5C  0F94               	addlw	148
   512  000E5E  6E16               	movwf	Lcd_Out@data^0,c
   513  000E60  EF4A  F007         	goto	l1201
   514  000E64                     l1195:
   515  000E64  5012               	movf	Lcd_Out@x^0,w,c
   516  000E66  0FD4               	addlw	212
   517  000E68  6E16               	movwf	Lcd_Out@data^0,c
   518  000E6A  EF4A  F007         	goto	l1201
   519  000E6E                     l1199:
   520  000E6E  5015               	movf	Lcd_Out@y^0,w,c
   521                           
   522                           ; Switch size 1, requested type "simple"
   523                           ; Number of cases is 4, Range of values is 1 to 4
   524                           ; switch strategies available:
   525                           ; Name         Instructions Cycles
   526                           ; simple_byte           13     7 (average)
   527                           ;	Chosen strategy is simple_byte
   528  000E70  0A01               	xorlw	1	; case 1
   529  000E72  B4D8               	btfsc	status,2,c
   530  000E74  EF23  F007         	goto	l1189
   531  000E78  0A03               	xorlw	3	; case 2
   532  000E7A  B4D8               	btfsc	status,2,c
   533  000E7C  EF28  F007         	goto	l1191
   534  000E80  0A01               	xorlw	1	; case 3
   535  000E82  B4D8               	btfsc	status,2,c
   536  000E84  EF2D  F007         	goto	l1193
   537  000E88  0A07               	xorlw	7	; case 4
   538  000E8A  B4D8               	btfsc	status,2,c
   539  000E8C  EF32  F007         	goto	l1195
   540  000E90  EF4A  F007         	goto	l1201
   541  000E94                     l1201:
   542                           
   543                           ;flexlcd.h: 130: Lcd_Cmd(data);
   544  000E94  5016               	movf	Lcd_Out@data^0,w,c
   545  000E96  EC0B  F005         	call	_Lcd_Cmd
   546                           
   547                           ;flexlcd.h: 131: while(*buffer)
   548  000E9A  EF59  F007         	goto	l1207
   549  000E9E                     l1203:
   550                           
   551                           ;flexlcd.h: 132: {;flexlcd.h: 133: Lcd_Chr_CP(*buffer);
   552  000E9E  C013  FFF6         	movff	Lcd_Out@buffer,tblptrl
   553  000EA2  C014  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   554  000EA6                     	if	0	;tblptru may be non-zero
   555  000EA6                     	endif
   556  000EA6                     	if	0	;tblptru may be non-zero
   557  000EA6                     	endif
   558  000EA6  0008               	tblrd		*
   559  000EA8  50F5               	movf	tablat,w,c
   560  000EAA  ECD7  F003         	call	_Lcd_Chr_CP
   561  000EAE                     
   562                           ;flexlcd.h: 134: buffer++;
   563  000EAE  4A13               	infsnz	Lcd_Out@buffer^0,f,c
   564  000EB0  2A14               	incf	(Lcd_Out@buffer+1)^0,f,c
   565  000EB2                     l1207:
   566  000EB2  C013  FFF6         	movff	Lcd_Out@buffer,tblptrl
   567  000EB6  C014  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   568  000EBA                     	if	0	;tblptru may be non-zero
   569  000EBA                     	endif
   570  000EBA                     	if	0	;tblptru may be non-zero
   571  000EBA                     	endif
   572  000EBA  0008               	tblrd		*
   573  000EBC  50F5               	movf	tablat,w,c
   574  000EBE  0900               	iorlw	0
   575  000EC0  A4D8               	btfss	status,2,c
   576  000EC2  EF65  F007         	goto	u321
   577  000EC6  EF67  F007         	goto	u320
   578  000ECA                     u321:
   579  000ECA  EF4F  F007         	goto	l1203
   580  000ECE                     u320:
   581  000ECE  0012               	return		;funcret
   582  000ED0                     __end_of_Lcd_Out:
   583                           	callstack 0
   584                           
   585 ;; *************** function _Lcd_Chr_CP *****************
   586 ;; Defined at:
   587 ;;		line 161 in file "flexlcd.h"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  data            1    wreg     unsigned char 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  data            1   16[COMRAM] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         1       0       0       0       0       0       0
   603 ;;      Temps:          2       0       0       0       0       0       0
   604 ;;      Totals:         3       0       0       0       0       0       0
   605 ;;Total ram usage:        3 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 3
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_Lcd_Out
   612 ;;		_Lcd_Out2
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text2
   617  0007AE                     __ptext2:
   618                           	callstack 0
   619  0007AE                     _Lcd_Chr_CP:
   620                           	callstack 26
   621                           
   622                           ;incstack = 0
   623                           ;Lcd_Chr_CP@data stored from wreg
   624  0007AE  6E11               	movwf	Lcd_Chr_CP@data^0,c
   625  0007B0                     
   626                           ;flexlcd.h: 162: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
   627  0007B0  9284               	bcf	132,1,c	;volatile
   628  0007B2  8484               	bsf	132,2,c	;volatile
   629  0007B4                     
   630                           ;flexlcd.h: 163: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   631  0007B4  6A0F               	clrf	??_Lcd_Chr_CP^0,c
   632  0007B6  AE11               	btfss	Lcd_Chr_CP@data^0,7,c
   633  0007B8  D001               	bra	u45
   634  0007BA  2A0F               	incf	??_Lcd_Chr_CP^0,f,c
   635  0007BC                     u45:
   636  0007BC  0E01               	movlw	1
   637  0007BE  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   638  0007C0  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   639  0007C2  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   640  0007C4  5083               	movf	131,w,c	;volatile
   641  0007C6  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   642  0007C8  0B7F               	andlw	-129
   643  0007CA  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   644  0007CC  6E83               	movwf	131,c	;volatile
   645  0007CE  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   646  0007D2  0E06               	movlw	6
   647  0007D4  6E10               	movwf	(??_Lcd_Chr_CP+1)^0,c
   648  0007D6                     u55:
   649  0007D6  90D8               	bcf	status,0,c
   650  0007D8  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   651  0007DA  2E10               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   652  0007DC  EFEB  F003         	goto	u55
   653  0007E0  0E01               	movlw	1
   654  0007E2  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   655  0007E4  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   656  0007E6  460F               	rlncf	??_Lcd_Chr_CP^0,f,c
   657  0007E8  460F               	rlncf	??_Lcd_Chr_CP^0,f,c
   658  0007EA  5083               	movf	131,w,c	;volatile
   659  0007EC  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   660  0007EE  0BBF               	andlw	-65
   661  0007F0  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   662  0007F2  6E83               	movwf	131,c	;volatile
   663                           
   664                           ;flexlcd.h: 164: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
   665  0007F4  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   666  0007F8  0E05               	movlw	5
   667  0007FA  6E10               	movwf	(??_Lcd_Chr_CP+1)^0,c
   668  0007FC                     u65:
   669  0007FC  90D8               	bcf	status,0,c
   670  0007FE  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   671  000800  2E10               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   672  000802  EFFE  F003         	goto	u65
   673  000806  0E01               	movlw	1
   674  000808  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   675  00080A  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   676  00080C  460F               	rlncf	??_Lcd_Chr_CP^0,f,c
   677  00080E  5083               	movf	131,w,c	;volatile
   678  000810  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   679  000812  0BDF               	andlw	-33
   680  000814  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   681  000816  6E83               	movwf	131,c	;volatile
   682  000818  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   683  00081C  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   684  00081E  0E0F               	movlw	15
   685  000820  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   686  000822  0E01               	movlw	1
   687  000824  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   688  000826  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   689  000828  5083               	movf	131,w,c	;volatile
   690  00082A  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   691  00082C  0BEF               	andlw	-17
   692  00082E  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   693  000830  6E83               	movwf	131,c	;volatile
   694  000832                     
   695                           ;flexlcd.h: 165: _delay(10);
   696  000832  0E03               	movlw	3
   697  000834                     u447:
   698  000834  2EE8               	decfsz	wreg,f,c
   699  000836  D7FE               	bra	u447
   700  000838  F000               	nop	
   701  00083A                     
   702                           ;flexlcd.h: 166: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   703  00083A  8284               	bsf	132,1,c	;volatile
   704  00083C  0E03               	movlw	3
   705  00083E                     u457:
   706  00083E  2EE8               	decfsz	wreg,f,c
   707  000840  D7FE               	bra	u457
   708  000842  F000               	nop	
   709  000844  9284               	bcf	132,1,c	;volatile
   710                           
   711                           ;flexlcd.h: 167: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
   712  000846  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   713  00084A  90D8               	bcf	status,0,c
   714  00084C  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   715  00084E  90D8               	bcf	status,0,c
   716  000850  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   717  000852  90D8               	bcf	status,0,c
   718  000854  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   719  000856  0E01               	movlw	1
   720  000858  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   721  00085A  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   722  00085C  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   723  00085E  5083               	movf	131,w,c	;volatile
   724  000860  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   725  000862  0B7F               	andlw	-129
   726  000864  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   727  000866  6E83               	movwf	131,c	;volatile
   728  000868  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   729  00086C  90D8               	bcf	status,0,c
   730  00086E  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   731  000870  90D8               	bcf	status,0,c
   732  000872  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   733  000874  0E01               	movlw	1
   734  000876  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   735  000878  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   736  00087A  460F               	rlncf	??_Lcd_Chr_CP^0,f,c
   737  00087C  460F               	rlncf	??_Lcd_Chr_CP^0,f,c
   738  00087E  5083               	movf	131,w,c	;volatile
   739  000880  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   740  000882  0BBF               	andlw	-65
   741  000884  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   742  000886  6E83               	movwf	131,c	;volatile
   743                           
   744                           ;flexlcd.h: 168: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
   745  000888  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   746  00088C  90D8               	bcf	status,0,c
   747  00088E  320F               	rrcf	??_Lcd_Chr_CP^0,f,c
   748  000890  0E01               	movlw	1
   749  000892  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   750  000894  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   751  000896  460F               	rlncf	??_Lcd_Chr_CP^0,f,c
   752  000898  5083               	movf	131,w,c	;volatile
   753  00089A  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   754  00089C  0BDF               	andlw	-33
   755  00089E  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   756  0008A0  6E83               	movwf	131,c	;volatile
   757  0008A2  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   758  0008A6  0E01               	movlw	1
   759  0008A8  160F               	andwf	??_Lcd_Chr_CP^0,f,c
   760  0008AA  3A0F               	swapf	??_Lcd_Chr_CP^0,f,c
   761  0008AC  5083               	movf	131,w,c	;volatile
   762  0008AE  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   763  0008B0  0BEF               	andlw	-17
   764  0008B2  180F               	xorwf	??_Lcd_Chr_CP^0,w,c
   765  0008B4  6E83               	movwf	131,c	;volatile
   766  0008B6                     
   767                           ;flexlcd.h: 169: _delay(10);
   768  0008B6  0E03               	movlw	3
   769  0008B8                     u467:
   770  0008B8  2EE8               	decfsz	wreg,f,c
   771  0008BA  D7FE               	bra	u467
   772  0008BC  F000               	nop	
   773  0008BE                     
   774                           ;flexlcd.h: 170: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   775  0008BE  8284               	bsf	132,1,c	;volatile
   776  0008C0  0E03               	movlw	3
   777  0008C2                     u477:
   778  0008C2  2EE8               	decfsz	wreg,f,c
   779  0008C4  D7FE               	bra	u477
   780  0008C6  F000               	nop	
   781  0008C8  9284               	bcf	132,1,c	;volatile
   782  0008CA                     
   783                           ;flexlcd.h: 171: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
   784  0008CA  0E03               	movlw	3
   785  0008CC                     u487:
   786  0008CC  2EE8               	decfsz	wreg,f,c
   787  0008CE  D7FE               	bra	u487
   788  0008D0  F000               	nop	
   789  0008D2  0E0F               	movlw	15
   790  0008D4  6E0F               	movwf	??_Lcd_Chr_CP^0,c
   791  0008D6  0E48               	movlw	72
   792  0008D8                     u497:
   793  0008D8  2EE8               	decfsz	wreg,f,c
   794  0008DA  D7FE               	bra	u497
   795  0008DC  2E0F               	decfsz	??_Lcd_Chr_CP^0,f,c
   796  0008DE  D7FC               	bra	u497
   797  0008E0  0012               	return		;funcret
   798  0008E2                     __end_of_Lcd_Chr_CP:
   799                           	callstack 0
   800                           
   801 ;; *************** function _Lcd_Init *****************
   802 ;; Defined at:
   803 ;;		line 77 in file "flexlcd.h"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  data            1   18[COMRAM] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   817 ;;      Params:         0       0       0       0       0       0       0
   818 ;;      Locals:         1       0       0       0       0       0       0
   819 ;;      Temps:          1       0       0       0       0       0       0
   820 ;;      Totals:         2       0       0       0       0       0       0
   821 ;;Total ram usage:        2 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 4
   824 ;; This function calls:
   825 ;;		_Lcd_Cmd
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text3
   832  000C6E                     __ptext3:
   833                           	callstack 0
   834  000C6E                     _Lcd_Init:
   835                           	callstack 26
   836  000C6E                     
   837                           ;flexlcd.h: 78: unsigned char data;;flexlcd.h: 79: TRISDbits.TRISD7 = 0;
   838  000C6E  9E95               	bcf	149,7,c	;volatile
   839                           
   840                           ;flexlcd.h: 80: TRISDbits.TRISD6 = 0;
   841  000C70  9C95               	bcf	149,6,c	;volatile
   842                           
   843                           ;flexlcd.h: 81: TRISDbits.TRISD5 = 0;
   844  000C72  9A95               	bcf	149,5,c	;volatile
   845                           
   846                           ;flexlcd.h: 82: TRISDbits.TRISD4 = 0;
   847  000C74  9895               	bcf	149,4,c	;volatile
   848                           
   849                           ;flexlcd.h: 83: TRISEbits.TRISE2 = 0;
   850  000C76  9496               	bcf	150,2,c	;volatile
   851                           
   852                           ;flexlcd.h: 84: TRISEbits.TRISE1 = 0;
   853  000C78  9296               	bcf	150,1,c	;volatile
   854                           
   855                           ;flexlcd.h: 85: PORTDbits.RD7 = 0;
   856  000C7A  9E83               	bcf	131,7,c	;volatile
   857                           
   858                           ;flexlcd.h: 86: PORTDbits.RD6 = 0;
   859  000C7C  9C83               	bcf	131,6,c	;volatile
   860                           
   861                           ;flexlcd.h: 87: PORTDbits.RD5 = 0;
   862  000C7E  9A83               	bcf	131,5,c	;volatile
   863                           
   864                           ;flexlcd.h: 88: PORTDbits.RD4 = 0;
   865  000C80  9883               	bcf	131,4,c	;volatile
   866                           
   867                           ;flexlcd.h: 89: PORTEbits.RE1 = 0;
   868  000C82  9284               	bcf	132,1,c	;volatile
   869                           
   870                           ;flexlcd.h: 90: PORTEbits.RE2 = 0;
   871  000C84  9484               	bcf	132,2,c	;volatile
   872  000C86                     
   873                           ;flexlcd.h: 91: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   874  000C86  0E0F               	movlw	15
   875  000C88  6E12               	movwf	??_Lcd_Init^0,c
   876  000C8A  0E48               	movlw	72
   877  000C8C                     u507:
   878  000C8C  2EE8               	decfsz	wreg,f,c
   879  000C8E  D7FE               	bra	u507
   880  000C90  2E12               	decfsz	??_Lcd_Init^0,f,c
   881  000C92  D7FC               	bra	u507
   882                           
   883                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   884  000C94  0E0F               	movlw	15
   885  000C96  6E12               	movwf	??_Lcd_Init^0,c
   886  000C98  0E48               	movlw	72
   887  000C9A                     u517:
   888  000C9A  2EE8               	decfsz	wreg,f,c
   889  000C9C  D7FE               	bra	u517
   890  000C9E  2E12               	decfsz	??_Lcd_Init^0,f,c
   891  000CA0  D7FC               	bra	u517
   892                           
   893                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   894  000CA2  0E0F               	movlw	15
   895  000CA4  6E12               	movwf	??_Lcd_Init^0,c
   896  000CA6  0E48               	movlw	72
   897  000CA8                     u527:
   898  000CA8  2EE8               	decfsz	wreg,f,c
   899  000CAA  D7FE               	bra	u527
   900  000CAC  2E12               	decfsz	??_Lcd_Init^0,f,c
   901  000CAE  D7FC               	bra	u527
   902                           
   903                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   904  000CB0  0E0F               	movlw	15
   905  000CB2  6E12               	movwf	??_Lcd_Init^0,c
   906  000CB4  0E48               	movlw	72
   907  000CB6                     u537:
   908  000CB6  2EE8               	decfsz	wreg,f,c
   909  000CB8  D7FE               	bra	u537
   910  000CBA  2E12               	decfsz	??_Lcd_Init^0,f,c
   911  000CBC  D7FC               	bra	u537
   912                           
   913                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   914  000CBE  0E0F               	movlw	15
   915  000CC0  6E12               	movwf	??_Lcd_Init^0,c
   916  000CC2  0E48               	movlw	72
   917  000CC4                     u547:
   918  000CC4  2EE8               	decfsz	wreg,f,c
   919  000CC6  D7FE               	bra	u547
   920  000CC8  2E12               	decfsz	??_Lcd_Init^0,f,c
   921  000CCA  D7FC               	bra	u547
   922                           
   923                           ;flexlcd.h: 96: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   924  000CCC  0E0F               	movlw	15
   925  000CCE  6E12               	movwf	??_Lcd_Init^0,c
   926  000CD0  0E48               	movlw	72
   927  000CD2                     u557:
   928  000CD2  2EE8               	decfsz	wreg,f,c
   929  000CD4  D7FE               	bra	u557
   930  000CD6  2E12               	decfsz	??_Lcd_Init^0,f,c
   931  000CD8  D7FC               	bra	u557
   932  000CDA                     
   933                           ;flexlcd.h: 97: for(data = 1; data < 4; data ++)
   934  000CDA  0E01               	movlw	1
   935  000CDC  6E13               	movwf	Lcd_Init@data^0,c
   936  000CDE                     l57:
   937                           
   938                           ;flexlcd.h: 98: {;flexlcd.h: 99: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
   939  000CDE  9E83               	bcf	131,7,c	;volatile
   940  000CE0  9C83               	bcf	131,6,c	;volatile
   941  000CE2  8A83               	bsf	131,5,c	;volatile
   942  000CE4  8883               	bsf	131,4,c	;volatile
   943  000CE6  9284               	bcf	132,1,c	;volatile
   944                           
   945                           ;flexlcd.h: 100: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 
      +                          = 1; PORTDbits.RD4 = 1;
   946  000CE8  9484               	bcf	132,2,c	;volatile
   947  000CEA  9E83               	bcf	131,7,c	;volatile
   948  000CEC  9C83               	bcf	131,6,c	;volatile
   949  000CEE  8A83               	bsf	131,5,c	;volatile
   950  000CF0  8883               	bsf	131,4,c	;volatile
   951                           
   952                           ;flexlcd.h: 101: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
   953  000CF2  8284               	bsf	132,1,c	;volatile
   954  000CF4  9484               	bcf	132,2,c	;volatile
   955  000CF6                     
   956                           ;flexlcd.h: 102: _delay((unsigned long)((5)*(8000000/4000000.0)));
   957  000CF6  0E03               	movlw	3
   958  000CF8                     u567:
   959  000CF8  2EE8               	decfsz	wreg,f,c
   960  000CFA  D7FE               	bra	u567
   961  000CFC  F000               	nop	
   962  000CFE                     
   963                           ;flexlcd.h: 103: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
   964  000CFE  9E83               	bcf	131,7,c	;volatile
   965  000D00  9C83               	bcf	131,6,c	;volatile
   966  000D02  8A83               	bsf	131,5,c	;volatile
   967  000D04  8883               	bsf	131,4,c	;volatile
   968  000D06  9284               	bcf	132,1,c	;volatile
   969  000D08                     
   970                           ;flexlcd.h: 104: PORTEbits.RE2 = 0;
   971  000D08  9484               	bcf	132,2,c	;volatile
   972                           
   973                           ;flexlcd.h: 105: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   974  000D0A  0E0F               	movlw	15
   975  000D0C  6E12               	movwf	??_Lcd_Init^0,c
   976  000D0E  0E48               	movlw	72
   977  000D10                     u577:
   978  000D10  2EE8               	decfsz	wreg,f,c
   979  000D12  D7FE               	bra	u577
   980  000D14  2E12               	decfsz	??_Lcd_Init^0,f,c
   981  000D16  D7FC               	bra	u577
   982  000D18  2A13               	incf	Lcd_Init@data^0,f,c
   983  000D1A  0E03               	movlw	3
   984  000D1C  6413               	cpfsgt	Lcd_Init@data^0,c
   985  000D1E  EF93  F006         	goto	u131
   986  000D22  EF95  F006         	goto	u130
   987  000D26                     u131:
   988  000D26  EF6F  F006         	goto	l57
   989  000D2A                     u130:
   990  000D2A                     
   991                           ;flexlcd.h: 106: };flexlcd.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
   992  000D2A  9E83               	bcf	131,7,c	;volatile
   993  000D2C  9C83               	bcf	131,6,c	;volatile
   994  000D2E  8A83               	bsf	131,5,c	;volatile
   995  000D30  9883               	bcf	131,4,c	;volatile
   996  000D32  9284               	bcf	132,1,c	;volatile
   997  000D34  9484               	bcf	132,2,c	;volatile
   998                           
   999                           ;flexlcd.h: 108: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1000  000D36  9E83               	bcf	131,7,c	;volatile
  1001  000D38  9C83               	bcf	131,6,c	;volatile
  1002  000D3A  8A83               	bsf	131,5,c	;volatile
  1003  000D3C  9883               	bcf	131,4,c	;volatile
  1004  000D3E  8284               	bsf	132,1,c	;volatile
  1005  000D40  9484               	bcf	132,2,c	;volatile
  1006  000D42                     
  1007                           ;flexlcd.h: 109: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1008  000D42  0E03               	movlw	3
  1009  000D44                     u587:
  1010  000D44  2EE8               	decfsz	wreg,f,c
  1011  000D46  D7FE               	bra	u587
  1012  000D48  F000               	nop	
  1013  000D4A                     
  1014                           ;flexlcd.h: 110: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1015  000D4A  9E83               	bcf	131,7,c	;volatile
  1016  000D4C  9C83               	bcf	131,6,c	;volatile
  1017  000D4E  8A83               	bsf	131,5,c	;volatile
  1018  000D50  9883               	bcf	131,4,c	;volatile
  1019  000D52  9284               	bcf	132,1,c	;volatile
  1020  000D54  9484               	bcf	132,2,c	;volatile
  1021                           
  1022                           ;flexlcd.h: 111: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1023  000D56  0E0F               	movlw	15
  1024  000D58  6E12               	movwf	??_Lcd_Init^0,c
  1025  000D5A  0E48               	movlw	72
  1026  000D5C                     u597:
  1027  000D5C  2EE8               	decfsz	wreg,f,c
  1028  000D5E  D7FE               	bra	u597
  1029  000D60  2E12               	decfsz	??_Lcd_Init^0,f,c
  1030  000D62  D7FC               	bra	u597
  1031  000D64  0E28               	movlw	40
  1032  000D66  EC0B  F005         	call	_Lcd_Cmd
  1033  000D6A  0E10               	movlw	16
  1034  000D6C  EC0B  F005         	call	_Lcd_Cmd
  1035  000D70  0E01               	movlw	1
  1036  000D72  EC0B  F005         	call	_Lcd_Cmd
  1037  000D76  0E0F               	movlw	15
  1038  000D78  EC0B  F005         	call	_Lcd_Cmd
  1039  000D7C  0012               	return		;funcret
  1040  000D7E                     __end_of_Lcd_Init:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _Lcd_Cmd *****************
  1044 ;; Defined at:
  1045 ;;		line 175 in file "flexlcd.h"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  data            1    wreg     unsigned char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  data            1   16[COMRAM] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1059 ;;      Params:         0       0       0       0       0       0       0
  1060 ;;      Locals:         1       0       0       0       0       0       0
  1061 ;;      Temps:          2       0       0       0       0       0       0
  1062 ;;      Totals:         3       0       0       0       0       0       0
  1063 ;;Total ram usage:        3 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 3
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_Lcd_Init
  1070 ;;		_Lcd_Out
  1071 ;;		_main
  1072 ;;		_Lcd_Out2
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text4
  1077  000A16                     __ptext4:
  1078                           	callstack 0
  1079  000A16                     _Lcd_Cmd:
  1080                           	callstack 26
  1081                           
  1082                           ;incstack = 0
  1083                           ;Lcd_Cmd@data stored from wreg
  1084  000A16  6E11               	movwf	Lcd_Cmd@data^0,c
  1085  000A18                     
  1086                           ;flexlcd.h: 176: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1087  000A18  9284               	bcf	132,1,c	;volatile
  1088  000A1A  9484               	bcf	132,2,c	;volatile
  1089  000A1C                     
  1090                           ;flexlcd.h: 177: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1091  000A1C  6A0F               	clrf	??_Lcd_Cmd^0,c
  1092  000A1E  AE11               	btfss	Lcd_Cmd@data^0,7,c
  1093  000A20  D001               	bra	u15
  1094  000A22  2A0F               	incf	??_Lcd_Cmd^0,f,c
  1095  000A24                     u15:
  1096  000A24  0E01               	movlw	1
  1097  000A26  160F               	andwf	??_Lcd_Cmd^0,f,c
  1098  000A28  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1099  000A2A  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1100  000A2C  5083               	movf	131,w,c	;volatile
  1101  000A2E  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1102  000A30  0B7F               	andlw	-129
  1103  000A32  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1104  000A34  6E83               	movwf	131,c	;volatile
  1105  000A36  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1106  000A3A  0E06               	movlw	6
  1107  000A3C  6E10               	movwf	(??_Lcd_Cmd+1)^0,c
  1108  000A3E                     u25:
  1109  000A3E  90D8               	bcf	status,0,c
  1110  000A40  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1111  000A42  2E10               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1112  000A44  EF1F  F005         	goto	u25
  1113  000A48  0E01               	movlw	1
  1114  000A4A  160F               	andwf	??_Lcd_Cmd^0,f,c
  1115  000A4C  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1116  000A4E  460F               	rlncf	??_Lcd_Cmd^0,f,c
  1117  000A50  460F               	rlncf	??_Lcd_Cmd^0,f,c
  1118  000A52  5083               	movf	131,w,c	;volatile
  1119  000A54  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1120  000A56  0BBF               	andlw	-65
  1121  000A58  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1122  000A5A  6E83               	movwf	131,c	;volatile
  1123                           
  1124                           ;flexlcd.h: 178: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1125  000A5C  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1126  000A60  0E05               	movlw	5
  1127  000A62  6E10               	movwf	(??_Lcd_Cmd+1)^0,c
  1128  000A64                     u35:
  1129  000A64  90D8               	bcf	status,0,c
  1130  000A66  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1131  000A68  2E10               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1132  000A6A  EF32  F005         	goto	u35
  1133  000A6E  0E01               	movlw	1
  1134  000A70  160F               	andwf	??_Lcd_Cmd^0,f,c
  1135  000A72  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1136  000A74  460F               	rlncf	??_Lcd_Cmd^0,f,c
  1137  000A76  5083               	movf	131,w,c	;volatile
  1138  000A78  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1139  000A7A  0BDF               	andlw	-33
  1140  000A7C  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1141  000A7E  6E83               	movwf	131,c	;volatile
  1142  000A80  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1143  000A84  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1144  000A86  0E0F               	movlw	15
  1145  000A88  160F               	andwf	??_Lcd_Cmd^0,f,c
  1146  000A8A  0E01               	movlw	1
  1147  000A8C  160F               	andwf	??_Lcd_Cmd^0,f,c
  1148  000A8E  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1149  000A90  5083               	movf	131,w,c	;volatile
  1150  000A92  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1151  000A94  0BEF               	andlw	-17
  1152  000A96  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1153  000A98  6E83               	movwf	131,c	;volatile
  1154  000A9A                     
  1155                           ;flexlcd.h: 179: _delay(10);
  1156  000A9A  0E03               	movlw	3
  1157  000A9C                     u607:
  1158  000A9C  2EE8               	decfsz	wreg,f,c
  1159  000A9E  D7FE               	bra	u607
  1160  000AA0  F000               	nop	
  1161  000AA2                     
  1162                           ;flexlcd.h: 180: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1163  000AA2  8284               	bsf	132,1,c	;volatile
  1164  000AA4  0E03               	movlw	3
  1165  000AA6                     u617:
  1166  000AA6  2EE8               	decfsz	wreg,f,c
  1167  000AA8  D7FE               	bra	u617
  1168  000AAA  F000               	nop	
  1169  000AAC  9284               	bcf	132,1,c	;volatile
  1170                           
  1171                           ;flexlcd.h: 181: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1172  000AAE  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1173  000AB2  90D8               	bcf	status,0,c
  1174  000AB4  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1175  000AB6  90D8               	bcf	status,0,c
  1176  000AB8  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1177  000ABA  90D8               	bcf	status,0,c
  1178  000ABC  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1179  000ABE  0E01               	movlw	1
  1180  000AC0  160F               	andwf	??_Lcd_Cmd^0,f,c
  1181  000AC2  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1182  000AC4  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1183  000AC6  5083               	movf	131,w,c	;volatile
  1184  000AC8  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1185  000ACA  0B7F               	andlw	-129
  1186  000ACC  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1187  000ACE  6E83               	movwf	131,c	;volatile
  1188  000AD0  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1189  000AD4  90D8               	bcf	status,0,c
  1190  000AD6  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1191  000AD8  90D8               	bcf	status,0,c
  1192  000ADA  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1193  000ADC  0E01               	movlw	1
  1194  000ADE  160F               	andwf	??_Lcd_Cmd^0,f,c
  1195  000AE0  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1196  000AE2  460F               	rlncf	??_Lcd_Cmd^0,f,c
  1197  000AE4  460F               	rlncf	??_Lcd_Cmd^0,f,c
  1198  000AE6  5083               	movf	131,w,c	;volatile
  1199  000AE8  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1200  000AEA  0BBF               	andlw	-65
  1201  000AEC  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1202  000AEE  6E83               	movwf	131,c	;volatile
  1203                           
  1204                           ;flexlcd.h: 182: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1205  000AF0  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1206  000AF4  90D8               	bcf	status,0,c
  1207  000AF6  320F               	rrcf	??_Lcd_Cmd^0,f,c
  1208  000AF8  0E01               	movlw	1
  1209  000AFA  160F               	andwf	??_Lcd_Cmd^0,f,c
  1210  000AFC  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1211  000AFE  460F               	rlncf	??_Lcd_Cmd^0,f,c
  1212  000B00  5083               	movf	131,w,c	;volatile
  1213  000B02  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1214  000B04  0BDF               	andlw	-33
  1215  000B06  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1216  000B08  6E83               	movwf	131,c	;volatile
  1217  000B0A  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1218  000B0E  0E01               	movlw	1
  1219  000B10  160F               	andwf	??_Lcd_Cmd^0,f,c
  1220  000B12  3A0F               	swapf	??_Lcd_Cmd^0,f,c
  1221  000B14  5083               	movf	131,w,c	;volatile
  1222  000B16  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1223  000B18  0BEF               	andlw	-17
  1224  000B1A  180F               	xorwf	??_Lcd_Cmd^0,w,c
  1225  000B1C  6E83               	movwf	131,c	;volatile
  1226  000B1E                     
  1227                           ;flexlcd.h: 183: _delay(10);
  1228  000B1E  0E03               	movlw	3
  1229  000B20                     u627:
  1230  000B20  2EE8               	decfsz	wreg,f,c
  1231  000B22  D7FE               	bra	u627
  1232  000B24  F000               	nop	
  1233  000B26                     
  1234                           ;flexlcd.h: 184: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1235  000B26  8284               	bsf	132,1,c	;volatile
  1236  000B28  0E03               	movlw	3
  1237  000B2A                     u637:
  1238  000B2A  2EE8               	decfsz	wreg,f,c
  1239  000B2C  D7FE               	bra	u637
  1240  000B2E  F000               	nop	
  1241  000B30  9284               	bcf	132,1,c	;volatile
  1242  000B32                     
  1243                           ;flexlcd.h: 185: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1244  000B32  0E0F               	movlw	15
  1245  000B34  6E0F               	movwf	??_Lcd_Cmd^0,c
  1246  000B36  0E48               	movlw	72
  1247  000B38                     u647:
  1248  000B38  2EE8               	decfsz	wreg,f,c
  1249  000B3A  D7FE               	bra	u647
  1250  000B3C  2E0F               	decfsz	??_Lcd_Cmd^0,f,c
  1251  000B3E  D7FC               	bra	u647
  1252  000B40  0012               	return		;funcret
  1253  000B42                     __end_of_Lcd_Cmd:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _isr *****************
  1257 ;; Defined at:
  1258 ;;		line 71 in file "mainMotor.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         0       0       0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0
  1274 ;;      Temps:          6       0       0       0       0       0       0
  1275 ;;      Totals:         6       0       0       0       0       0       0
  1276 ;;Total ram usage:        6 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		i2_Lcd_Cmd
  1281 ;;		i2_Lcd_Out
  1282 ;; This function is called by:
  1283 ;;		Interrupt level 2
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	intcode
  1288  000008                     __pintcode:
  1289                           	callstack 0
  1290  000008                     _isr:
  1291                           	callstack 26
  1292                           
  1293                           ;incstack = 0
  1294  000008  821B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1295  00000A  ED1F  F003         	call	int_func,f	;refresh shadow registers
  1296                           
  1297                           	psect	intcode_body
  1298  00063E                     __pintcode_body:
  1299                           	callstack 26
  1300  00063E                     int_func:
  1301                           	callstack 26
  1302  00063E  0006               	pop		; remove dummy address from shadow register refresh
  1303  000640  CFF6 F00B          	movff	tblptrl,??_isr+2
  1304  000644  CFF7 F00C          	movff	tblptrh,??_isr+3
  1305  000648  CFF8 F00D          	movff	tblptru,??_isr+4
  1306  00064C  CFF5 F00E          	movff	tablat,??_isr+5
  1307  000650                     
  1308                           ;mainMotor.c: 72: if(INTCON3bits.INT1IF == 1)
  1309  000650  A0F0               	btfss	240,0,c	;volatile
  1310  000652  EF2D  F003         	goto	i2u35_41
  1311  000656  EF2F  F003         	goto	i2u35_40
  1312  00065A                     i2u35_41:
  1313  00065A  EF79  F003         	goto	i2l1281
  1314  00065E                     i2u35_40:
  1315  00065E                     
  1316                           ;mainMotor.c: 73: {;mainMotor.c: 74: INTCON3bits.INT1IF = 0;
  1317  00065E  90F0               	bcf	240,0,c	;volatile
  1318                           
  1319                           ;mainMotor.c: 75: if(PORTEbits.RE0 == 0){
  1320  000660  B084               	btfsc	132,0,c	;volatile
  1321  000662  EF35  F003         	goto	i2u36_41
  1322  000666  EF37  F003         	goto	i2u36_40
  1323  00066A                     i2u36_41:
  1324  00066A  EF5E  F003         	goto	i2l1275
  1325  00066E                     i2u36_40:
  1326  00066E                     
  1327                           ;mainMotor.c: 76: PORTEbits.RE0 = ~PORTEbits.RE0;
  1328  00066E  B084               	btfsc	132,0,c	;volatile
  1329  000670  EF3C  F003         	goto	i2u37_41
  1330  000674  EF3F  F003         	goto	i2u37_40
  1331  000678                     i2u37_41:
  1332  000678  0E01               	movlw	1
  1333  00067A  EF40  F003         	goto	i2u37_46
  1334  00067E                     i2u37_40:
  1335  00067E  0E00               	movlw	0
  1336  000680                     i2u37_46:
  1337  000680  0AFF               	xorlw	255
  1338  000682  6E09               	movwf	??_isr^0,c
  1339  000684  5084               	movf	132,w,c	;volatile
  1340  000686  1809               	xorwf	??_isr^0,w,c
  1341  000688  0BFE               	andlw	-2
  1342  00068A  1809               	xorwf	??_isr^0,w,c
  1343  00068C  6E84               	movwf	132,c	;volatile
  1344  00068E                     
  1345                           ;mainMotor.c: 77: Lcd_Out(2, 0, "Motor 2: ON ");
  1346  00068E  0E00               	movlw	0
  1347  000690  6E04               	movwf	i2Lcd_Out@x^0,c
  1348  000692  0E0E               	movlw	low STR_4
  1349  000694  6E05               	movwf	i2Lcd_Out@buffer^0,c
  1350  000696  0E06               	movlw	high STR_4
  1351  000698  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
  1352  00069A  0E02               	movlw	2
  1353  00069C  EC68  F007         	call	i2_Lcd_Out
  1354  0006A0                     i2l1273:
  1355                           
  1356                           ;mainMotor.c: 78: _delaywdt((unsigned long)((200)*(8000000/4000.0)));}
  1357  0006A0  0E02               	movlw	2
  1358  0006A2  6E0A               	movwf	(??_isr+1)^0,c
  1359  0006A4  0E86               	movlw	134
  1360  0006A6  6E09               	movwf	??_isr^0,c
  1361  0006A8  0EDB               	movlw	219
  1362  0006AA                     i2u65_47:
  1363  0006AA  0004               	clrwdt	
  1364  0006AC  2EE8               	decfsz	wreg,f,c
  1365  0006AE  D7FD               	bra	i2u65_47
  1366  0006B0  2E09               	decfsz	??_isr^0,f,c
  1367  0006B2  D7FB               	bra	i2u65_47
  1368  0006B4  2E0A               	decfsz	(??_isr+1)^0,f,c
  1369  0006B6  D7F9               	bra	i2u65_47
  1370  0006B8  EF79  F003         	goto	i2l1281
  1371  0006BC                     i2l1275:
  1372                           
  1373                           ;mainMotor.c: 79: else{;mainMotor.c: 80: PORTEbits.RE0 = ~PORTEbits.RE0;
  1374  0006BC  B084               	btfsc	132,0,c	;volatile
  1375  0006BE  EF63  F003         	goto	i2u38_41
  1376  0006C2  EF66  F003         	goto	i2u38_40
  1377  0006C6                     i2u38_41:
  1378  0006C6  0E01               	movlw	1
  1379  0006C8  EF67  F003         	goto	i2u38_46
  1380  0006CC                     i2u38_40:
  1381  0006CC  0E00               	movlw	0
  1382  0006CE                     i2u38_46:
  1383  0006CE  0AFF               	xorlw	255
  1384  0006D0  6E09               	movwf	??_isr^0,c
  1385  0006D2  5084               	movf	132,w,c	;volatile
  1386  0006D4  1809               	xorwf	??_isr^0,w,c
  1387  0006D6  0BFE               	andlw	-2
  1388  0006D8  1809               	xorwf	??_isr^0,w,c
  1389  0006DA  6E84               	movwf	132,c	;volatile
  1390  0006DC                     
  1391                           ;mainMotor.c: 81: Lcd_Out(2, 0, "Motor 2: OFF");
  1392  0006DC  0E00               	movlw	0
  1393  0006DE  6E04               	movwf	i2Lcd_Out@x^0,c
  1394  0006E0  0E28               	movlw	low STR_2
  1395  0006E2  6E05               	movwf	i2Lcd_Out@buffer^0,c
  1396  0006E4  0E06               	movlw	high STR_2
  1397  0006E6  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
  1398  0006E8  0E02               	movlw	2
  1399  0006EA  EC68  F007         	call	i2_Lcd_Out
  1400  0006EE  EF50  F003         	goto	i2l1273
  1401  0006F2                     i2l1281:
  1402                           
  1403                           ;mainMotor.c: 83: };mainMotor.c: 85: };mainMotor.c: 86: if (INTCONbits.INT0IF == 1)
  1404  0006F2  A2F2               	btfss	242,1,c	;volatile
  1405  0006F4  EF7E  F003         	goto	i2u39_41
  1406  0006F8  EF80  F003         	goto	i2u39_40
  1407  0006FC                     i2u39_41:
  1408  0006FC  EFCD  F003         	goto	i2l111
  1409  000700                     i2u39_40:
  1410  000700                     
  1411                           ;mainMotor.c: 87: {;mainMotor.c: 88: INTCONbits.INT0IF = 0;
  1412  000700  92F2               	bcf	242,1,c	;volatile
  1413                           
  1414                           ;mainMotor.c: 89: if(PORTCbits.RC0 == 0){
  1415  000702  B082               	btfsc	130,0,c	;volatile
  1416  000704  EF86  F003         	goto	i2u40_41
  1417  000708  EF88  F003         	goto	i2u40_40
  1418  00070C                     i2u40_41:
  1419  00070C  EFB2  F003         	goto	i2l1293
  1420  000710                     i2u40_40:
  1421  000710                     
  1422                           ;mainMotor.c: 90: PORTCbits.RC0 = ~PORTCbits.RC0;
  1423  000710  B082               	btfsc	130,0,c	;volatile
  1424  000712  EF8D  F003         	goto	i2u41_41
  1425  000716  EF90  F003         	goto	i2u41_40
  1426  00071A                     i2u41_41:
  1427  00071A  0E01               	movlw	1
  1428  00071C  EF91  F003         	goto	i2u41_46
  1429  000720                     i2u41_40:
  1430  000720  0E00               	movlw	0
  1431  000722                     i2u41_46:
  1432  000722  0AFF               	xorlw	255
  1433  000724  6E09               	movwf	??_isr^0,c
  1434  000726  5082               	movf	130,w,c	;volatile
  1435  000728  1809               	xorwf	??_isr^0,w,c
  1436  00072A  0BFE               	andlw	-2
  1437  00072C  1809               	xorwf	??_isr^0,w,c
  1438  00072E  6E82               	movwf	130,c	;volatile
  1439  000730                     
  1440                           ;mainMotor.c: 91: Lcd_Cmd(128);
  1441  000730  0E80               	movlw	128
  1442  000732  ECA1  F005         	call	i2_Lcd_Cmd
  1443  000736                     
  1444                           ;mainMotor.c: 92: Lcd_Out(1, 0, "Motor 1: ON ");
  1445  000736  0E00               	movlw	0
  1446  000738  6E04               	movwf	i2Lcd_Out@x^0,c
  1447  00073A  0E01               	movlw	low STR_6
  1448  00073C  6E05               	movwf	i2Lcd_Out@buffer^0,c
  1449  00073E  0E06               	movlw	high STR_6
  1450  000740  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
  1451  000742  0E01               	movlw	1
  1452  000744  EC68  F007         	call	i2_Lcd_Out
  1453  000748                     i2l1291:
  1454                           
  1455                           ;mainMotor.c: 93: _delaywdt((unsigned long)((200)*(8000000/4000.0)));}
  1456  000748  0E02               	movlw	2
  1457  00074A  6E0A               	movwf	(??_isr+1)^0,c
  1458  00074C  0E86               	movlw	134
  1459  00074E  6E09               	movwf	??_isr^0,c
  1460  000750  0EDB               	movlw	219
  1461  000752                     i2u66_47:
  1462  000752  0004               	clrwdt	
  1463  000754  2EE8               	decfsz	wreg,f,c
  1464  000756  D7FD               	bra	i2u66_47
  1465  000758  2E09               	decfsz	??_isr^0,f,c
  1466  00075A  D7FB               	bra	i2u66_47
  1467  00075C  2E0A               	decfsz	(??_isr+1)^0,f,c
  1468  00075E  D7F9               	bra	i2u66_47
  1469  000760  EFCD  F003         	goto	i2l111
  1470  000764                     i2l1293:
  1471                           
  1472                           ;mainMotor.c: 94: else{;mainMotor.c: 95: PORTCbits.RC0 = ~PORTCbits.RC0;
  1473  000764  B082               	btfsc	130,0,c	;volatile
  1474  000766  EFB7  F003         	goto	i2u42_41
  1475  00076A  EFBA  F003         	goto	i2u42_40
  1476  00076E                     i2u42_41:
  1477  00076E  0E01               	movlw	1
  1478  000770  EFBB  F003         	goto	i2u42_46
  1479  000774                     i2u42_40:
  1480  000774  0E00               	movlw	0
  1481  000776                     i2u42_46:
  1482  000776  0AFF               	xorlw	255
  1483  000778  6E09               	movwf	??_isr^0,c
  1484  00077A  5082               	movf	130,w,c	;volatile
  1485  00077C  1809               	xorwf	??_isr^0,w,c
  1486  00077E  0BFE               	andlw	-2
  1487  000780  1809               	xorwf	??_isr^0,w,c
  1488  000782  6E82               	movwf	130,c	;volatile
  1489  000784                     
  1490                           ;mainMotor.c: 96: Lcd_Out(1, 0, "Motor 1: OFF");
  1491  000784  0E00               	movlw	0
  1492  000786  6E04               	movwf	i2Lcd_Out@x^0,c
  1493  000788  0E1B               	movlw	low STR_1
  1494  00078A  6E05               	movwf	i2Lcd_Out@buffer^0,c
  1495  00078C  0E06               	movlw	high STR_1
  1496  00078E  6E06               	movwf	(i2Lcd_Out@buffer+1)^0,c
  1497  000790  0E01               	movlw	1
  1498  000792  EC68  F007         	call	i2_Lcd_Out
  1499  000796  EFA4  F003         	goto	i2l1291
  1500  00079A                     i2l111:
  1501  00079A  C00E  FFF5         	movff	??_isr+5,tablat
  1502  00079E  C00D  FFF8         	movff	??_isr+4,tblptru
  1503  0007A2  C00C  FFF7         	movff	??_isr+3,tblptrh
  1504  0007A6  C00B  FFF6         	movff	??_isr+2,tblptrl
  1505  0007AA  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1506  0007AC  0011               	retfie		f
  1507  0007AE                     __end_of_isr:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function i2_Lcd_Out *****************
  1511 ;; Defined at:
  1512 ;;		line 119 in file "flexlcd.h"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  y               1    wreg     unsigned char 
  1515 ;;  x               1    3[COMRAM] unsigned char 
  1516 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  1517 ;;		 -> STR_7(13), STR_6(13), STR_5(13), STR_4(13), 
  1518 ;;		 -> STR_3(7), STR_2(13), STR_1(13), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  y               1    6[COMRAM] unsigned char 
  1521 ;;  data            1    7[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1531 ;;      Params:         3       0       0       0       0       0       0
  1532 ;;      Locals:         2       0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0
  1534 ;;      Totals:         5       0       0       0       0       0       0
  1535 ;;Total ram usage:        5 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 1
  1538 ;; This function calls:
  1539 ;;		i2_Lcd_Chr_CP
  1540 ;;		i2_Lcd_Cmd
  1541 ;; This function is called by:
  1542 ;;		_isr
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text6
  1547  000ED0                     __ptext6:
  1548                           	callstack 0
  1549  000ED0                     i2_Lcd_Out:
  1550                           	callstack 26
  1551                           
  1552                           ;incstack = 0
  1553                           ;i2Lcd_Out@y stored from wreg
  1554  000ED0  6E07               	movwf	i2Lcd_Out@y^0,c
  1555  000ED2                     
  1556                           ;flexlcd.h: 121: unsigned char data;;flexlcd.h: 122: switch (y)
  1557  000ED2  EF7F  F007         	goto	i2l1221
  1558  000ED6                     i2l1211:
  1559  000ED6  5004               	movf	i2Lcd_Out@x^0,w,c
  1560  000ED8  0F80               	addlw	128
  1561  000EDA  6E08               	movwf	i2Lcd_Out@data^0,c
  1562  000EDC  EF92  F007         	goto	i2l1223
  1563  000EE0                     i2l1213:
  1564  000EE0  5004               	movf	i2Lcd_Out@x^0,w,c
  1565  000EE2  0FC0               	addlw	192
  1566  000EE4  6E08               	movwf	i2Lcd_Out@data^0,c
  1567  000EE6  EF92  F007         	goto	i2l1223
  1568  000EEA                     i2l1215:
  1569  000EEA  5004               	movf	i2Lcd_Out@x^0,w,c
  1570  000EEC  0F94               	addlw	148
  1571  000EEE  6E08               	movwf	i2Lcd_Out@data^0,c
  1572  000EF0  EF92  F007         	goto	i2l1223
  1573  000EF4                     i2l1217:
  1574  000EF4  5004               	movf	i2Lcd_Out@x^0,w,c
  1575  000EF6  0FD4               	addlw	212
  1576  000EF8  6E08               	movwf	i2Lcd_Out@data^0,c
  1577  000EFA  EF92  F007         	goto	i2l1223
  1578  000EFE                     i2l1221:
  1579  000EFE  5007               	movf	i2Lcd_Out@y^0,w,c
  1580                           
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 4, Range of values is 1 to 4
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte           13     7 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587  000F00  0A01               	xorlw	1	; case 1
  1588  000F02  B4D8               	btfsc	status,2,c
  1589  000F04  EF6B  F007         	goto	i2l1211
  1590  000F08  0A03               	xorlw	3	; case 2
  1591  000F0A  B4D8               	btfsc	status,2,c
  1592  000F0C  EF70  F007         	goto	i2l1213
  1593  000F10  0A01               	xorlw	1	; case 3
  1594  000F12  B4D8               	btfsc	status,2,c
  1595  000F14  EF75  F007         	goto	i2l1215
  1596  000F18  0A07               	xorlw	7	; case 4
  1597  000F1A  B4D8               	btfsc	status,2,c
  1598  000F1C  EF7A  F007         	goto	i2l1217
  1599  000F20  EF92  F007         	goto	i2l1223
  1600  000F24                     i2l1223:
  1601                           
  1602                           ;flexlcd.h: 130: Lcd_Cmd(data);
  1603  000F24  5008               	movf	i2Lcd_Out@data^0,w,c
  1604  000F26  ECA1  F005         	call	i2_Lcd_Cmd
  1605                           
  1606                           ;flexlcd.h: 131: while(*buffer)
  1607  000F2A  EFA1  F007         	goto	i2l1229
  1608  000F2E                     i2l1225:
  1609                           
  1610                           ;flexlcd.h: 132: {;flexlcd.h: 133: Lcd_Chr_CP(*buffer);
  1611  000F2E  C005  FFF6         	movff	i2Lcd_Out@buffer,tblptrl
  1612  000F32  C006  FFF7         	movff	i2Lcd_Out@buffer+1,tblptrh
  1613  000F36                     	if	0	;tblptru may be non-zero
  1614  000F36                     	endif
  1615  000F36                     	if	0	;tblptru may be non-zero
  1616  000F36                     	endif
  1617  000F36  0008               	tblrd		*
  1618  000F38  50F5               	movf	tablat,w,c
  1619  000F3A  EC71  F004         	call	i2_Lcd_Chr_CP
  1620  000F3E                     
  1621                           ;flexlcd.h: 134: buffer++;
  1622  000F3E  4A05               	infsnz	i2Lcd_Out@buffer^0,f,c
  1623  000F40  2A06               	incf	(i2Lcd_Out@buffer+1)^0,f,c
  1624  000F42                     i2l1229:
  1625  000F42  C005  FFF6         	movff	i2Lcd_Out@buffer,tblptrl
  1626  000F46  C006  FFF7         	movff	i2Lcd_Out@buffer+1,tblptrh
  1627  000F4A                     	if	0	;tblptru may be non-zero
  1628  000F4A                     	endif
  1629  000F4A                     	if	0	;tblptru may be non-zero
  1630  000F4A                     	endif
  1631  000F4A  0008               	tblrd		*
  1632  000F4C  50F5               	movf	tablat,w,c
  1633  000F4E  0900               	iorlw	0
  1634  000F50  A4D8               	btfss	status,2,c
  1635  000F52  EFAD  F007         	goto	i2u33_41
  1636  000F56  EFAF  F007         	goto	i2u33_40
  1637  000F5A                     i2u33_41:
  1638  000F5A  EF97  F007         	goto	i2l1225
  1639  000F5E                     i2u33_40:
  1640  000F5E  0012               	return		;funcret
  1641  000F60                     __end_ofi2_Lcd_Out:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function i2_Lcd_Cmd *****************
  1645 ;; Defined at:
  1646 ;;		line 175 in file "flexlcd.h"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  data            1    wreg     unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  data            1    2[COMRAM] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         0       0       0       0       0       0       0
  1661 ;;      Locals:         1       0       0       0       0       0       0
  1662 ;;      Temps:          2       0       0       0       0       0       0
  1663 ;;      Totals:         3       0       0       0       0       0       0
  1664 ;;Total ram usage:        3 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_isr
  1670 ;;		i2_Lcd_Out
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text7
  1675  000B42                     __ptext7:
  1676                           	callstack 0
  1677  000B42                     i2_Lcd_Cmd:
  1678                           	callstack 26
  1679                           
  1680                           ;incstack = 0
  1681                           ;i2Lcd_Cmd@data stored from wreg
  1682  000B42  6E03               	movwf	i2Lcd_Cmd@data^0,c
  1683  000B44                     
  1684                           ;flexlcd.h: 176: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1685  000B44  9284               	bcf	132,1,c	;volatile
  1686  000B46  9484               	bcf	132,2,c	;volatile
  1687  000B48                     
  1688                           ;flexlcd.h: 177: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1689  000B48  6A01               	clrf	??i2_Lcd_Cmd^0,c
  1690  000B4A  AE03               	btfss	i2Lcd_Cmd@data^0,7,c
  1691  000B4C  D001               	bra	i2u29_45
  1692  000B4E  2A01               	incf	??i2_Lcd_Cmd^0,f,c
  1693  000B50                     i2u29_45:
  1694  000B50  0E01               	movlw	1
  1695  000B52  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1696  000B54  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1697  000B56  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1698  000B58  5083               	movf	131,w,c	;volatile
  1699  000B5A  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1700  000B5C  0B7F               	andlw	-129
  1701  000B5E  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1702  000B60  6E83               	movwf	131,c	;volatile
  1703  000B62  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1704  000B66  0E06               	movlw	6
  1705  000B68  6E02               	movwf	(??i2_Lcd_Cmd+1)^0,c
  1706  000B6A                     i2u30_45:
  1707  000B6A  90D8               	bcf	status,0,c
  1708  000B6C  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1709  000B6E  2E02               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
  1710  000B70  EFB5  F005         	goto	i2u30_45
  1711  000B74  0E01               	movlw	1
  1712  000B76  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1713  000B78  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1714  000B7A  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
  1715  000B7C  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
  1716  000B7E  5083               	movf	131,w,c	;volatile
  1717  000B80  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1718  000B82  0BBF               	andlw	-65
  1719  000B84  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1720  000B86  6E83               	movwf	131,c	;volatile
  1721                           
  1722                           ;flexlcd.h: 178: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1723  000B88  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1724  000B8C  0E05               	movlw	5
  1725  000B8E  6E02               	movwf	(??i2_Lcd_Cmd+1)^0,c
  1726  000B90                     i2u31_45:
  1727  000B90  90D8               	bcf	status,0,c
  1728  000B92  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1729  000B94  2E02               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
  1730  000B96  EFC8  F005         	goto	i2u31_45
  1731  000B9A  0E01               	movlw	1
  1732  000B9C  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1733  000B9E  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1734  000BA0  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
  1735  000BA2  5083               	movf	131,w,c	;volatile
  1736  000BA4  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1737  000BA6  0BDF               	andlw	-33
  1738  000BA8  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1739  000BAA  6E83               	movwf	131,c	;volatile
  1740  000BAC  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1741  000BB0  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1742  000BB2  0E0F               	movlw	15
  1743  000BB4  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1744  000BB6  0E01               	movlw	1
  1745  000BB8  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1746  000BBA  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1747  000BBC  5083               	movf	131,w,c	;volatile
  1748  000BBE  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1749  000BC0  0BEF               	andlw	-17
  1750  000BC2  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1751  000BC4  6E83               	movwf	131,c	;volatile
  1752  000BC6                     
  1753                           ;flexlcd.h: 179: _delay(10);
  1754  000BC6  0E03               	movlw	3
  1755  000BC8                     i2u67_47:
  1756  000BC8  2EE8               	decfsz	wreg,f,c
  1757  000BCA  D7FE               	bra	i2u67_47
  1758  000BCC  F000               	nop	
  1759  000BCE                     
  1760                           ;flexlcd.h: 180: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1761  000BCE  8284               	bsf	132,1,c	;volatile
  1762  000BD0  0E03               	movlw	3
  1763  000BD2                     i2u68_47:
  1764  000BD2  2EE8               	decfsz	wreg,f,c
  1765  000BD4  D7FE               	bra	i2u68_47
  1766  000BD6  F000               	nop	
  1767  000BD8  9284               	bcf	132,1,c	;volatile
  1768                           
  1769                           ;flexlcd.h: 181: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1770  000BDA  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1771  000BDE  90D8               	bcf	status,0,c
  1772  000BE0  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1773  000BE2  90D8               	bcf	status,0,c
  1774  000BE4  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1775  000BE6  90D8               	bcf	status,0,c
  1776  000BE8  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1777  000BEA  0E01               	movlw	1
  1778  000BEC  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1779  000BEE  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1780  000BF0  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1781  000BF2  5083               	movf	131,w,c	;volatile
  1782  000BF4  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1783  000BF6  0B7F               	andlw	-129
  1784  000BF8  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1785  000BFA  6E83               	movwf	131,c	;volatile
  1786  000BFC  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1787  000C00  90D8               	bcf	status,0,c
  1788  000C02  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1789  000C04  90D8               	bcf	status,0,c
  1790  000C06  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1791  000C08  0E01               	movlw	1
  1792  000C0A  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1793  000C0C  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1794  000C0E  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
  1795  000C10  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
  1796  000C12  5083               	movf	131,w,c	;volatile
  1797  000C14  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1798  000C16  0BBF               	andlw	-65
  1799  000C18  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1800  000C1A  6E83               	movwf	131,c	;volatile
  1801                           
  1802                           ;flexlcd.h: 182: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1803  000C1C  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1804  000C20  90D8               	bcf	status,0,c
  1805  000C22  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
  1806  000C24  0E01               	movlw	1
  1807  000C26  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1808  000C28  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1809  000C2A  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
  1810  000C2C  5083               	movf	131,w,c	;volatile
  1811  000C2E  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1812  000C30  0BDF               	andlw	-33
  1813  000C32  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1814  000C34  6E83               	movwf	131,c	;volatile
  1815  000C36  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  1816  000C3A  0E01               	movlw	1
  1817  000C3C  1601               	andwf	??i2_Lcd_Cmd^0,f,c
  1818  000C3E  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
  1819  000C40  5083               	movf	131,w,c	;volatile
  1820  000C42  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1821  000C44  0BEF               	andlw	-17
  1822  000C46  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
  1823  000C48  6E83               	movwf	131,c	;volatile
  1824  000C4A                     
  1825                           ;flexlcd.h: 183: _delay(10);
  1826  000C4A  0E03               	movlw	3
  1827  000C4C                     i2u69_47:
  1828  000C4C  2EE8               	decfsz	wreg,f,c
  1829  000C4E  D7FE               	bra	i2u69_47
  1830  000C50  F000               	nop	
  1831  000C52                     
  1832                           ;flexlcd.h: 184: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1833  000C52  8284               	bsf	132,1,c	;volatile
  1834  000C54  0E03               	movlw	3
  1835  000C56                     i2u70_47:
  1836  000C56  2EE8               	decfsz	wreg,f,c
  1837  000C58  D7FE               	bra	i2u70_47
  1838  000C5A  F000               	nop	
  1839  000C5C  9284               	bcf	132,1,c	;volatile
  1840  000C5E                     
  1841                           ;flexlcd.h: 185: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1842  000C5E  0E0F               	movlw	15
  1843  000C60  6E01               	movwf	??i2_Lcd_Cmd^0,c
  1844  000C62  0E48               	movlw	72
  1845  000C64                     i2u71_47:
  1846  000C64  2EE8               	decfsz	wreg,f,c
  1847  000C66  D7FE               	bra	i2u71_47
  1848  000C68  2E01               	decfsz	??i2_Lcd_Cmd^0,f,c
  1849  000C6A  D7FC               	bra	i2u71_47
  1850  000C6C  0012               	return		;funcret
  1851  000C6E                     __end_ofi2_Lcd_Cmd:
  1852                           	callstack 0
  1853                           
  1854 ;; *************** function i2_Lcd_Chr_CP *****************
  1855 ;; Defined at:
  1856 ;;		line 161 in file "flexlcd.h"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  data            1    wreg     unsigned char 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  data            1    2[COMRAM] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1870 ;;      Params:         0       0       0       0       0       0       0
  1871 ;;      Locals:         1       0       0       0       0       0       0
  1872 ;;      Temps:          2       0       0       0       0       0       0
  1873 ;;      Totals:         3       0       0       0       0       0       0
  1874 ;;Total ram usage:        3 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		i2_Lcd_Out
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text8
  1884  0008E2                     __ptext8:
  1885                           	callstack 0
  1886  0008E2                     i2_Lcd_Chr_CP:
  1887                           	callstack 26
  1888                           
  1889                           ;incstack = 0
  1890                           ;i2Lcd_Chr_CP@data stored from wreg
  1891  0008E2  6E03               	movwf	i2Lcd_Chr_CP@data^0,c
  1892  0008E4                     
  1893                           ;flexlcd.h: 162: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  1894  0008E4  9284               	bcf	132,1,c	;volatile
  1895  0008E6  8484               	bsf	132,2,c	;volatile
  1896  0008E8                     
  1897                           ;flexlcd.h: 163: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1898  0008E8  6A01               	clrf	??i2_Lcd_Chr_CP^0,c
  1899  0008EA  AE03               	btfss	i2Lcd_Chr_CP@data^0,7,c
  1900  0008EC  D001               	bra	i2u26_45
  1901  0008EE  2A01               	incf	??i2_Lcd_Chr_CP^0,f,c
  1902  0008F0                     i2u26_45:
  1903  0008F0  0E01               	movlw	1
  1904  0008F2  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  1905  0008F4  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1906  0008F6  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1907  0008F8  5083               	movf	131,w,c	;volatile
  1908  0008FA  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1909  0008FC  0B7F               	andlw	-129
  1910  0008FE  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1911  000900  6E83               	movwf	131,c	;volatile
  1912  000902  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  1913  000906  0E06               	movlw	6
  1914  000908  6E02               	movwf	(??i2_Lcd_Chr_CP+1)^0,c
  1915  00090A                     i2u27_45:
  1916  00090A  90D8               	bcf	status,0,c
  1917  00090C  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1918  00090E  2E02               	decfsz	(??i2_Lcd_Chr_CP+1)^0,f,c
  1919  000910  EF85  F004         	goto	i2u27_45
  1920  000914  0E01               	movlw	1
  1921  000916  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  1922  000918  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  1923  00091A  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  1924  00091C  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  1925  00091E  5083               	movf	131,w,c	;volatile
  1926  000920  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1927  000922  0BBF               	andlw	-65
  1928  000924  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1929  000926  6E83               	movwf	131,c	;volatile
  1930                           
  1931                           ;flexlcd.h: 164: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1932  000928  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  1933  00092C  0E05               	movlw	5
  1934  00092E  6E02               	movwf	(??i2_Lcd_Chr_CP+1)^0,c
  1935  000930                     i2u28_45:
  1936  000930  90D8               	bcf	status,0,c
  1937  000932  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1938  000934  2E02               	decfsz	(??i2_Lcd_Chr_CP+1)^0,f,c
  1939  000936  EF98  F004         	goto	i2u28_45
  1940  00093A  0E01               	movlw	1
  1941  00093C  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  1942  00093E  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  1943  000940  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  1944  000942  5083               	movf	131,w,c	;volatile
  1945  000944  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1946  000946  0BDF               	andlw	-33
  1947  000948  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1948  00094A  6E83               	movwf	131,c	;volatile
  1949  00094C  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  1950  000950  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  1951  000952  0E0F               	movlw	15
  1952  000954  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  1953  000956  0E01               	movlw	1
  1954  000958  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  1955  00095A  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  1956  00095C  5083               	movf	131,w,c	;volatile
  1957  00095E  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1958  000960  0BEF               	andlw	-17
  1959  000962  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1960  000964  6E83               	movwf	131,c	;volatile
  1961  000966                     
  1962                           ;flexlcd.h: 165: _delay(10);
  1963  000966  0E03               	movlw	3
  1964  000968                     i2u72_47:
  1965  000968  2EE8               	decfsz	wreg,f,c
  1966  00096A  D7FE               	bra	i2u72_47
  1967  00096C  F000               	nop	
  1968  00096E                     
  1969                           ;flexlcd.h: 166: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1970  00096E  8284               	bsf	132,1,c	;volatile
  1971  000970  0E03               	movlw	3
  1972  000972                     i2u73_47:
  1973  000972  2EE8               	decfsz	wreg,f,c
  1974  000974  D7FE               	bra	i2u73_47
  1975  000976  F000               	nop	
  1976  000978  9284               	bcf	132,1,c	;volatile
  1977                           
  1978                           ;flexlcd.h: 167: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1979  00097A  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  1980  00097E  90D8               	bcf	status,0,c
  1981  000980  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1982  000982  90D8               	bcf	status,0,c
  1983  000984  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1984  000986  90D8               	bcf	status,0,c
  1985  000988  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1986  00098A  0E01               	movlw	1
  1987  00098C  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  1988  00098E  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1989  000990  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1990  000992  5083               	movf	131,w,c	;volatile
  1991  000994  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1992  000996  0B7F               	andlw	-129
  1993  000998  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  1994  00099A  6E83               	movwf	131,c	;volatile
  1995  00099C  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  1996  0009A0  90D8               	bcf	status,0,c
  1997  0009A2  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  1998  0009A4  90D8               	bcf	status,0,c
  1999  0009A6  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  2000  0009A8  0E01               	movlw	1
  2001  0009AA  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2002  0009AC  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  2003  0009AE  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  2004  0009B0  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  2005  0009B2  5083               	movf	131,w,c	;volatile
  2006  0009B4  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2007  0009B6  0BBF               	andlw	-65
  2008  0009B8  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2009  0009BA  6E83               	movwf	131,c	;volatile
  2010                           
  2011                           ;flexlcd.h: 168: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  2012  0009BC  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  2013  0009C0  90D8               	bcf	status,0,c
  2014  0009C2  3201               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  2015  0009C4  0E01               	movlw	1
  2016  0009C6  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2017  0009C8  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  2018  0009CA  4601               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  2019  0009CC  5083               	movf	131,w,c	;volatile
  2020  0009CE  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2021  0009D0  0BDF               	andlw	-33
  2022  0009D2  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2023  0009D4  6E83               	movwf	131,c	;volatile
  2024  0009D6  C003  F001         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  2025  0009DA  0E01               	movlw	1
  2026  0009DC  1601               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2027  0009DE  3A01               	swapf	??i2_Lcd_Chr_CP^0,f,c
  2028  0009E0  5083               	movf	131,w,c	;volatile
  2029  0009E2  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2030  0009E4  0BEF               	andlw	-17
  2031  0009E6  1801               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2032  0009E8  6E83               	movwf	131,c	;volatile
  2033  0009EA                     
  2034                           ;flexlcd.h: 169: _delay(10);
  2035  0009EA  0E03               	movlw	3
  2036  0009EC                     i2u74_47:
  2037  0009EC  2EE8               	decfsz	wreg,f,c
  2038  0009EE  D7FE               	bra	i2u74_47
  2039  0009F0  F000               	nop	
  2040  0009F2                     
  2041                           ;flexlcd.h: 170: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2042  0009F2  8284               	bsf	132,1,c	;volatile
  2043  0009F4  0E03               	movlw	3
  2044  0009F6                     i2u75_47:
  2045  0009F6  2EE8               	decfsz	wreg,f,c
  2046  0009F8  D7FE               	bra	i2u75_47
  2047  0009FA  F000               	nop	
  2048  0009FC  9284               	bcf	132,1,c	;volatile
  2049  0009FE                     
  2050                           ;flexlcd.h: 171: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  2051  0009FE  0E03               	movlw	3
  2052  000A00                     i2u76_47:
  2053  000A00  2EE8               	decfsz	wreg,f,c
  2054  000A02  D7FE               	bra	i2u76_47
  2055  000A04  F000               	nop	
  2056  000A06  0E0F               	movlw	15
  2057  000A08  6E01               	movwf	??i2_Lcd_Chr_CP^0,c
  2058  000A0A  0E48               	movlw	72
  2059  000A0C                     i2u77_47:
  2060  000A0C  2EE8               	decfsz	wreg,f,c
  2061  000A0E  D7FE               	bra	i2u77_47
  2062  000A10  2E01               	decfsz	??i2_Lcd_Chr_CP^0,f,c
  2063  000A12  D7FC               	bra	i2u77_47
  2064  000A14  0012               	return		;funcret
  2065  000A16                     __end_ofi2_Lcd_Chr_CP:
  2066                           	callstack 0
  2067                           
  2068                           	psect	rparam
  2069  0000                     
  2070                           	psect	temp
  2071  00001B                     btemp:
  2072                           	callstack 0
  2073  00001B                     	ds	1
  2074  0000                     int$flags	set	btemp
  2075  0000                     wtemp8	set	btemp+1
  2076  0000                     ttemp5	set	btemp+1
  2077  0000                     ttemp6	set	btemp+4
  2078  0000                     ttemp7	set	btemp+8
  2079                           
  2080                           	psect	idloc
  2081                           
  2082                           ;Config register IDLOC0 @ 0x200000
  2083                           ;	unspecified, using default values
  2084  200000                     	org	2097152
  2085  200000  FF                 	db	255
  2086                           
  2087                           ;Config register IDLOC1 @ 0x200001
  2088                           ;	unspecified, using default values
  2089  200001                     	org	2097153
  2090  200001  FF                 	db	255
  2091                           
  2092                           ;Config register IDLOC2 @ 0x200002
  2093                           ;	unspecified, using default values
  2094  200002                     	org	2097154
  2095  200002  FF                 	db	255
  2096                           
  2097                           ;Config register IDLOC3 @ 0x200003
  2098                           ;	unspecified, using default values
  2099  200003                     	org	2097155
  2100  200003  FF                 	db	255
  2101                           
  2102                           ;Config register IDLOC4 @ 0x200004
  2103                           ;	unspecified, using default values
  2104  200004                     	org	2097156
  2105  200004  FF                 	db	255
  2106                           
  2107                           ;Config register IDLOC5 @ 0x200005
  2108                           ;	unspecified, using default values
  2109  200005                     	org	2097157
  2110  200005  FF                 	db	255
  2111                           
  2112                           ;Config register IDLOC6 @ 0x200006
  2113                           ;	unspecified, using default values
  2114  200006                     	org	2097158
  2115  200006  FF                 	db	255
  2116                           
  2117                           ;Config register IDLOC7 @ 0x200007
  2118                           ;	unspecified, using default values
  2119  200007                     	org	2097159
  2120  200007  FF                 	db	255
  2121                           
  2122                           	psect	config
  2123                           
  2124                           ; Padding undefined space
  2125  300000                     	org	3145728
  2126  300000  FF                 	db	255
  2127                           
  2128                           ;Config register CONFIG1H @ 0x300001
  2129                           ;	Oscillator Selection bits
  2130                           ;	OSC = HS, HS oscillator
  2131                           ;	Fail-Safe Clock Monitor Enable bit
  2132                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2133                           ;	Internal/External Oscillator Switchover bit
  2134                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2135  300001                     	org	3145729
  2136  300001  02                 	db	2
  2137                           
  2138                           ;Config register CONFIG2L @ 0x300002
  2139                           ;	Power-up Timer Enable bit
  2140                           ;	PWRT = OFF, PWRT disabled
  2141                           ;	Brown-out Reset Enable bits
  2142                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2143                           ;	Brown Out Reset Voltage bits
  2144                           ;	BORV = 3, Minimum setting
  2145  300002                     	org	3145730
  2146  300002  1F                 	db	31
  2147                           
  2148                           ;Config register CONFIG2H @ 0x300003
  2149                           ;	Watchdog Timer Enable bit
  2150                           ;	WDT = ON, WDT enabled
  2151                           ;	Watchdog Timer Postscale Select bits
  2152                           ;	WDTPS = 32768, 1:32768
  2153  300003                     	org	3145731
  2154  300003  1F                 	db	31
  2155                           
  2156                           ; Padding undefined space
  2157  300004                     	org	3145732
  2158  300004  FF                 	db	255
  2159                           
  2160                           ;Config register CONFIG3H @ 0x300005
  2161                           ;	CCP2 MUX bit
  2162                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2163                           ;	PORTB A/D Enable bit
  2164                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2165                           ;	Low-Power Timer1 Oscillator Enable bit
  2166                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2167                           ;	MCLR Pin Enable bit
  2168                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  2169  300005                     	org	3145733
  2170  300005  01                 	db	1
  2171                           
  2172                           ;Config register CONFIG4L @ 0x300006
  2173                           ;	Stack Full/Underflow Reset Enable bit
  2174                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2175                           ;	Single-Supply ICSP Enable bit
  2176                           ;	LVP = ON, Single-Supply ICSP enabled
  2177                           ;	Extended Instruction Set Enable bit
  2178                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2179                           ;	Background Debugger Enable bit
  2180                           ;	DEBUG = 0x1, unprogrammed default
  2181  300006                     	org	3145734
  2182  300006  85                 	db	133
  2183                           
  2184                           ; Padding undefined space
  2185  300007                     	org	3145735
  2186  300007  FF                 	db	255
  2187                           
  2188                           ;Config register CONFIG5L @ 0x300008
  2189                           ;	Code Protection bit
  2190                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2191                           ;	Code Protection bit
  2192                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2193                           ;	Code Protection bit
  2194                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2195                           ;	Code Protection bit
  2196                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2197  300008                     	org	3145736
  2198  300008  0F                 	db	15
  2199                           
  2200                           ;Config register CONFIG5H @ 0x300009
  2201                           ;	Boot Block Code Protection bit
  2202                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2203                           ;	Data EEPROM Code Protection bit
  2204                           ;	CPD = OFF, Data EEPROM not code-protected
  2205  300009                     	org	3145737
  2206  300009  C0                 	db	192
  2207                           
  2208                           ;Config register CONFIG6L @ 0x30000A
  2209                           ;	Write Protection bit
  2210                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2211                           ;	Write Protection bit
  2212                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2213                           ;	Write Protection bit
  2214                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2215                           ;	Write Protection bit
  2216                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2217  30000A                     	org	3145738
  2218  30000A  0F                 	db	15
  2219                           
  2220                           ;Config register CONFIG6H @ 0x30000B
  2221                           ;	Configuration Register Write Protection bit
  2222                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2223                           ;	Boot Block Write Protection bit
  2224                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2225                           ;	Data EEPROM Write Protection bit
  2226                           ;	WRTD = OFF, Data EEPROM not write-protected
  2227  30000B                     	org	3145739
  2228  30000B  E0                 	db	224
  2229                           
  2230                           ;Config register CONFIG7L @ 0x30000C
  2231                           ;	Table Read Protection bit
  2232                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2233                           ;	Table Read Protection bit
  2234                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2235                           ;	Table Read Protection bit
  2236                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2237                           ;	Table Read Protection bit
  2238                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2239  30000C                     	org	3145740
  2240  30000C  0F                 	db	15
  2241                           
  2242                           ;Config register CONFIG7H @ 0x30000D
  2243                           ;	Boot Block Table Read Protection bit
  2244                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2245  30000D                     	org	3145741
  2246  30000D  40                 	db	64
  2247                           tosu	equ	0xFFF
  2248                           tosh	equ	0xFFE
  2249                           tosl	equ	0xFFD
  2250                           stkptr	equ	0xFFC
  2251                           pclatu	equ	0xFFB
  2252                           pclath	equ	0xFFA
  2253                           pcl	equ	0xFF9
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           indf0	equ	0xFEF
  2261                           postinc0	equ	0xFEE
  2262                           postdec0	equ	0xFED
  2263                           preinc0	equ	0xFEC
  2264                           plusw0	equ	0xFEB
  2265                           fsr0h	equ	0xFEA
  2266                           fsr0l	equ	0xFE9
  2267                           wreg	equ	0xFE8
  2268                           indf1	equ	0xFE7
  2269                           postinc1	equ	0xFE6
  2270                           postdec1	equ	0xFE5
  2271                           preinc1	equ	0xFE4
  2272                           plusw1	equ	0xFE3
  2273                           fsr1h	equ	0xFE2
  2274                           fsr1l	equ	0xFE1
  2275                           bsr	equ	0xFE0
  2276                           indf2	equ	0xFDF
  2277                           postinc2	equ	0xFDE
  2278                           postdec2	equ	0xFDD
  2279                           preinc2	equ	0xFDC
  2280                           plusw2	equ	0xFDB
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26      26
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[13]), STR_5(CODE[13]), STR_4(CODE[13]), 
		 -> STR_3(CODE[7]), STR_2(CODE[13]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in COMRAM

    _isr->i2_Lcd_Out
    i2_Lcd_Out->i2_Lcd_Chr_CP
    i2_Lcd_Out->i2_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1631
                                             22 COMRAM     4     4      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3    1277
                                             17 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                             17 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  6     6      0     917
                                              8 COMRAM     6     6      0
                          i2_Lcd_Cmd
                          i2_Lcd_Out
 ---------------------------------------------------------------------------------
 (4) i2_Lcd_Out                                            5     2      3     741
                                              3 COMRAM     5     2      3
                       i2_Lcd_Chr_CP
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) i2_Lcd_Cmd                                            3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) i2_Lcd_Chr_CP                                         3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd

 _isr (ROOT)
   i2_Lcd_Cmd
   i2_Lcd_Out
     i2_Lcd_Chr_CP
     i2_Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E     1A      1A       1       20.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhhl        2D      0       0      17        0.0%
BITBIGSFRhl         2A      0       0      18        0.0%
BITBIGSFRlhlh        5      0       0      19        0.0%
BITBIGSFRlhll        5      0       0      20        0.0%
BITBIGSFRlll         1      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jan 22 20:52:09 2023

                     l72 0ECE                       l57 0CDE                       l58 0D2A  
                     l91 0B40                       l59 0D7C                       l88 08E0  
                     l97 0E36                       u15 0A24                       u25 0A3E  
                     u35 0A64                       u45 07BC                       u55 07D6  
                     u65 07FC                      l901 08CA                      l903 08D2  
                    l861 0A1C                      l871 0B1E                      l863 0A9A  
                    l951 0C6E                      l873 0B26                      l865 0AA2  
                    l961 0CF6                      l953 0C86                      l881 07B0  
                    l875 0B28                      l867 0AA4                      l859 0A18  
                    l971 0D06                      l963 0CFE                      l955 0CDA  
                    l891 0844                      l883 07B4                      l877 0B30  
                    l869 0AAC                      l981 0D4C                      l973 0D08  
                    l965 0D00                      l893 08B6                      l885 0832  
                    l879 0B32                      l991 0D64                      l983 0D4E  
                    l975 0D18                      l967 0D02                      l895 08BE  
                    l887 083A                      l993 0D64                      l985 0D50  
                    l977 0D42                      l969 0D04                      l897 08C0  
                    l889 083C                      l995 0D6A                      l987 0D52  
                    l979 0D4A                      l899 08C8                      l997 0D6A  
                    l989 0D54                      l999 0D70                      u130 0D2A  
                    u131 0D26                      u320 0ECE                      u321 0ECA  
                    u340 0E06                      u341 0E02                      u507 0C8C  
                    u517 0C9A                      u437 0E28                      u607 0A9C  
                    u527 0CA8                      u447 0834                      u617 0AA6  
                    u537 0CB6                      u457 083E                      u627 0B20  
                    u547 0CC4                      u467 08B8                      u637 0B2A  
                    u557 0CD2                      u477 08C2                      u647 0B38  
                    u567 0CF8                      u487 08CC                      u577 0D10  
                    u497 08D8                      u587 0D44                      u597 0D5C  
                    _isr 0008                      wreg 000FE8                     l1001 0D70  
                   l1003 0D76                     l1005 0D76                     l1201 0E94  
                   l1203 0E9E                     l1205 0EAE                     l1207 0EB2  
                   l1231 0D7E                     l1241 0D9A                     l1233 0D86  
                   l1251 0DD2                     l1243 0D9C                     l1235 0D88  
                   l1261 0E0C                     l1253 0DE4                     l1245 0D9E  
                   l1237 0D96                     l1191 0E50                     l1263 0E1E  
                   l1255 0DF6                     l1247 0DC8                     l1239 0D98  
                   l1193 0E5A                     l1257 0DF8                     l1249 0DCC  
                   l1195 0E64                     l1187 0E42                     l1259 0E06  
                   l1189 0E46                     l1199 0E6E                     ?_isr 0001  
                   STR_1 061B                     STR_2 0628                     STR_3 0635  
                   STR_4 060E                     STR_5 0628                     STR_6 0601  
                   STR_7 061B                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     i2l72 0F5E  
                   i2l91 0C6C                     i2l88 0A14                     _main 0D7E  
                   btemp 001B                     start 000E          __end_of_Lcd_Cmd 0B42  
        __end_of_Lcd_Out 0ED0             ___param_bank 000000               _Lcd_Chr_CP 07AE  
                  ??_isr 0009                    ?_main 0001                    i2l111 079A  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    main@l 0019  
                  tablat 000FF5                    ttemp5 001C                    ttemp6 001F  
                  ttemp7 0023                    status 000FD8                    wtemp8 001C  
       __end_of_Lcd_Init 0D7E          __initialization 0F60             __end_of_main 0E40  
                 ??_main 0017            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   i2l1211 0ED6                   i2l1141 08E4  
                 i2l1213 0EE0                   i2l1221 0EFE                   i2l1151 0978  
                 i2l1143 08E8                   i2l1215 0EEA                   i2l1223 0F24  
                 i2l1161 09FE                   i2l1153 09EA                   i2l1145 0966  
                 i2l1225 0F2E                   i2l1217 0EF4                   i2l1209 0ED2  
                 i2l1163 0A06                   i2l1155 09F2                   i2l1147 096E  
                 i2l1171 0BCE                   i2l1227 0F3E                   i2l1157 09F4  
                 i2l1149 0970                   i2l1181 0C54                   i2l1173 0BD0  
                 i2l1165 0B44                   i2l1229 0F42                   i2l1159 09FC  
                 i2l1183 0C5C                   i2l1175 0BD8                   i2l1167 0B48  
                 i2l1271 068E                   i2l1185 0C5E                   i2l1177 0C4A  
                 i2l1169 0BC6                   i2l1273 06A0                   i2l1281 06F2  
                 i2l1265 0650                   i2l1179 0C52                   i2l1291 0748  
                 i2l1283 0700                   i2l1275 06BC                   i2l1267 065E  
                 i2l1285 0710                   i2l1293 0764                   i2l1277 06DC  
                 i2l1269 066E                   i2l1295 0784                   i2l1287 0730  
                 i2l1289 0736                ??_Lcd_Cmd 000F                ??_Lcd_Out 0015  
            ?_Lcd_Chr_CP 0001        __end_ofi2_Lcd_Cmd 0C6E        __end_ofi2_Lcd_Out 0F60  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0F60            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001                  i2u30_45 0B6A                  i2u31_45 0B90  
                i2u40_40 0710                  i2u40_41 070C                  i2u33_40 0F5E  
                i2u41_40 0720                  i2u33_41 0F5A                  i2u41_41 071A  
                i2u41_46 0722                  i2u42_40 0774                  i2u42_41 076E  
                i2u26_45 08F0                  i2u42_46 0776                  i2u35_40 065E  
                i2u35_41 065A                  i2u27_45 090A                  i2u36_40 066E  
                i2u36_41 066A                  i2u28_45 0930                  i2u37_40 067E  
                i2u37_41 0678                  i2u29_45 0B50                  i2u37_46 0680  
                i2u38_40 06CC                  i2u38_41 06C6                  i2u38_46 06CE  
                i2u70_47 0C56                  i2u39_40 0700                  i2u39_41 06FC  
                i2u71_47 0C64                  i2u72_47 0968                  i2u73_47 0972  
                i2u65_47 06AA                  i2u74_47 09EC                  i2u66_47 0752  
                i2u75_47 09F6                  i2u67_47 0BC8                  i2u76_47 0A00  
                i2u68_47 0BD2               ??_Lcd_Init 0012                  i2u77_47 0A0C  
                i2u69_47 0C4C                  _Lcd_Cmd 0A16                  _Lcd_Out 0E40  
                __Hparam 0000                  __Lparam 0000            ?i2_Lcd_Chr_CP 0001  
           __psmallconst 0600                  __pcinit 0F60                  __ramtop 0600  
                __ptext0 0D7E                  __ptext1 0E40                  __ptext2 07AE  
                __ptext3 0C6E                  __ptext4 0A16                  __ptext6 0ED0  
                __ptext7 0B42                  __ptext8 08E2           __pintcode_body 063E  
   end_of_initialization 0F60            __Lmediumconst 0000                  int_func 063E  
          i2Lcd_Cmd@data 0003           ??i2_Lcd_Chr_CP 0001             ??_Lcd_Chr_CP 000F  
              i2_Lcd_Cmd 0B42                _PORTBbits 000F81                i2_Lcd_Out 0ED0  
              _PORTCbits 000F82                _PORTDbits 000F83                _PORTEbits 000F84  
          i2Lcd_Out@data 0008                _TRISDbits 000F95                _TRISEbits 000F96  
     __end_of_Lcd_Chr_CP 08E2               ?i2_Lcd_Cmd 0001               ?i2_Lcd_Out 0004  
    start_initialization 0F60              __end_of_isr 07AE            Lcd_Out@buffer 0013  
   __end_ofi2_Lcd_Chr_CP 0A16                 ?_Lcd_Cmd 0001                 ?_Lcd_Out 0012  
       i2Lcd_Chr_CP@data 0003                __pintcode 0008              ??i2_Lcd_Cmd 0001  
            ??i2_Lcd_Out 0007              __smallconst 0600                 Lcd_Out@x 0012  
               Lcd_Out@y 0015             Lcd_Init@data 0013                 _Lcd_Init 0C6E  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000           Lcd_Chr_CP@data 0011              Lcd_Cmd@data 0011  
               isa$xinst 000000                 int$flags 001B             i2_Lcd_Chr_CP 08E2  
            Lcd_Out@data 0016               _INTCONbits 000FF2                 intlevel2 0000  
             i2Lcd_Out@x 0004               i2Lcd_Out@y 0007          i2Lcd_Out@buffer 0005  
