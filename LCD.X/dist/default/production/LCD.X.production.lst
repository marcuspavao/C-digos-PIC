

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 19 18:17:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _PORTC	set	3970
    53   000000                     _TRISC	set	3988
    54   000000                     _PORTBbits	set	3969
    55   000000                     _PORTE	set	3972
    56   000000                     _PORTD	set	3971
    57   000000                     _TRISE	set	3990
    58   000000                     _TRISD	set	3989
    59   000000                     _PORTB	set	3969
    60   000000                     _PORTDbits	set	3971
    61   000000                     _TRISDbits	set	3989
    62   000000                     _ADCON1	set	4033
    63   000000                     _ADCON0	set	4034
    64   000000                     _TRISEbits	set	3990
    65   000000                     _LATB	set	3978
    66   000000                     _TRISB	set	3987
    67   000000                     _PORTEbits	set	3972
    68   000000                     _INTCON2bits	set	4081
    69   000000                     _LATE	set	3981
    70   000000                     _LATD	set	3980
    71   000000                     _LATC	set	3979
    72                           
    73                           	psect	smallconst
    74   000600                     __psmallconst:
    75                           	callstack 0
    76   000600  00                 	db	0
    77   000601                     STR_4:
    78   000601  20                 	db	32
    79   000602  00                 	db	0
    80   000603                     STR_1:
    81   000603  31                 	db	49	;'1'
    82   000604  00                 	db	0
    83   000605                     STR_2:
    84   000605  32                 	db	50	;'2'
    85   000606  00                 	db	0
    86   000607                     STR_3:
    87   000607  33                 	db	51	;'3'
    88   000608  00                 	db	0
    89   000609  00                 	db	0	; dummy byte at the end
    90   000000                     
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   000C0E                     __pcinit:
    95                           	callstack 0
    96   000C0E                     start_initialization:
    97                           	callstack 0
    98   000C0E                     __initialization:
    99                           	callstack 0
   100   000C0E                     end_of_initialization:
   101                           	callstack 0
   102   000C0E                     __end_of__initialization:
   103                           	callstack 0
   104   000C0E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105   000C10  6EF8               	movwf	tblptru,c
   106   000C12  0100               	movlb	0
   107   000C14  EF05  F003         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	cstackCOMRAM
   110   000001                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000001                     ??_Lcd_Cmd:
   113   000001                     ??_Lcd_Chr_CP:
   114   000001                     
   115                           ; 1 bytes @ 0x0
   116   000001                     	ds	2
   117   000003                     Lcd_Chr_CP@data:
   118                           	callstack 0
   119   000003                     Lcd_Cmd@data:
   120                           	callstack 0
   121                           
   122                           ; 1 bytes @ 0x2
   123   000003                     	ds	1
   124   000004                     ??_Lcd_Init:
   125   000004                     Lcd_Out@x:
   126                           	callstack 0
   127                           
   128                           ; 1 bytes @ 0x3
   129   000004                     	ds	1
   130   000005                     Lcd_Init@data:
   131                           	callstack 0
   132   000005                     Lcd_Out@buffer:
   133                           	callstack 0
   134                           
   135                           ; 2 bytes @ 0x4
   136   000005                     	ds	2
   137   000007                     Lcd_Out@y:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x6
   141   000007                     	ds	1
   142   000008                     Lcd_Out@data:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x7
   146   000008                     	ds	1
   147   000009                     ??_main:
   148                           
   149                           ; 1 bytes @ 0x8
   150   000009                     	ds	2
   151   00000B                     main@l:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0xA
   155   00000B                     	ds	2
   156   00000D                     main@col:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0xC
   160   00000D                     	ds	2
   161                           
   162 ;;
   163 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   164 ;;
   165 ;; *************** function _main *****************
   166 ;; Defined at:
   167 ;;		line 20 in file "mainLCD.c"
   168 ;; Parameters:    Size  Location     Type
   169 ;;		None
   170 ;; Auto vars:     Size  Location     Type
   171 ;;  col             2   12[COMRAM] int 
   172 ;;  l               2   10[COMRAM] int 
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   182 ;;      Params:         0       0       0       0       0       0       0
   183 ;;      Locals:         4       0       0       0       0       0       0
   184 ;;      Temps:          2       0       0       0       0       0       0
   185 ;;      Totals:         6       0       0       0       0       0       0
   186 ;;Total ram usage:        6 bytes
   187 ;; Hardware stack levels required when called: 2
   188 ;; This function calls:
   189 ;;		_Lcd_Cmd
   190 ;;		_Lcd_Init
   191 ;;		_Lcd_Out
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198   00060A                     __ptext0:
   199                           	callstack 0
   200   00060A                     _main:
   201                           	callstack 29
   202   00060A                     
   203                           ;mainLCD.c: 22: ADCON0 = 0b00000000;
   204   00060A  0E00               	movlw	0
   205   00060C  6EC2               	movwf	194,c	;volatile
   206                           
   207                           ;mainLCD.c: 23: ADCON1 = 0b00001111;
   208   00060E  0E0F               	movlw	15
   209   000610  6EC1               	movwf	193,c	;volatile
   210   000612                     
   211                           ;mainLCD.c: 27: INTCON2bits.RBPU = 1;
   212   000612  8EF1               	bsf	241,7,c	;volatile
   213   000614                     
   214                           ;mainLCD.c: 29: TRISB = 0b11111111;
   215   000614  6893               	setf	147,c	;volatile
   216                           
   217                           ;mainLCD.c: 30: TRISC = 0b00000000;
   218   000616  0E00               	movlw	0
   219   000618  6E94               	movwf	148,c	;volatile
   220                           
   221                           ;mainLCD.c: 31: TRISD = 0b00000000;
   222   00061A  0E00               	movlw	0
   223   00061C  6E95               	movwf	149,c	;volatile
   224                           
   225                           ;mainLCD.c: 32: TRISE = 0b00000000;
   226   00061E  0E00               	movlw	0
   227   000620  6E96               	movwf	150,c	;volatile
   228                           
   229                           ;mainLCD.c: 34: PORTB = 0;
   230   000622  0E00               	movlw	0
   231   000624  6E81               	movwf	129,c	;volatile
   232                           
   233                           ;mainLCD.c: 35: LATB = 0;
   234   000626  0E00               	movlw	0
   235   000628  6E8A               	movwf	138,c	;volatile
   236                           
   237                           ;mainLCD.c: 36: PORTC = 0;
   238   00062A  0E00               	movlw	0
   239   00062C  6E82               	movwf	130,c	;volatile
   240                           
   241                           ;mainLCD.c: 37: LATC = 0;
   242   00062E  0E00               	movlw	0
   243   000630  6E8B               	movwf	139,c	;volatile
   244                           
   245                           ;mainLCD.c: 38: PORTD = 0;
   246   000632  0E00               	movlw	0
   247   000634  6E83               	movwf	131,c	;volatile
   248                           
   249                           ;mainLCD.c: 39: LATD = 0;
   250   000636  0E00               	movlw	0
   251   000638  6E8C               	movwf	140,c	;volatile
   252                           
   253                           ;mainLCD.c: 40: PORTE = 0;
   254   00063A  0E00               	movlw	0
   255   00063C  6E84               	movwf	132,c	;volatile
   256                           
   257                           ;mainLCD.c: 41: LATE = 0;
   258   00063E  0E00               	movlw	0
   259   000640  6E8D               	movwf	141,c	;volatile
   260                           
   261                           ;mainLCD.c: 42: int col, l;;mainLCD.c: 43: col = 0;
   262   000642  0E00               	movlw	0
   263   000644  6E0E               	movwf	(main@col+1)^0,c
   264   000646  0E00               	movlw	0
   265   000648  6E0D               	movwf	main@col^0,c
   266                           
   267                           ;mainLCD.c: 44: l = 1;
   268   00064A  0E00               	movlw	0
   269   00064C  6E0C               	movwf	(main@l+1)^0,c
   270   00064E  0E01               	movlw	1
   271   000650  6E0B               	movwf	main@l^0,c
   272   000652                     
   273                           ;mainLCD.c: 45: Lcd_Init();
   274   000652  EC37  F005         	call	_Lcd_Init	;wreg free
   275   000656                     
   276                           ;mainLCD.c: 46: Lcd_Cmd(12);
   277   000656  0E0C               	movlw	12
   278   000658  ECA1  F004         	call	_Lcd_Cmd
   279   00065C                     l1089:
   280                           
   281                           ;mainLCD.c: 50: {;mainLCD.c: 52: if(PORTBbits.RB3 == 0){
   282   00065C  B681               	btfsc	129,3,c	;volatile
   283   00065E  EF33  F003         	goto	u211
   284   000662  EF35  F003         	goto	u210
   285   000666                     u211:
   286   000666  EF3C  F003         	goto	l1095
   287   00066A                     u210:
   288   00066A                     
   289                           ;mainLCD.c: 53: Lcd_Cmd(1);
   290   00066A  0E01               	movlw	1
   291   00066C  ECA1  F004         	call	_Lcd_Cmd
   292   000670                     
   293                           ;mainLCD.c: 54: col = 0;
   294   000670  0E00               	movlw	0
   295   000672  6E0E               	movwf	(main@col+1)^0,c
   296   000674  0E00               	movlw	0
   297   000676  6E0D               	movwf	main@col^0,c
   298   000678                     l1095:
   299                           
   300                           ;mainLCD.c: 55: };mainLCD.c: 56: if(PORTBbits.RB0 == 0){
   301   000678  B081               	btfsc	129,0,c	;volatile
   302   00067A  EF41  F003         	goto	u221
   303   00067E  EF43  F003         	goto	u220
   304   000682                     u221:
   305   000682  EF5A  F003         	goto	l1103
   306   000686                     u220:
   307   000686                     
   308                           ;mainLCD.c: 57: Lcd_Out(l, col, "1");
   309   000686  C00D  F004         	movff	main@col,Lcd_Out@x
   310   00068A  0E03               	movlw	low STR_1
   311   00068C  6E05               	movwf	Lcd_Out@buffer^0,c
   312   00068E  0E06               	movlw	high STR_1
   313   000690  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   314   000692  500B               	movf	main@l^0,w,c
   315   000694  ECBF  F005         	call	_Lcd_Out
   316   000698                     
   317                           ;mainLCD.c: 58: col++;
   318   000698  4A0D               	infsnz	main@col^0,f,c
   319   00069A  2A0E               	incf	(main@col+1)^0,f,c
   320   00069C                     
   321                           ;mainLCD.c: 59: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   322   00069C  0E02               	movlw	2
   323   00069E  6E0A               	movwf	(??_main+1)^0,c
   324   0006A0  0E86               	movlw	134
   325   0006A2  6E09               	movwf	??_main^0,c
   326   0006A4  0EDB               	movlw	219
   327   0006A6                     u317:
   328   0006A6  0004               	clrwdt	
   329   0006A8  2EE8               	decfsz	wreg,f,c
   330   0006AA  D7FD               	bra	u317
   331   0006AC  2E09               	decfsz	??_main^0,f,c
   332   0006AE  D7FB               	bra	u317
   333   0006B0  2E0A               	decfsz	(??_main+1)^0,f,c
   334   0006B2  D7F9               	bra	u317
   335   0006B4                     l1103:
   336                           
   337                           ;mainLCD.c: 60: };mainLCD.c: 61: if(PORTBbits.RB1 == 0){
   338   0006B4  B281               	btfsc	129,1,c	;volatile
   339   0006B6  EF5F  F003         	goto	u231
   340   0006BA  EF61  F003         	goto	u230
   341   0006BE                     u231:
   342   0006BE  EF78  F003         	goto	l1111
   343   0006C2                     u230:
   344   0006C2                     
   345                           ;mainLCD.c: 62: Lcd_Out(l, col, "2");
   346   0006C2  C00D  F004         	movff	main@col,Lcd_Out@x
   347   0006C6  0E05               	movlw	low STR_2
   348   0006C8  6E05               	movwf	Lcd_Out@buffer^0,c
   349   0006CA  0E06               	movlw	high STR_2
   350   0006CC  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   351   0006CE  500B               	movf	main@l^0,w,c
   352   0006D0  ECBF  F005         	call	_Lcd_Out
   353   0006D4                     
   354                           ;mainLCD.c: 63: col++;
   355   0006D4  4A0D               	infsnz	main@col^0,f,c
   356   0006D6  2A0E               	incf	(main@col+1)^0,f,c
   357   0006D8                     
   358                           ;mainLCD.c: 64: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   359   0006D8  0E02               	movlw	2
   360   0006DA  6E0A               	movwf	(??_main+1)^0,c
   361   0006DC  0E86               	movlw	134
   362   0006DE  6E09               	movwf	??_main^0,c
   363   0006E0  0EDB               	movlw	219
   364   0006E2                     u327:
   365   0006E2  0004               	clrwdt	
   366   0006E4  2EE8               	decfsz	wreg,f,c
   367   0006E6  D7FD               	bra	u327
   368   0006E8  2E09               	decfsz	??_main^0,f,c
   369   0006EA  D7FB               	bra	u327
   370   0006EC  2E0A               	decfsz	(??_main+1)^0,f,c
   371   0006EE  D7F9               	bra	u327
   372   0006F0                     l1111:
   373                           
   374                           ;mainLCD.c: 65: };mainLCD.c: 66: if(PORTBbits.RB2 == 0){
   375   0006F0  B481               	btfsc	129,2,c	;volatile
   376   0006F2  EF7D  F003         	goto	u241
   377   0006F6  EF7F  F003         	goto	u240
   378   0006FA                     u241:
   379   0006FA  EF96  F003         	goto	l1119
   380   0006FE                     u240:
   381   0006FE                     
   382                           ;mainLCD.c: 67: Lcd_Out(l, col, "3");
   383   0006FE  C00D  F004         	movff	main@col,Lcd_Out@x
   384   000702  0E07               	movlw	low STR_3
   385   000704  6E05               	movwf	Lcd_Out@buffer^0,c
   386   000706  0E06               	movlw	high STR_3
   387   000708  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   388   00070A  500B               	movf	main@l^0,w,c
   389   00070C  ECBF  F005         	call	_Lcd_Out
   390   000710                     
   391                           ;mainLCD.c: 68: col++;
   392   000710  4A0D               	infsnz	main@col^0,f,c
   393   000712  2A0E               	incf	(main@col+1)^0,f,c
   394   000714                     
   395                           ;mainLCD.c: 69: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   396   000714  0E02               	movlw	2
   397   000716  6E0A               	movwf	(??_main+1)^0,c
   398   000718  0E86               	movlw	134
   399   00071A  6E09               	movwf	??_main^0,c
   400   00071C  0EDB               	movlw	219
   401   00071E                     u337:
   402   00071E  0004               	clrwdt	
   403   000720  2EE8               	decfsz	wreg,f,c
   404   000722  D7FD               	bra	u337
   405   000724  2E09               	decfsz	??_main^0,f,c
   406   000726  D7FB               	bra	u337
   407   000728  2E0A               	decfsz	(??_main+1)^0,f,c
   408   00072A  D7F9               	bra	u337
   409   00072C                     l1119:
   410                           
   411                           ;mainLCD.c: 70: };mainLCD.c: 72: if(col == 16){
   412   00072C  0E10               	movlw	16
   413   00072E  180D               	xorwf	main@col^0,w,c
   414   000730  100E               	iorwf	(main@col+1)^0,w,c
   415   000732  A4D8               	btfss	status,2,c
   416   000734  EF9E  F003         	goto	u251
   417   000738  EFA0  F003         	goto	u250
   418   00073C                     u251:
   419   00073C  EFA8  F003         	goto	l1123
   420   000740                     u250:
   421   000740                     
   422                           ;mainLCD.c: 73: l = 2;
   423   000740  0E00               	movlw	0
   424   000742  6E0C               	movwf	(main@l+1)^0,c
   425   000744  0E02               	movlw	2
   426   000746  6E0B               	movwf	main@l^0,c
   427                           
   428                           ;mainLCD.c: 74: col = 0;
   429   000748  0E00               	movlw	0
   430   00074A  6E0E               	movwf	(main@col+1)^0,c
   431   00074C  0E00               	movlw	0
   432   00074E  6E0D               	movwf	main@col^0,c
   433   000750                     l1123:
   434                           
   435                           ;mainLCD.c: 75: };mainLCD.c: 77: if(col == 16 && l == 2){
   436   000750  0E10               	movlw	16
   437   000752  180D               	xorwf	main@col^0,w,c
   438   000754  100E               	iorwf	(main@col+1)^0,w,c
   439   000756  A4D8               	btfss	status,2,c
   440   000758  EFB0  F003         	goto	u261
   441   00075C  EFB2  F003         	goto	u260
   442   000760                     u261:
   443   000760  EFC4  F003         	goto	l1129
   444   000764                     u260:
   445   000764  0E02               	movlw	2
   446   000766  180B               	xorwf	main@l^0,w,c
   447   000768  100C               	iorwf	(main@l+1)^0,w,c
   448   00076A  A4D8               	btfss	status,2,c
   449   00076C  EFBA  F003         	goto	u271
   450   000770  EFBC  F003         	goto	u270
   451   000774                     u271:
   452   000774  EFC4  F003         	goto	l1129
   453   000778                     u270:
   454   000778                     
   455                           ;mainLCD.c: 78: col = 0; l = 1;
   456   000778  0E00               	movlw	0
   457   00077A  6E0E               	movwf	(main@col+1)^0,c
   458   00077C  0E00               	movlw	0
   459   00077E  6E0D               	movwf	main@col^0,c
   460   000780  0E00               	movlw	0
   461   000782  6E0C               	movwf	(main@l+1)^0,c
   462   000784  0E01               	movlw	1
   463   000786  6E0B               	movwf	main@l^0,c
   464   000788                     l1129:
   465                           
   466                           ;mainLCD.c: 79: };mainLCD.c: 81: if(PORTBbits.RB4 == 0){
   467   000788  B881               	btfsc	129,4,c	;volatile
   468   00078A  EFC9  F003         	goto	u281
   469   00078E  EFCB  F003         	goto	u280
   470   000792                     u281:
   471   000792  EF02  F004         	goto	l97
   472   000796                     u280:
   473   000796                     
   474                           ;mainLCD.c: 82: col = col - 1;
   475   000796  0EFF               	movlw	255
   476   000798  240D               	addwf	main@col^0,w,c
   477   00079A  6E0D               	movwf	main@col^0,c
   478   00079C  0EFF               	movlw	255
   479   00079E  200E               	addwfc	(main@col+1)^0,w,c
   480   0007A0  6E0E               	movwf	(main@col+1)^0,c
   481                           
   482                           ;mainLCD.c: 83: if(col == -1 && l == 2){
   483   0007A2  280D               	incf	main@col^0,w,c
   484   0007A4  E106               	bnz	u291
   485   0007A6  280E               	incf	(main@col+1)^0,w,c
   486   0007A8  A4D8               	btfss	status,2,c
   487   0007AA  EFD9  F003         	goto	u291
   488   0007AE  EFDB  F003         	goto	u290
   489   0007B2                     u291:
   490   0007B2  EFED  F003         	goto	l1137
   491   0007B6                     u290:
   492   0007B6  0E02               	movlw	2
   493   0007B8  180B               	xorwf	main@l^0,w,c
   494   0007BA  100C               	iorwf	(main@l+1)^0,w,c
   495   0007BC  A4D8               	btfss	status,2,c
   496   0007BE  EFE3  F003         	goto	u301
   497   0007C2  EFE5  F003         	goto	u300
   498   0007C6                     u301:
   499   0007C6  EFED  F003         	goto	l1137
   500   0007CA                     u300:
   501   0007CA                     
   502                           ;mainLCD.c: 84: l = 1;
   503   0007CA  0E00               	movlw	0
   504   0007CC  6E0C               	movwf	(main@l+1)^0,c
   505   0007CE  0E01               	movlw	1
   506   0007D0  6E0B               	movwf	main@l^0,c
   507                           
   508                           ;mainLCD.c: 85: col = 15;
   509   0007D2  0E00               	movlw	0
   510   0007D4  6E0E               	movwf	(main@col+1)^0,c
   511   0007D6  0E0F               	movlw	15
   512   0007D8  6E0D               	movwf	main@col^0,c
   513   0007DA                     l1137:
   514                           
   515                           ;mainLCD.c: 86: };mainLCD.c: 87: Lcd_Out(l, col, " ");
   516   0007DA  C00D  F004         	movff	main@col,Lcd_Out@x
   517   0007DE  0E01               	movlw	low STR_4
   518   0007E0  6E05               	movwf	Lcd_Out@buffer^0,c
   519   0007E2  0E06               	movlw	high STR_4
   520   0007E4  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   521   0007E6  500B               	movf	main@l^0,w,c
   522   0007E8  ECBF  F005         	call	_Lcd_Out
   523   0007EC                     
   524                           ;mainLCD.c: 88: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   525   0007EC  0E02               	movlw	2
   526   0007EE  6E0A               	movwf	(??_main+1)^0,c
   527   0007F0  0E86               	movlw	134
   528   0007F2  6E09               	movwf	??_main^0,c
   529   0007F4  0EDB               	movlw	219
   530   0007F6                     u347:
   531   0007F6  0004               	clrwdt	
   532   0007F8  2EE8               	decfsz	wreg,f,c
   533   0007FA  D7FD               	bra	u347
   534   0007FC  2E09               	decfsz	??_main^0,f,c
   535   0007FE  D7FB               	bra	u347
   536   000800  2E0A               	decfsz	(??_main+1)^0,f,c
   537   000802  D7F9               	bra	u347
   538   000804                     l97:
   539   000804  0004               	clrwdt		;# 
   540   000806  EF2E  F003         	goto	l1089
   541   00080A  EF00  F000         	goto	start
   542   00080E                     __end_of_main:
   543                           	callstack 0
   544                           
   545 ;; *************** function _Lcd_Out *****************
   546 ;; Defined at:
   547 ;;		line 119 in file "flexlcd.h"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  y               1    wreg     unsigned char 
   550 ;;  x               1    3[COMRAM] unsigned char 
   551 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
   552 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  y               1    6[COMRAM] unsigned char 
   555 ;;  data            1    7[COMRAM] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   565 ;;      Params:         3       0       0       0       0       0       0
   566 ;;      Locals:         2       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0
   568 ;;      Totals:         5       0       0       0       0       0       0
   569 ;;Total ram usage:        5 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 1
   572 ;; This function calls:
   573 ;;		_Lcd_Chr_CP
   574 ;;		_Lcd_Cmd
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text1
   581   000B7E                     __ptext1:
   582                           	callstack 0
   583   000B7E                     _Lcd_Out:
   584                           	callstack 29
   585                           
   586                           ;incstack = 0
   587                           ;Lcd_Out@y stored from wreg
   588   000B7E  6E07               	movwf	Lcd_Out@y^0,c
   589   000B80                     
   590                           ;flexlcd.h: 121: unsigned char data;;flexlcd.h: 122: switch (y)
   591   000B80  EFD6  F005         	goto	l1069
   592   000B84                     l1059:
   593   000B84  5004               	movf	Lcd_Out@x^0,w,c
   594   000B86  0F80               	addlw	128
   595   000B88  6E08               	movwf	Lcd_Out@data^0,c
   596   000B8A  EFE9  F005         	goto	l1071
   597   000B8E                     l1061:
   598   000B8E  5004               	movf	Lcd_Out@x^0,w,c
   599   000B90  0FC0               	addlw	192
   600   000B92  6E08               	movwf	Lcd_Out@data^0,c
   601   000B94  EFE9  F005         	goto	l1071
   602   000B98                     l1063:
   603   000B98  5004               	movf	Lcd_Out@x^0,w,c
   604   000B9A  0F94               	addlw	148
   605   000B9C  6E08               	movwf	Lcd_Out@data^0,c
   606   000B9E  EFE9  F005         	goto	l1071
   607   000BA2                     l1065:
   608   000BA2  5004               	movf	Lcd_Out@x^0,w,c
   609   000BA4  0FD4               	addlw	212
   610   000BA6  6E08               	movwf	Lcd_Out@data^0,c
   611   000BA8  EFE9  F005         	goto	l1071
   612   000BAC                     l1069:
   613   000BAC  5007               	movf	Lcd_Out@y^0,w,c
   614                           
   615                           ; Switch size 1, requested type "simple"
   616                           ; Number of cases is 4, Range of values is 1 to 4
   617                           ; switch strategies available:
   618                           ; Name         Instructions Cycles
   619                           ; simple_byte           13     7 (average)
   620                           ;	Chosen strategy is simple_byte
   621   000BAE  0A01               	xorlw	1	; case 1
   622   000BB0  B4D8               	btfsc	status,2,c
   623   000BB2  EFC2  F005         	goto	l1059
   624   000BB6  0A03               	xorlw	3	; case 2
   625   000BB8  B4D8               	btfsc	status,2,c
   626   000BBA  EFC7  F005         	goto	l1061
   627   000BBE  0A01               	xorlw	1	; case 3
   628   000BC0  B4D8               	btfsc	status,2,c
   629   000BC2  EFCC  F005         	goto	l1063
   630   000BC6  0A07               	xorlw	7	; case 4
   631   000BC8  B4D8               	btfsc	status,2,c
   632   000BCA  EFD1  F005         	goto	l1065
   633   000BCE  EFE9  F005         	goto	l1071
   634   000BD2                     l1071:
   635                           
   636                           ;flexlcd.h: 130: Lcd_Cmd(data);
   637   000BD2  5008               	movf	Lcd_Out@data^0,w,c
   638   000BD4  ECA1  F004         	call	_Lcd_Cmd
   639                           
   640                           ;flexlcd.h: 131: while(*buffer)
   641   000BD8  EFF8  F005         	goto	l1077
   642   000BDC                     l1073:
   643                           
   644                           ;flexlcd.h: 132: {;flexlcd.h: 133: Lcd_Chr_CP(*buffer);
   645   000BDC  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   646   000BE0  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   647   000BE4                     	if	0	;tblptru may be non-zero
   648   000BE4                     	endif
   649   000BE4                     	if	0	;tblptru may be non-zero
   650   000BE4                     	endif
   651   000BE4  0008               	tblrd		*
   652   000BE6  50F5               	movf	tablat,w,c
   653   000BE8  EC07  F004         	call	_Lcd_Chr_CP
   654   000BEC                     
   655                           ;flexlcd.h: 134: buffer++;
   656   000BEC  4A05               	infsnz	Lcd_Out@buffer^0,f,c
   657   000BEE  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
   658   000BF0                     l1077:
   659   000BF0  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   660   000BF4  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   661   000BF8                     	if	0	;tblptru may be non-zero
   662   000BF8                     	endif
   663   000BF8                     	if	0	;tblptru may be non-zero
   664   000BF8                     	endif
   665   000BF8  0008               	tblrd		*
   666   000BFA  50F5               	movf	tablat,w,c
   667   000BFC  0900               	iorlw	0
   668   000BFE  A4D8               	btfss	status,2,c
   669   000C00  EF04  F006         	goto	u201
   670   000C04  EF06  F006         	goto	u200
   671   000C08                     u201:
   672   000C08  EFEE  F005         	goto	l1073
   673   000C0C                     u200:
   674   000C0C  0012               	return		;funcret
   675   000C0E                     __end_of_Lcd_Out:
   676                           	callstack 0
   677                           
   678 ;; *************** function _Lcd_Chr_CP *****************
   679 ;; Defined at:
   680 ;;		line 161 in file "flexlcd.h"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  data            1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  data            1    2[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   694 ;;      Params:         0       0       0       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0       0       0
   697 ;;      Totals:         3       0       0       0       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_Lcd_Out
   704 ;;		_Lcd_Out2
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text2
   709   00080E                     __ptext2:
   710                           	callstack 0
   711   00080E                     _Lcd_Chr_CP:
   712                           	callstack 29
   713                           
   714                           ;incstack = 0
   715                           ;Lcd_Chr_CP@data stored from wreg
   716   00080E  6E03               	movwf	Lcd_Chr_CP@data^0,c
   717   000810                     
   718                           ;flexlcd.h: 162: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
   719   000810  9284               	bcf	132,1,c	;volatile
   720   000812  8484               	bsf	132,2,c	;volatile
   721   000814                     
   722                           ;flexlcd.h: 163: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   723   000814  6A01               	clrf	??_Lcd_Chr_CP^0,c
   724   000816  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
   725   000818  D001               	bra	u45
   726   00081A  2A01               	incf	??_Lcd_Chr_CP^0,f,c
   727   00081C                     u45:
   728   00081C  0E01               	movlw	1
   729   00081E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   730   000820  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   731   000822  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   732   000824  5083               	movf	131,w,c	;volatile
   733   000826  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   734   000828  0B7F               	andlw	-129
   735   00082A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   736   00082C  6E83               	movwf	131,c	;volatile
   737   00082E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   738   000832  0E06               	movlw	6
   739   000834  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   740   000836                     u55:
   741   000836  90D8               	bcf	status,0,c
   742   000838  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   743   00083A  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   744   00083C  EF1B  F004         	goto	u55
   745   000840  0E01               	movlw	1
   746   000842  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   747   000844  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   748   000846  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   749   000848  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   750   00084A  5083               	movf	131,w,c	;volatile
   751   00084C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   752   00084E  0BBF               	andlw	-65
   753   000850  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   754   000852  6E83               	movwf	131,c	;volatile
   755                           
   756                           ;flexlcd.h: 164: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
   757   000854  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   758   000858  0E05               	movlw	5
   759   00085A  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   760   00085C                     u65:
   761   00085C  90D8               	bcf	status,0,c
   762   00085E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   763   000860  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   764   000862  EF2E  F004         	goto	u65
   765   000866  0E01               	movlw	1
   766   000868  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   767   00086A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   768   00086C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   769   00086E  5083               	movf	131,w,c	;volatile
   770   000870  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   771   000872  0BDF               	andlw	-33
   772   000874  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   773   000876  6E83               	movwf	131,c	;volatile
   774   000878  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   775   00087C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   776   00087E  0E0F               	movlw	15
   777   000880  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   778   000882  0E01               	movlw	1
   779   000884  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   780   000886  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   781   000888  5083               	movf	131,w,c	;volatile
   782   00088A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   783   00088C  0BEF               	andlw	-17
   784   00088E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   785   000890  6E83               	movwf	131,c	;volatile
   786   000892                     
   787                           ;flexlcd.h: 165: _delay(10);
   788   000892  0E03               	movlw	3
   789   000894                     u357:
   790   000894  2EE8               	decfsz	wreg,f,c
   791   000896  D7FE               	bra	u357
   792   000898  F000               	nop	
   793   00089A                     
   794                           ;flexlcd.h: 166: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   795   00089A  8284               	bsf	132,1,c	;volatile
   796   00089C  0E03               	movlw	3
   797   00089E                     u367:
   798   00089E  2EE8               	decfsz	wreg,f,c
   799   0008A0  D7FE               	bra	u367
   800   0008A2  F000               	nop	
   801   0008A4  9284               	bcf	132,1,c	;volatile
   802                           
   803                           ;flexlcd.h: 167: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
   804   0008A6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   805   0008AA  90D8               	bcf	status,0,c
   806   0008AC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   807   0008AE  90D8               	bcf	status,0,c
   808   0008B0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   809   0008B2  90D8               	bcf	status,0,c
   810   0008B4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   811   0008B6  0E01               	movlw	1
   812   0008B8  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   813   0008BA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   814   0008BC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   815   0008BE  5083               	movf	131,w,c	;volatile
   816   0008C0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   817   0008C2  0B7F               	andlw	-129
   818   0008C4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   819   0008C6  6E83               	movwf	131,c	;volatile
   820   0008C8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   821   0008CC  90D8               	bcf	status,0,c
   822   0008CE  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   823   0008D0  90D8               	bcf	status,0,c
   824   0008D2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   825   0008D4  0E01               	movlw	1
   826   0008D6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   827   0008D8  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   828   0008DA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   829   0008DC  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   830   0008DE  5083               	movf	131,w,c	;volatile
   831   0008E0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   832   0008E2  0BBF               	andlw	-65
   833   0008E4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   834   0008E6  6E83               	movwf	131,c	;volatile
   835                           
   836                           ;flexlcd.h: 168: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
   837   0008E8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   838   0008EC  90D8               	bcf	status,0,c
   839   0008EE  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   840   0008F0  0E01               	movlw	1
   841   0008F2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   842   0008F4  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   843   0008F6  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   844   0008F8  5083               	movf	131,w,c	;volatile
   845   0008FA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   846   0008FC  0BDF               	andlw	-33
   847   0008FE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   848   000900  6E83               	movwf	131,c	;volatile
   849   000902  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   850   000906  0E01               	movlw	1
   851   000908  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   852   00090A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   853   00090C  5083               	movf	131,w,c	;volatile
   854   00090E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   855   000910  0BEF               	andlw	-17
   856   000912  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   857   000914  6E83               	movwf	131,c	;volatile
   858   000916                     
   859                           ;flexlcd.h: 169: _delay(10);
   860   000916  0E03               	movlw	3
   861   000918                     u377:
   862   000918  2EE8               	decfsz	wreg,f,c
   863   00091A  D7FE               	bra	u377
   864   00091C  F000               	nop	
   865   00091E                     
   866                           ;flexlcd.h: 170: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   867   00091E  8284               	bsf	132,1,c	;volatile
   868   000920  0E03               	movlw	3
   869   000922                     u387:
   870   000922  2EE8               	decfsz	wreg,f,c
   871   000924  D7FE               	bra	u387
   872   000926  F000               	nop	
   873   000928  9284               	bcf	132,1,c	;volatile
   874   00092A                     
   875                           ;flexlcd.h: 171: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
   876   00092A  0E03               	movlw	3
   877   00092C                     u397:
   878   00092C  2EE8               	decfsz	wreg,f,c
   879   00092E  D7FE               	bra	u397
   880   000930  F000               	nop	
   881   000932  0E0F               	movlw	15
   882   000934  6E01               	movwf	??_Lcd_Chr_CP^0,c
   883   000936  0E48               	movlw	72
   884   000938                     u407:
   885   000938  2EE8               	decfsz	wreg,f,c
   886   00093A  D7FE               	bra	u407
   887   00093C  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
   888   00093E  D7FC               	bra	u407
   889   000940  0012               	return		;funcret
   890   000942                     __end_of_Lcd_Chr_CP:
   891                           	callstack 0
   892                           
   893 ;; *************** function _Lcd_Init *****************
   894 ;; Defined at:
   895 ;;		line 77 in file "flexlcd.h"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  data            1    4[COMRAM] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   909 ;;      Params:         0       0       0       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0       0       0
   912 ;;      Totals:         2       0       0       0       0       0       0
   913 ;;Total ram usage:        2 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 1
   916 ;; This function calls:
   917 ;;		_Lcd_Cmd
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text3
   924   000A6E                     __ptext3:
   925                           	callstack 0
   926   000A6E                     _Lcd_Init:
   927                           	callstack 29
   928   000A6E                     
   929                           ;flexlcd.h: 78: unsigned char data;;flexlcd.h: 79: TRISDbits.TRISD7 = 0;
   930   000A6E  9E95               	bcf	149,7,c	;volatile
   931                           
   932                           ;flexlcd.h: 80: TRISDbits.TRISD6 = 0;
   933   000A70  9C95               	bcf	149,6,c	;volatile
   934                           
   935                           ;flexlcd.h: 81: TRISDbits.TRISD5 = 0;
   936   000A72  9A95               	bcf	149,5,c	;volatile
   937                           
   938                           ;flexlcd.h: 82: TRISDbits.TRISD4 = 0;
   939   000A74  9895               	bcf	149,4,c	;volatile
   940                           
   941                           ;flexlcd.h: 83: TRISEbits.TRISE2 = 0;
   942   000A76  9496               	bcf	150,2,c	;volatile
   943                           
   944                           ;flexlcd.h: 84: TRISEbits.TRISE1 = 0;
   945   000A78  9296               	bcf	150,1,c	;volatile
   946                           
   947                           ;flexlcd.h: 85: PORTDbits.RD7 = 0;
   948   000A7A  9E83               	bcf	131,7,c	;volatile
   949                           
   950                           ;flexlcd.h: 86: PORTDbits.RD6 = 0;
   951   000A7C  9C83               	bcf	131,6,c	;volatile
   952                           
   953                           ;flexlcd.h: 87: PORTDbits.RD5 = 0;
   954   000A7E  9A83               	bcf	131,5,c	;volatile
   955                           
   956                           ;flexlcd.h: 88: PORTDbits.RD4 = 0;
   957   000A80  9883               	bcf	131,4,c	;volatile
   958                           
   959                           ;flexlcd.h: 89: PORTEbits.RE1 = 0;
   960   000A82  9284               	bcf	132,1,c	;volatile
   961                           
   962                           ;flexlcd.h: 90: PORTEbits.RE2 = 0;
   963   000A84  9484               	bcf	132,2,c	;volatile
   964   000A86                     
   965                           ;flexlcd.h: 91: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   966   000A86  0E0F               	movlw	15
   967   000A88  6E04               	movwf	??_Lcd_Init^0,c
   968   000A8A  0E48               	movlw	72
   969   000A8C                     u417:
   970   000A8C  2EE8               	decfsz	wreg,f,c
   971   000A8E  D7FE               	bra	u417
   972   000A90  2E04               	decfsz	??_Lcd_Init^0,f,c
   973   000A92  D7FC               	bra	u417
   974                           
   975                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   976   000A94  0E0F               	movlw	15
   977   000A96  6E04               	movwf	??_Lcd_Init^0,c
   978   000A98  0E48               	movlw	72
   979   000A9A                     u427:
   980   000A9A  2EE8               	decfsz	wreg,f,c
   981   000A9C  D7FE               	bra	u427
   982   000A9E  2E04               	decfsz	??_Lcd_Init^0,f,c
   983   000AA0  D7FC               	bra	u427
   984                           
   985                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   986   000AA2  0E0F               	movlw	15
   987   000AA4  6E04               	movwf	??_Lcd_Init^0,c
   988   000AA6  0E48               	movlw	72
   989   000AA8                     u437:
   990   000AA8  2EE8               	decfsz	wreg,f,c
   991   000AAA  D7FE               	bra	u437
   992   000AAC  2E04               	decfsz	??_Lcd_Init^0,f,c
   993   000AAE  D7FC               	bra	u437
   994                           
   995                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   996   000AB0  0E0F               	movlw	15
   997   000AB2  6E04               	movwf	??_Lcd_Init^0,c
   998   000AB4  0E48               	movlw	72
   999   000AB6                     u447:
  1000   000AB6  2EE8               	decfsz	wreg,f,c
  1001   000AB8  D7FE               	bra	u447
  1002   000ABA  2E04               	decfsz	??_Lcd_Init^0,f,c
  1003   000ABC  D7FC               	bra	u447
  1004                           
  1005                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1006   000ABE  0E0F               	movlw	15
  1007   000AC0  6E04               	movwf	??_Lcd_Init^0,c
  1008   000AC2  0E48               	movlw	72
  1009   000AC4                     u457:
  1010   000AC4  2EE8               	decfsz	wreg,f,c
  1011   000AC6  D7FE               	bra	u457
  1012   000AC8  2E04               	decfsz	??_Lcd_Init^0,f,c
  1013   000ACA  D7FC               	bra	u457
  1014                           
  1015                           ;flexlcd.h: 96: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1016   000ACC  0E0F               	movlw	15
  1017   000ACE  6E04               	movwf	??_Lcd_Init^0,c
  1018   000AD0  0E48               	movlw	72
  1019   000AD2                     u467:
  1020   000AD2  2EE8               	decfsz	wreg,f,c
  1021   000AD4  D7FE               	bra	u467
  1022   000AD6  2E04               	decfsz	??_Lcd_Init^0,f,c
  1023   000AD8  D7FC               	bra	u467
  1024   000ADA                     
  1025                           ;flexlcd.h: 97: for(data = 1; data < 4; data ++)
  1026   000ADA  0E01               	movlw	1
  1027   000ADC  6E05               	movwf	Lcd_Init@data^0,c
  1028   000ADE                     l51:
  1029                           
  1030                           ;flexlcd.h: 98: {;flexlcd.h: 99: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  1031   000ADE  9E83               	bcf	131,7,c	;volatile
  1032   000AE0  9C83               	bcf	131,6,c	;volatile
  1033   000AE2  8A83               	bsf	131,5,c	;volatile
  1034   000AE4  8883               	bsf	131,4,c	;volatile
  1035   000AE6  9284               	bcf	132,1,c	;volatile
  1036                           
  1037                           ;flexlcd.h: 100: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 
      +                          = 1; PORTDbits.RD4 = 1;
  1038   000AE8  9484               	bcf	132,2,c	;volatile
  1039   000AEA  9E83               	bcf	131,7,c	;volatile
  1040   000AEC  9C83               	bcf	131,6,c	;volatile
  1041   000AEE  8A83               	bsf	131,5,c	;volatile
  1042   000AF0  8883               	bsf	131,4,c	;volatile
  1043                           
  1044                           ;flexlcd.h: 101: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1045   000AF2  8284               	bsf	132,1,c	;volatile
  1046   000AF4  9484               	bcf	132,2,c	;volatile
  1047   000AF6                     
  1048                           ;flexlcd.h: 102: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1049   000AF6  0E03               	movlw	3
  1050   000AF8                     u477:
  1051   000AF8  2EE8               	decfsz	wreg,f,c
  1052   000AFA  D7FE               	bra	u477
  1053   000AFC  F000               	nop	
  1054   000AFE                     
  1055                           ;flexlcd.h: 103: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
  1056   000AFE  9E83               	bcf	131,7,c	;volatile
  1057   000B00  9C83               	bcf	131,6,c	;volatile
  1058   000B02  8A83               	bsf	131,5,c	;volatile
  1059   000B04  8883               	bsf	131,4,c	;volatile
  1060   000B06  9284               	bcf	132,1,c	;volatile
  1061   000B08                     
  1062                           ;flexlcd.h: 104: PORTEbits.RE2 = 0;
  1063   000B08  9484               	bcf	132,2,c	;volatile
  1064                           
  1065                           ;flexlcd.h: 105: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1066   000B0A  0E0F               	movlw	15
  1067   000B0C  6E04               	movwf	??_Lcd_Init^0,c
  1068   000B0E  0E48               	movlw	72
  1069   000B10                     u487:
  1070   000B10  2EE8               	decfsz	wreg,f,c
  1071   000B12  D7FE               	bra	u487
  1072   000B14  2E04               	decfsz	??_Lcd_Init^0,f,c
  1073   000B16  D7FC               	bra	u487
  1074   000B18  2A05               	incf	Lcd_Init@data^0,f,c
  1075   000B1A  0E03               	movlw	3
  1076   000B1C  6405               	cpfsgt	Lcd_Init@data^0,c
  1077   000B1E  EF93  F005         	goto	u71
  1078   000B22  EF95  F005         	goto	u70
  1079   000B26                     u71:
  1080   000B26  EF6F  F005         	goto	l51
  1081   000B2A                     u70:
  1082   000B2A                     
  1083                           ;flexlcd.h: 106: };flexlcd.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1084   000B2A  9E83               	bcf	131,7,c	;volatile
  1085   000B2C  9C83               	bcf	131,6,c	;volatile
  1086   000B2E  8A83               	bsf	131,5,c	;volatile
  1087   000B30  9883               	bcf	131,4,c	;volatile
  1088   000B32  9284               	bcf	132,1,c	;volatile
  1089   000B34  9484               	bcf	132,2,c	;volatile
  1090                           
  1091                           ;flexlcd.h: 108: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1092   000B36  9E83               	bcf	131,7,c	;volatile
  1093   000B38  9C83               	bcf	131,6,c	;volatile
  1094   000B3A  8A83               	bsf	131,5,c	;volatile
  1095   000B3C  9883               	bcf	131,4,c	;volatile
  1096   000B3E  8284               	bsf	132,1,c	;volatile
  1097   000B40  9484               	bcf	132,2,c	;volatile
  1098   000B42                     
  1099                           ;flexlcd.h: 109: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1100   000B42  0E03               	movlw	3
  1101   000B44                     u497:
  1102   000B44  2EE8               	decfsz	wreg,f,c
  1103   000B46  D7FE               	bra	u497
  1104   000B48  F000               	nop	
  1105   000B4A                     
  1106                           ;flexlcd.h: 110: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1107   000B4A  9E83               	bcf	131,7,c	;volatile
  1108   000B4C  9C83               	bcf	131,6,c	;volatile
  1109   000B4E  8A83               	bsf	131,5,c	;volatile
  1110   000B50  9883               	bcf	131,4,c	;volatile
  1111   000B52  9284               	bcf	132,1,c	;volatile
  1112   000B54  9484               	bcf	132,2,c	;volatile
  1113                           
  1114                           ;flexlcd.h: 111: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1115   000B56  0E0F               	movlw	15
  1116   000B58  6E04               	movwf	??_Lcd_Init^0,c
  1117   000B5A  0E48               	movlw	72
  1118   000B5C                     u507:
  1119   000B5C  2EE8               	decfsz	wreg,f,c
  1120   000B5E  D7FE               	bra	u507
  1121   000B60  2E04               	decfsz	??_Lcd_Init^0,f,c
  1122   000B62  D7FC               	bra	u507
  1123   000B64  0E28               	movlw	40
  1124   000B66  ECA1  F004         	call	_Lcd_Cmd
  1125   000B6A  0E10               	movlw	16
  1126   000B6C  ECA1  F004         	call	_Lcd_Cmd
  1127   000B70  0E01               	movlw	1
  1128   000B72  ECA1  F004         	call	_Lcd_Cmd
  1129   000B76  0E0F               	movlw	15
  1130   000B78  ECA1  F004         	call	_Lcd_Cmd
  1131   000B7C  0012               	return		;funcret
  1132   000B7E                     __end_of_Lcd_Init:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _Lcd_Cmd *****************
  1136 ;; Defined at:
  1137 ;;		line 175 in file "flexlcd.h"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  data            1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  data            1    2[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         0       0       0       0       0       0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0
  1153 ;;      Temps:          2       0       0       0       0       0       0
  1154 ;;      Totals:         3       0       0       0       0       0       0
  1155 ;;Total ram usage:        3 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_Lcd_Init
  1161 ;;		_Lcd_Out
  1162 ;;		_main
  1163 ;;		_Lcd_Out2
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text4
  1168   000942                     __ptext4:
  1169                           	callstack 0
  1170   000942                     _Lcd_Cmd:
  1171                           	callstack 29
  1172                           
  1173                           ;incstack = 0
  1174                           ;Lcd_Cmd@data stored from wreg
  1175   000942  6E03               	movwf	Lcd_Cmd@data^0,c
  1176   000944                     
  1177                           ;flexlcd.h: 176: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1178   000944  9284               	bcf	132,1,c	;volatile
  1179   000946  9484               	bcf	132,2,c	;volatile
  1180   000948                     
  1181                           ;flexlcd.h: 177: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1182   000948  6A01               	clrf	??_Lcd_Cmd^0,c
  1183   00094A  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1184   00094C  D001               	bra	u15
  1185   00094E  2A01               	incf	??_Lcd_Cmd^0,f,c
  1186   000950                     u15:
  1187   000950  0E01               	movlw	1
  1188   000952  1601               	andwf	??_Lcd_Cmd^0,f,c
  1189   000954  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1190   000956  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1191   000958  5083               	movf	131,w,c	;volatile
  1192   00095A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1193   00095C  0B7F               	andlw	-129
  1194   00095E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1195   000960  6E83               	movwf	131,c	;volatile
  1196   000962  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1197   000966  0E06               	movlw	6
  1198   000968  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1199   00096A                     u25:
  1200   00096A  90D8               	bcf	status,0,c
  1201   00096C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1202   00096E  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1203   000970  EFB5  F004         	goto	u25
  1204   000974  0E01               	movlw	1
  1205   000976  1601               	andwf	??_Lcd_Cmd^0,f,c
  1206   000978  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1207   00097A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1208   00097C  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1209   00097E  5083               	movf	131,w,c	;volatile
  1210   000980  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1211   000982  0BBF               	andlw	-65
  1212   000984  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1213   000986  6E83               	movwf	131,c	;volatile
  1214                           
  1215                           ;flexlcd.h: 178: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1216   000988  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1217   00098C  0E05               	movlw	5
  1218   00098E  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1219   000990                     u35:
  1220   000990  90D8               	bcf	status,0,c
  1221   000992  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1222   000994  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1223   000996  EFC8  F004         	goto	u35
  1224   00099A  0E01               	movlw	1
  1225   00099C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1226   00099E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1227   0009A0  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1228   0009A2  5083               	movf	131,w,c	;volatile
  1229   0009A4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1230   0009A6  0BDF               	andlw	-33
  1231   0009A8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1232   0009AA  6E83               	movwf	131,c	;volatile
  1233   0009AC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1234   0009B0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1235   0009B2  0E0F               	movlw	15
  1236   0009B4  1601               	andwf	??_Lcd_Cmd^0,f,c
  1237   0009B6  0E01               	movlw	1
  1238   0009B8  1601               	andwf	??_Lcd_Cmd^0,f,c
  1239   0009BA  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1240   0009BC  5083               	movf	131,w,c	;volatile
  1241   0009BE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1242   0009C0  0BEF               	andlw	-17
  1243   0009C2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1244   0009C4  6E83               	movwf	131,c	;volatile
  1245   0009C6                     
  1246                           ;flexlcd.h: 179: _delay(10);
  1247   0009C6  0E03               	movlw	3
  1248   0009C8                     u517:
  1249   0009C8  2EE8               	decfsz	wreg,f,c
  1250   0009CA  D7FE               	bra	u517
  1251   0009CC  F000               	nop	
  1252   0009CE                     
  1253                           ;flexlcd.h: 180: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1254   0009CE  8284               	bsf	132,1,c	;volatile
  1255   0009D0  0E03               	movlw	3
  1256   0009D2                     u527:
  1257   0009D2  2EE8               	decfsz	wreg,f,c
  1258   0009D4  D7FE               	bra	u527
  1259   0009D6  F000               	nop	
  1260   0009D8  9284               	bcf	132,1,c	;volatile
  1261                           
  1262                           ;flexlcd.h: 181: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1263   0009DA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1264   0009DE  90D8               	bcf	status,0,c
  1265   0009E0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1266   0009E2  90D8               	bcf	status,0,c
  1267   0009E4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1268   0009E6  90D8               	bcf	status,0,c
  1269   0009E8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1270   0009EA  0E01               	movlw	1
  1271   0009EC  1601               	andwf	??_Lcd_Cmd^0,f,c
  1272   0009EE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1273   0009F0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1274   0009F2  5083               	movf	131,w,c	;volatile
  1275   0009F4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1276   0009F6  0B7F               	andlw	-129
  1277   0009F8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1278   0009FA  6E83               	movwf	131,c	;volatile
  1279   0009FC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1280   000A00  90D8               	bcf	status,0,c
  1281   000A02  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1282   000A04  90D8               	bcf	status,0,c
  1283   000A06  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1284   000A08  0E01               	movlw	1
  1285   000A0A  1601               	andwf	??_Lcd_Cmd^0,f,c
  1286   000A0C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1287   000A0E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1288   000A10  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1289   000A12  5083               	movf	131,w,c	;volatile
  1290   000A14  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1291   000A16  0BBF               	andlw	-65
  1292   000A18  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1293   000A1A  6E83               	movwf	131,c	;volatile
  1294                           
  1295                           ;flexlcd.h: 182: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1296   000A1C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1297   000A20  90D8               	bcf	status,0,c
  1298   000A22  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1299   000A24  0E01               	movlw	1
  1300   000A26  1601               	andwf	??_Lcd_Cmd^0,f,c
  1301   000A28  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1302   000A2A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1303   000A2C  5083               	movf	131,w,c	;volatile
  1304   000A2E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1305   000A30  0BDF               	andlw	-33
  1306   000A32  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1307   000A34  6E83               	movwf	131,c	;volatile
  1308   000A36  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1309   000A3A  0E01               	movlw	1
  1310   000A3C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1311   000A3E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1312   000A40  5083               	movf	131,w,c	;volatile
  1313   000A42  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1314   000A44  0BEF               	andlw	-17
  1315   000A46  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1316   000A48  6E83               	movwf	131,c	;volatile
  1317   000A4A                     
  1318                           ;flexlcd.h: 183: _delay(10);
  1319   000A4A  0E03               	movlw	3
  1320   000A4C                     u537:
  1321   000A4C  2EE8               	decfsz	wreg,f,c
  1322   000A4E  D7FE               	bra	u537
  1323   000A50  F000               	nop	
  1324   000A52                     
  1325                           ;flexlcd.h: 184: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1326   000A52  8284               	bsf	132,1,c	;volatile
  1327   000A54  0E03               	movlw	3
  1328   000A56                     u547:
  1329   000A56  2EE8               	decfsz	wreg,f,c
  1330   000A58  D7FE               	bra	u547
  1331   000A5A  F000               	nop	
  1332   000A5C  9284               	bcf	132,1,c	;volatile
  1333   000A5E                     
  1334                           ;flexlcd.h: 185: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1335   000A5E  0E0F               	movlw	15
  1336   000A60  6E01               	movwf	??_Lcd_Cmd^0,c
  1337   000A62  0E48               	movlw	72
  1338   000A64                     u557:
  1339   000A64  2EE8               	decfsz	wreg,f,c
  1340   000A66  D7FE               	bra	u557
  1341   000A68  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1342   000A6A  D7FC               	bra	u557
  1343   000A6C  0012               	return		;funcret
  1344   000A6E                     __end_of_Lcd_Cmd:
  1345                           	callstack 0
  1346                           
  1347                           	psect	rparam
  1348   000000                     
  1349                           	psect	idloc
  1350                           
  1351                           ;Config register IDLOC0 @ 0x200000
  1352                           ;	unspecified, using default values
  1353   200000                     	org	2097152
  1354   200000  FF                 	db	255
  1355                           
  1356                           ;Config register IDLOC1 @ 0x200001
  1357                           ;	unspecified, using default values
  1358   200001                     	org	2097153
  1359   200001  FF                 	db	255
  1360                           
  1361                           ;Config register IDLOC2 @ 0x200002
  1362                           ;	unspecified, using default values
  1363   200002                     	org	2097154
  1364   200002  FF                 	db	255
  1365                           
  1366                           ;Config register IDLOC3 @ 0x200003
  1367                           ;	unspecified, using default values
  1368   200003                     	org	2097155
  1369   200003  FF                 	db	255
  1370                           
  1371                           ;Config register IDLOC4 @ 0x200004
  1372                           ;	unspecified, using default values
  1373   200004                     	org	2097156
  1374   200004  FF                 	db	255
  1375                           
  1376                           ;Config register IDLOC5 @ 0x200005
  1377                           ;	unspecified, using default values
  1378   200005                     	org	2097157
  1379   200005  FF                 	db	255
  1380                           
  1381                           ;Config register IDLOC6 @ 0x200006
  1382                           ;	unspecified, using default values
  1383   200006                     	org	2097158
  1384   200006  FF                 	db	255
  1385                           
  1386                           ;Config register IDLOC7 @ 0x200007
  1387                           ;	unspecified, using default values
  1388   200007                     	org	2097159
  1389   200007  FF                 	db	255
  1390                           
  1391                           	psect	config
  1392                           
  1393                           ; Padding undefined space
  1394   300000                     	org	3145728
  1395   300000  FF                 	db	255
  1396                           
  1397                           ;Config register CONFIG1H @ 0x300001
  1398                           ;	Oscillator Selection bits
  1399                           ;	OSC = HS, HS oscillator
  1400                           ;	Fail-Safe Clock Monitor Enable bit
  1401                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1402                           ;	Internal/External Oscillator Switchover bit
  1403                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1404   300001                     	org	3145729
  1405   300001  02                 	db	2
  1406                           
  1407                           ;Config register CONFIG2L @ 0x300002
  1408                           ;	Power-up Timer Enable bit
  1409                           ;	PWRT = OFF, PWRT disabled
  1410                           ;	Brown-out Reset Enable bits
  1411                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1412                           ;	Brown Out Reset Voltage bits
  1413                           ;	BORV = 3, Minimum setting
  1414   300002                     	org	3145730
  1415   300002  1F                 	db	31
  1416                           
  1417                           ;Config register CONFIG2H @ 0x300003
  1418                           ;	Watchdog Timer Enable bit
  1419                           ;	WDT = ON, WDT enabled
  1420                           ;	Watchdog Timer Postscale Select bits
  1421                           ;	WDTPS = 32768, 1:32768
  1422   300003                     	org	3145731
  1423   300003  1F                 	db	31
  1424                           
  1425                           ; Padding undefined space
  1426   300004                     	org	3145732
  1427   300004  FF                 	db	255
  1428                           
  1429                           ;Config register CONFIG3H @ 0x300005
  1430                           ;	CCP2 MUX bit
  1431                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1432                           ;	PORTB A/D Enable bit
  1433                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1434                           ;	Low-Power Timer1 Oscillator Enable bit
  1435                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1436                           ;	MCLR Pin Enable bit
  1437                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1438   300005                     	org	3145733
  1439   300005  01                 	db	1
  1440                           
  1441                           ;Config register CONFIG4L @ 0x300006
  1442                           ;	Stack Full/Underflow Reset Enable bit
  1443                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1444                           ;	Single-Supply ICSP Enable bit
  1445                           ;	LVP = ON, Single-Supply ICSP enabled
  1446                           ;	Extended Instruction Set Enable bit
  1447                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1448                           ;	Background Debugger Enable bit
  1449                           ;	DEBUG = 0x1, unprogrammed default
  1450   300006                     	org	3145734
  1451   300006  85                 	db	133
  1452                           
  1453                           ; Padding undefined space
  1454   300007                     	org	3145735
  1455   300007  FF                 	db	255
  1456                           
  1457                           ;Config register CONFIG5L @ 0x300008
  1458                           ;	Code Protection bit
  1459                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1460                           ;	Code Protection bit
  1461                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1462                           ;	Code Protection bit
  1463                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1464                           ;	Code Protection bit
  1465                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1466   300008                     	org	3145736
  1467   300008  0F                 	db	15
  1468                           
  1469                           ;Config register CONFIG5H @ 0x300009
  1470                           ;	Boot Block Code Protection bit
  1471                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1472                           ;	Data EEPROM Code Protection bit
  1473                           ;	CPD = OFF, Data EEPROM not code-protected
  1474   300009                     	org	3145737
  1475   300009  C0                 	db	192
  1476                           
  1477                           ;Config register CONFIG6L @ 0x30000A
  1478                           ;	Write Protection bit
  1479                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1480                           ;	Write Protection bit
  1481                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1482                           ;	Write Protection bit
  1483                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1484                           ;	Write Protection bit
  1485                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1486   30000A                     	org	3145738
  1487   30000A  0F                 	db	15
  1488                           
  1489                           ;Config register CONFIG6H @ 0x30000B
  1490                           ;	Configuration Register Write Protection bit
  1491                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1492                           ;	Boot Block Write Protection bit
  1493                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1494                           ;	Data EEPROM Write Protection bit
  1495                           ;	WRTD = OFF, Data EEPROM not write-protected
  1496   30000B                     	org	3145739
  1497   30000B  E0                 	db	224
  1498                           
  1499                           ;Config register CONFIG7L @ 0x30000C
  1500                           ;	Table Read Protection bit
  1501                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1502                           ;	Table Read Protection bit
  1503                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1504                           ;	Table Read Protection bit
  1505                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1506                           ;	Table Read Protection bit
  1507                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1508   30000C                     	org	3145740
  1509   30000C  0F                 	db	15
  1510                           
  1511                           ;Config register CONFIG7H @ 0x30000D
  1512                           ;	Boot Block Table Read Protection bit
  1513                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1514   30000D                     	org	3145741
  1515   30000D  40                 	db	64
  1516                           tosu	equ	0xFFF
  1517                           tosh	equ	0xFFE
  1518                           tosl	equ	0xFFD
  1519                           stkptr	equ	0xFFC
  1520                           pclatu	equ	0xFFB
  1521                           pclath	equ	0xFFA
  1522                           pcl	equ	0xFF9
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           prodh	equ	0xFF4
  1528                           prodl	equ	0xFF3
  1529                           indf0	equ	0xFEF
  1530                           postinc0	equ	0xFEE
  1531                           postdec0	equ	0xFED
  1532                           preinc0	equ	0xFEC
  1533                           plusw0	equ	0xFEB
  1534                           fsr0h	equ	0xFEA
  1535                           fsr0l	equ	0xFE9
  1536                           wreg	equ	0xFE8
  1537                           indf1	equ	0xFE7
  1538                           postinc1	equ	0xFE6
  1539                           postdec1	equ	0xFE5
  1540                           preinc1	equ	0xFE4
  1541                           plusw1	equ	0xFE3
  1542                           fsr1h	equ	0xFE2
  1543                           fsr1l	equ	0xFE1
  1544                           bsr	equ	0xFE0
  1545                           indf2	equ	0xFDF
  1546                           postinc2	equ	0xFDE
  1547                           postdec2	equ	0xFDD
  1548                           preinc2	equ	0xFDC
  1549                           plusw2	equ	0xFDB
  1550                           fsr2h	equ	0xFDA
  1551                           fsr2l	equ	0xFD9
  1552                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      14
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1680
                                              8 COMRAM     6     6      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3    1029
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      E       E       1       11.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         E      0       0      16        0.0%
BITBIGSFRhhl        2E      0       0      17        0.0%
BITBIGSFRhl         2A      0       0      18        0.0%
BITBIGSFRlhlh        5      0       0      19        0.0%
BITBIGSFRlhll        5      0       0      20        0.0%
BITBIGSFRlll         1      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 19 18:17:31 2023

                     l51 0ADE                       l52 0B2A                       l53 0B7C  
                     l82 0940                       l66 0C0C                       l85 0A6C  
                     l97 0804                       u15 0950                       u25 096A  
                     u35 0990                       u45 081C                       u70 0B2A  
                     u71 0B26                       u55 0836                       u65 085C  
                    l911 0B02                      l921 0B42                      l913 0B04  
                    l905 0AF6                      l851 0948                      l931 0B52  
                    l923 0B4A                      l915 0B06                      l907 0AFE  
                    l861 0A4A                      l853 09C6                      l941 0B6A  
                    l933 0B54                      l925 0B4C                      l917 0B08  
                    l909 0B00                      l863 0A52                      l855 09CE  
                    l943 0B70                      l935 0B64                      l927 0B4E  
                    l919 0B18                      l871 0810                      l865 0A54  
                    l857 09D0                      l849 0944                      l945 0B70  
                    l937 0B64                      l929 0B50                      l881 08A4  
                    l873 0814                      l867 0A5C                      l859 09D8  
                    l947 0B76                      l939 0B6A                      l891 092A  
                    l883 0916                      l875 0892                      l869 0A5E  
                    l949 0B76                      l893 0932                      l885 091E  
                    l877 089A                      l895 0A6E                      l887 0920  
                    l879 089C                      l897 0A86                      l889 0928  
                    l899 0ADA                      u200 0C0C                      u201 0C08  
                    u210 066A                      u211 0666                      u300 07CA  
                    u220 0686                      u301 07C6                      u221 0682  
                    u230 06C2                      u231 06BE                      u240 06FE  
                    u241 06FA                      u250 0740                      u251 073C  
                    u260 0764                      u261 0760                      u317 06A6  
                    u270 0778                      u407 0938                      u271 0774  
                    u327 06E2                      u280 0796                      u417 0A8C  
                    u281 0792                      u337 071E                      u290 07B6  
                    u507 0B5C                      u427 0A9A                      u347 07F6  
                    u291 07B2                      u517 09C8                      u437 0AA8  
                    u357 0894                      u527 09D2                      u447 0AB6  
                    u367 089E                      u537 0A4C                      u457 0AC4  
                    u377 0918                      u547 0A56                      u467 0AD2  
                    u387 0922                      u557 0A64                      u477 0AF8  
                    u397 092C                      u487 0B10                      u497 0B44  
                    wreg 000FE8                     l1101 069C                     l1111 06F0  
                   l1103 06B4                     l1121 0740                     l1113 06FE  
                   l1105 06C2                     l1131 0796                     l1123 0750  
                   l1115 0710                     l1107 06D4                     l1061 0B8E  
                   l1133 07B6                     l1125 0764                     l1117 0714  
                   l1109 06D8                     l1063 0B98                     l1071 0BD2  
                   l1135 07CA                     l1127 0778                     l1119 072C  
                   l1073 0BDC                     l1065 0BA2                     l1057 0B80  
                   l1137 07DA                     l1129 0788                     l1081 0612  
                   l1075 0BEC                     l1059 0B84                     l1139 07EC  
                   l1091 066A                     l1083 0614                     l1077 0BF0  
                   l1069 0BAC                     l1093 0670                     l1085 0652  
                   l1095 0678                     l1087 0656                     l1079 060A  
                   l1097 0686                     l1089 065C                     l1099 0698  
                   STR_1 0603                     STR_2 0605                     STR_3 0607  
                   STR_4 0601                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main 060A  
                   start 0000          __end_of_Lcd_Cmd 0A6E          __end_of_Lcd_Out 0C0E  
           ___param_bank 000000               _Lcd_Chr_CP 080E                    ?_main 0001  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    main@l 000B  
                  tablat 000FF5                    status 000FD8         __end_of_Lcd_Init 0B7E  
        __initialization 0C0E             __end_of_main 080E                   ??_main 0009  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
              ??_Lcd_Cmd 0001                ??_Lcd_Out 0007              ?_Lcd_Chr_CP 0001  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0C0E            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001               ??_Lcd_Init 0004                  _Lcd_Cmd 0942  
                _Lcd_Out 0B7E                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0C0E                  __ramtop 0600  
                __ptext0 060A                  __ptext1 0B7E                  __ptext2 080E  
                __ptext3 0A6E                  __ptext4 0942                  main@col 000D  
   end_of_initialization 0C0E            __Lmediumconst 0000             ??_Lcd_Chr_CP 0001  
              _PORTBbits 000F81                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISDbits 000F95                _TRISEbits 000F96       __end_of_Lcd_Chr_CP 0942  
    start_initialization 0C0E            Lcd_Out@buffer 0005                 ?_Lcd_Cmd 0001  
               ?_Lcd_Out 0004              __smallconst 0600                 Lcd_Out@x 0004  
               Lcd_Out@y 0007             Lcd_Init@data 0005                 _Lcd_Init 0A6E  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
         Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003                 isa$xinst 000000  
            Lcd_Out@data 0008  
