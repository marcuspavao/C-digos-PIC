

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 18 18:46:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _PORTC	set	3970
    53   000000                     _TRISC	set	3988
    54   000000                     _PORTBbits	set	3969
    55   000000                     _PORTE	set	3972
    56   000000                     _PORTD	set	3971
    57   000000                     _TRISE	set	3990
    58   000000                     _TRISD	set	3989
    59   000000                     _PORTB	set	3969
    60   000000                     _PORTDbits	set	3971
    61   000000                     _TRISDbits	set	3989
    62   000000                     _ADCON1	set	4033
    63   000000                     _ADCON0	set	4034
    64   000000                     _TRISEbits	set	3990
    65   000000                     _LATB	set	3978
    66   000000                     _TRISB	set	3987
    67   000000                     _PORTEbits	set	3972
    68   000000                     _INTCON2bits	set	4081
    69   000000                     _LATE	set	3981
    70   000000                     _LATD	set	3980
    71   000000                     _LATC	set	3979
    72                           
    73                           	psect	smallconst
    74   000600                     __psmallconst:
    75                           	callstack 0
    76   000600  00                 	db	0
    77   000601                     STR_1:
    78   000601  31                 	db	49	;'1'
    79   000602  00                 	db	0
    80   000603                     STR_2:
    81   000603  32                 	db	50	;'2'
    82   000604  00                 	db	0
    83   000605                     STR_3:
    84   000605  33                 	db	51	;'3'
    85   000606  00                 	db	0
    86   000607  00                 	db	0	; dummy byte at the end
    87   000000                     
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91   000BD6                     __pcinit:
    92                           	callstack 0
    93   000BD6                     start_initialization:
    94                           	callstack 0
    95   000BD6                     __initialization:
    96                           	callstack 0
    97   000BD6                     end_of_initialization:
    98                           	callstack 0
    99   000BD6                     __end_of__initialization:
   100                           	callstack 0
   101   000BD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   102   000BD8  6EF8               	movwf	tblptru,c
   103   000BDA  0100               	movlb	0
   104   000BDC  EF04  F003         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107   000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109   000001                     ??_Lcd_Cmd:
   110   000001                     ??_Lcd_Chr_CP:
   111   000001                     
   112                           ; 1 bytes @ 0x0
   113   000001                     	ds	2
   114   000003                     Lcd_Chr_CP@data:
   115                           	callstack 0
   116   000003                     Lcd_Cmd@data:
   117                           	callstack 0
   118                           
   119                           ; 1 bytes @ 0x2
   120   000003                     	ds	1
   121   000004                     ??_Lcd_Init:
   122   000004                     Lcd_Out@x:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x3
   126   000004                     	ds	1
   127   000005                     Lcd_Init@data:
   128                           	callstack 0
   129   000005                     Lcd_Out@buffer:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x4
   133   000005                     	ds	2
   134   000007                     Lcd_Out@y:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x6
   138   000007                     	ds	1
   139   000008                     Lcd_Out@data:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x7
   143   000008                     	ds	1
   144   000009                     ??_main:
   145                           
   146                           ; 1 bytes @ 0x8
   147   000009                     	ds	2
   148   00000B                     main@l:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0xA
   152   00000B                     	ds	2
   153   00000D                     main@col:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0xC
   157   00000D                     	ds	2
   158                           
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 21 in file "mainLCD.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;  col             2   12[COMRAM] int 
   169 ;;  l               2   10[COMRAM] int 
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   179 ;;      Params:         0       0       0       0       0       0       0
   180 ;;      Locals:         4       0       0       0       0       0       0
   181 ;;      Temps:          2       0       0       0       0       0       0
   182 ;;      Totals:         6       0       0       0       0       0       0
   183 ;;Total ram usage:        6 bytes
   184 ;; Hardware stack levels required when called: 2
   185 ;; This function calls:
   186 ;;		_Lcd_Cmd
   187 ;;		_Lcd_Init
   188 ;;		_Lcd_Out
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195   000608                     __ptext0:
   196                           	callstack 0
   197   000608                     _main:
   198                           	callstack 29
   199   000608                     
   200                           ;mainLCD.c: 23: ADCON0 = 0b00000000;
   201   000608  0E00               	movlw	0
   202   00060A  6EC2               	movwf	194,c	;volatile
   203                           
   204                           ;mainLCD.c: 24: ADCON1 = 0b00001111;
   205   00060C  0E0F               	movlw	15
   206   00060E  6EC1               	movwf	193,c	;volatile
   207   000610                     
   208                           ;mainLCD.c: 28: INTCON2bits.RBPU = 1;
   209   000610  8EF1               	bsf	241,7,c	;volatile
   210                           
   211                           ;mainLCD.c: 30: TRISB = 0b00011111;
   212   000612  0E1F               	movlw	31
   213   000614  6E93               	movwf	147,c	;volatile
   214                           
   215                           ;mainLCD.c: 31: TRISC = 0b00000000;
   216   000616  0E00               	movlw	0
   217   000618  6E94               	movwf	148,c	;volatile
   218                           
   219                           ;mainLCD.c: 32: TRISD = 0b00000000;
   220   00061A  0E00               	movlw	0
   221   00061C  6E95               	movwf	149,c	;volatile
   222                           
   223                           ;mainLCD.c: 33: TRISE = 0b00000000;
   224   00061E  0E00               	movlw	0
   225   000620  6E96               	movwf	150,c	;volatile
   226                           
   227                           ;mainLCD.c: 35: PORTB = 0;
   228   000622  0E00               	movlw	0
   229   000624  6E81               	movwf	129,c	;volatile
   230                           
   231                           ;mainLCD.c: 36: LATB = 0;
   232   000626  0E00               	movlw	0
   233   000628  6E8A               	movwf	138,c	;volatile
   234                           
   235                           ;mainLCD.c: 37: PORTC = 0;
   236   00062A  0E00               	movlw	0
   237   00062C  6E82               	movwf	130,c	;volatile
   238                           
   239                           ;mainLCD.c: 38: LATC = 0;
   240   00062E  0E00               	movlw	0
   241   000630  6E8B               	movwf	139,c	;volatile
   242                           
   243                           ;mainLCD.c: 39: PORTD = 0;
   244   000632  0E00               	movlw	0
   245   000634  6E83               	movwf	131,c	;volatile
   246                           
   247                           ;mainLCD.c: 40: LATD = 0;
   248   000636  0E00               	movlw	0
   249   000638  6E8C               	movwf	140,c	;volatile
   250                           
   251                           ;mainLCD.c: 41: PORTE = 0;
   252   00063A  0E00               	movlw	0
   253   00063C  6E84               	movwf	132,c	;volatile
   254                           
   255                           ;mainLCD.c: 42: LATE = 0;
   256   00063E  0E00               	movlw	0
   257   000640  6E8D               	movwf	141,c	;volatile
   258                           
   259                           ;mainLCD.c: 43: int col, l;;mainLCD.c: 44: col = 0;
   260   000642  0E00               	movlw	0
   261   000644  6E0E               	movwf	(main@col+1)^0,c
   262   000646  0E00               	movlw	0
   263   000648  6E0D               	movwf	main@col^0,c
   264                           
   265                           ;mainLCD.c: 45: l = 1;
   266   00064A  0E00               	movlw	0
   267   00064C  6E0C               	movwf	(main@l+1)^0,c
   268   00064E  0E01               	movlw	1
   269   000650  6E0B               	movwf	main@l^0,c
   270   000652                     
   271                           ;mainLCD.c: 46: Lcd_Init();
   272   000652  EC1B  F005         	call	_Lcd_Init	;wreg free
   273   000656                     
   274                           ;mainLCD.c: 47: Lcd_Cmd(12);
   275   000656  0E0C               	movlw	12
   276   000658  EC85  F004         	call	_Lcd_Cmd
   277   00065C                     l1078:
   278                           
   279                           ;mainLCD.c: 51: {;mainLCD.c: 53: if(PORTBbits.RB3 == 0){
   280   00065C  B681               	btfsc	129,3,c	;volatile
   281   00065E  EF33  F003         	goto	u191
   282   000662  EF35  F003         	goto	u190
   283   000666                     u191:
   284   000666  EF3C  F003         	goto	l1084
   285   00066A                     u190:
   286   00066A                     
   287                           ;mainLCD.c: 54: Lcd_Cmd(1);
   288   00066A  0E01               	movlw	1
   289   00066C  EC85  F004         	call	_Lcd_Cmd
   290   000670                     
   291                           ;mainLCD.c: 55: col = 0;
   292   000670  0E00               	movlw	0
   293   000672  6E0E               	movwf	(main@col+1)^0,c
   294   000674  0E00               	movlw	0
   295   000676  6E0D               	movwf	main@col^0,c
   296   000678                     l1084:
   297                           
   298                           ;mainLCD.c: 56: };mainLCD.c: 57: if(PORTBbits.RB0 == 0){
   299   000678  B081               	btfsc	129,0,c	;volatile
   300   00067A  EF41  F003         	goto	u201
   301   00067E  EF43  F003         	goto	u200
   302   000682                     u201:
   303   000682  EF5E  F003         	goto	l1092
   304   000686                     u200:
   305   000686                     
   306                           ;mainLCD.c: 58: Lcd_Out(l, col, "1");
   307   000686  C00D  F004         	movff	main@col,Lcd_Out@x
   308   00068A  0E01               	movlw	low STR_1
   309   00068C  6E05               	movwf	Lcd_Out@buffer^0,c
   310   00068E  0E06               	movlw	high STR_1
   311   000690  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   312   000692  500B               	movf	main@l^0,w,c
   313   000694  ECA3  F005         	call	_Lcd_Out
   314   000698                     
   315                           ;mainLCD.c: 59: col = col + 1;
   316   000698  0E01               	movlw	1
   317   00069A  240D               	addwf	main@col^0,w,c
   318   00069C  6E0D               	movwf	main@col^0,c
   319   00069E  0E00               	movlw	0
   320   0006A0  200E               	addwfc	(main@col+1)^0,w,c
   321   0006A2  6E0E               	movwf	(main@col+1)^0,c
   322   0006A4                     
   323                           ;mainLCD.c: 60: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   324   0006A4  0E02               	movlw	2
   325   0006A6  6E0A               	movwf	(??_main+1)^0,c
   326   0006A8  0E86               	movlw	134
   327   0006AA  6E09               	movwf	??_main^0,c
   328   0006AC  0EDB               	movlw	219
   329   0006AE                     u277:
   330   0006AE  0004               	clrwdt	
   331   0006B0  2EE8               	decfsz	wreg,f,c
   332   0006B2  D7FD               	bra	u277
   333   0006B4  2E09               	decfsz	??_main^0,f,c
   334   0006B6  D7FB               	bra	u277
   335   0006B8  2E0A               	decfsz	(??_main+1)^0,f,c
   336   0006BA  D7F9               	bra	u277
   337   0006BC                     l1092:
   338                           
   339                           ;mainLCD.c: 61: };mainLCD.c: 62: if(PORTBbits.RB1 == 0){
   340   0006BC  B281               	btfsc	129,1,c	;volatile
   341   0006BE  EF63  F003         	goto	u211
   342   0006C2  EF65  F003         	goto	u210
   343   0006C6                     u211:
   344   0006C6  EF80  F003         	goto	l1100
   345   0006CA                     u210:
   346   0006CA                     
   347                           ;mainLCD.c: 63: Lcd_Out(l, col, "2");
   348   0006CA  C00D  F004         	movff	main@col,Lcd_Out@x
   349   0006CE  0E03               	movlw	low STR_2
   350   0006D0  6E05               	movwf	Lcd_Out@buffer^0,c
   351   0006D2  0E06               	movlw	high STR_2
   352   0006D4  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   353   0006D6  500B               	movf	main@l^0,w,c
   354   0006D8  ECA3  F005         	call	_Lcd_Out
   355   0006DC                     
   356                           ;mainLCD.c: 64: col = col + 1;
   357   0006DC  0E01               	movlw	1
   358   0006DE  240D               	addwf	main@col^0,w,c
   359   0006E0  6E0D               	movwf	main@col^0,c
   360   0006E2  0E00               	movlw	0
   361   0006E4  200E               	addwfc	(main@col+1)^0,w,c
   362   0006E6  6E0E               	movwf	(main@col+1)^0,c
   363   0006E8                     
   364                           ;mainLCD.c: 65: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   365   0006E8  0E02               	movlw	2
   366   0006EA  6E0A               	movwf	(??_main+1)^0,c
   367   0006EC  0E86               	movlw	134
   368   0006EE  6E09               	movwf	??_main^0,c
   369   0006F0  0EDB               	movlw	219
   370   0006F2                     u287:
   371   0006F2  0004               	clrwdt	
   372   0006F4  2EE8               	decfsz	wreg,f,c
   373   0006F6  D7FD               	bra	u287
   374   0006F8  2E09               	decfsz	??_main^0,f,c
   375   0006FA  D7FB               	bra	u287
   376   0006FC  2E0A               	decfsz	(??_main+1)^0,f,c
   377   0006FE  D7F9               	bra	u287
   378   000700                     l1100:
   379                           
   380                           ;mainLCD.c: 66: };mainLCD.c: 67: if(PORTBbits.RB2 == 0){
   381   000700  B481               	btfsc	129,2,c	;volatile
   382   000702  EF85  F003         	goto	u221
   383   000706  EF87  F003         	goto	u220
   384   00070A                     u221:
   385   00070A  EFA2  F003         	goto	l1108
   386   00070E                     u220:
   387   00070E                     
   388                           ;mainLCD.c: 68: Lcd_Out(l, col, "3");
   389   00070E  C00D  F004         	movff	main@col,Lcd_Out@x
   390   000712  0E05               	movlw	low STR_3
   391   000714  6E05               	movwf	Lcd_Out@buffer^0,c
   392   000716  0E06               	movlw	high STR_3
   393   000718  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   394   00071A  500B               	movf	main@l^0,w,c
   395   00071C  ECA3  F005         	call	_Lcd_Out
   396   000720                     
   397                           ;mainLCD.c: 69: col = col + 1;
   398   000720  0E01               	movlw	1
   399   000722  240D               	addwf	main@col^0,w,c
   400   000724  6E0D               	movwf	main@col^0,c
   401   000726  0E00               	movlw	0
   402   000728  200E               	addwfc	(main@col+1)^0,w,c
   403   00072A  6E0E               	movwf	(main@col+1)^0,c
   404   00072C                     
   405                           ;mainLCD.c: 70: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   406   00072C  0E02               	movlw	2
   407   00072E  6E0A               	movwf	(??_main+1)^0,c
   408   000730  0E86               	movlw	134
   409   000732  6E09               	movwf	??_main^0,c
   410   000734  0EDB               	movlw	219
   411   000736                     u297:
   412   000736  0004               	clrwdt	
   413   000738  2EE8               	decfsz	wreg,f,c
   414   00073A  D7FD               	bra	u297
   415   00073C  2E09               	decfsz	??_main^0,f,c
   416   00073E  D7FB               	bra	u297
   417   000740  2E0A               	decfsz	(??_main+1)^0,f,c
   418   000742  D7F9               	bra	u297
   419   000744                     l1108:
   420                           
   421                           ;mainLCD.c: 71: };mainLCD.c: 73: if(col == 16){
   422   000744  0E10               	movlw	16
   423   000746  180D               	xorwf	main@col^0,w,c
   424   000748  100E               	iorwf	(main@col+1)^0,w,c
   425   00074A  A4D8               	btfss	status,2,c
   426   00074C  EFAA  F003         	goto	u231
   427   000750  EFAC  F003         	goto	u230
   428   000754                     u231:
   429   000754  EFC0  F003         	goto	l1114
   430   000758                     u230:
   431   000758                     
   432                           ;mainLCD.c: 74: l = 2;
   433   000758  0E00               	movlw	0
   434   00075A  6E0C               	movwf	(main@l+1)^0,c
   435   00075C  0E02               	movlw	2
   436   00075E  6E0B               	movwf	main@l^0,c
   437                           
   438                           ;mainLCD.c: 75: col = 0;
   439   000760  0E00               	movlw	0
   440   000762  6E0E               	movwf	(main@col+1)^0,c
   441   000764  0E00               	movlw	0
   442   000766  6E0D               	movwf	main@col^0,c
   443   000768                     
   444                           ;mainLCD.c: 76: _delaywdt((unsigned long)((200)*(8000000/4000.0)));
   445   000768  0E02               	movlw	2
   446   00076A  6E0A               	movwf	(??_main+1)^0,c
   447   00076C  0E86               	movlw	134
   448   00076E  6E09               	movwf	??_main^0,c
   449   000770  0EDB               	movlw	219
   450   000772                     u307:
   451   000772  0004               	clrwdt	
   452   000774  2EE8               	decfsz	wreg,f,c
   453   000776  D7FD               	bra	u307
   454   000778  2E09               	decfsz	??_main^0,f,c
   455   00077A  D7FB               	bra	u307
   456   00077C  2E0A               	decfsz	(??_main+1)^0,f,c
   457   00077E  D7F9               	bra	u307
   458   000780                     l1114:
   459                           
   460                           ;mainLCD.c: 77: };mainLCD.c: 79: if(col == 16 && l == 2){
   461   000780  0E10               	movlw	16
   462   000782  180D               	xorwf	main@col^0,w,c
   463   000784  100E               	iorwf	(main@col+1)^0,w,c
   464   000786  A4D8               	btfss	status,2,c
   465   000788  EFC8  F003         	goto	u241
   466   00078C  EFCA  F003         	goto	u240
   467   000790                     u241:
   468   000790  EFDC  F003         	goto	l1120
   469   000794                     u240:
   470   000794  0E02               	movlw	2
   471   000796  180B               	xorwf	main@l^0,w,c
   472   000798  100C               	iorwf	(main@l+1)^0,w,c
   473   00079A  A4D8               	btfss	status,2,c
   474   00079C  EFD2  F003         	goto	u251
   475   0007A0  EFD4  F003         	goto	u250
   476   0007A4                     u251:
   477   0007A4  EFDC  F003         	goto	l1120
   478   0007A8                     u250:
   479   0007A8                     
   480                           ;mainLCD.c: 80: col = 0; l = 1;
   481   0007A8  0E00               	movlw	0
   482   0007AA  6E0E               	movwf	(main@col+1)^0,c
   483   0007AC  0E00               	movlw	0
   484   0007AE  6E0D               	movwf	main@col^0,c
   485   0007B0  0E00               	movlw	0
   486   0007B2  6E0C               	movwf	(main@l+1)^0,c
   487   0007B4  0E01               	movlw	1
   488   0007B6  6E0B               	movwf	main@l^0,c
   489   0007B8                     l1120:
   490                           
   491                           ;mainLCD.c: 81: };mainLCD.c: 83: if(PORTBbits.RB4 == 0){
   492   0007B8  B881               	btfsc	129,4,c	;volatile
   493   0007BA  EFE1  F003         	goto	u261
   494   0007BE  EFE3  F003         	goto	u260
   495   0007C2                     u261:
   496   0007C2  EFE6  F003         	goto	l97
   497   0007C6                     u260:
   498   0007C6                     
   499                           ;mainLCD.c: 84: Lcd_Cmd(24);
   500   0007C6  0E18               	movlw	24
   501   0007C8  EC85  F004         	call	_Lcd_Cmd
   502   0007CC                     l97:
   503   0007CC  0004               	clrwdt		;# 
   504   0007CE  EF2E  F003         	goto	l1078
   505   0007D2  EF00  F000         	goto	start
   506   0007D6                     __end_of_main:
   507                           	callstack 0
   508                           
   509 ;; *************** function _Lcd_Out *****************
   510 ;; Defined at:
   511 ;;		line 119 in file "flexlcd.h"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  y               1    wreg     unsigned char 
   514 ;;  x               1    3[COMRAM] unsigned char 
   515 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
   516 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  y               1    6[COMRAM] unsigned char 
   519 ;;  data            1    7[COMRAM] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   529 ;;      Params:         3       0       0       0       0       0       0
   530 ;;      Locals:         2       0       0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0       0       0
   532 ;;      Totals:         5       0       0       0       0       0       0
   533 ;;Total ram usage:        5 bytes
   534 ;; Hardware stack levels used: 1
   535 ;; Hardware stack levels required when called: 1
   536 ;; This function calls:
   537 ;;		_Lcd_Chr_CP
   538 ;;		_Lcd_Cmd
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text1
   545   000B46                     __ptext1:
   546                           	callstack 0
   547   000B46                     _Lcd_Out:
   548                           	callstack 29
   549                           
   550                           ;incstack = 0
   551                           ;Lcd_Out@y stored from wreg
   552   000B46  6E07               	movwf	Lcd_Out@y^0,c
   553   000B48                     
   554                           ;flexlcd.h: 121: unsigned char data;;flexlcd.h: 122: switch (y)
   555   000B48  EFBA  F005         	goto	l1060
   556   000B4C                     l1050:
   557   000B4C  5004               	movf	Lcd_Out@x^0,w,c
   558   000B4E  0F80               	addlw	128
   559   000B50  6E08               	movwf	Lcd_Out@data^0,c
   560   000B52  EFCD  F005         	goto	l1062
   561   000B56                     l1052:
   562   000B56  5004               	movf	Lcd_Out@x^0,w,c
   563   000B58  0FC0               	addlw	192
   564   000B5A  6E08               	movwf	Lcd_Out@data^0,c
   565   000B5C  EFCD  F005         	goto	l1062
   566   000B60                     l1054:
   567   000B60  5004               	movf	Lcd_Out@x^0,w,c
   568   000B62  0F94               	addlw	148
   569   000B64  6E08               	movwf	Lcd_Out@data^0,c
   570   000B66  EFCD  F005         	goto	l1062
   571   000B6A                     l1056:
   572   000B6A  5004               	movf	Lcd_Out@x^0,w,c
   573   000B6C  0FD4               	addlw	212
   574   000B6E  6E08               	movwf	Lcd_Out@data^0,c
   575   000B70  EFCD  F005         	goto	l1062
   576   000B74                     l1060:
   577   000B74  5007               	movf	Lcd_Out@y^0,w,c
   578                           
   579                           ; Switch size 1, requested type "simple"
   580                           ; Number of cases is 4, Range of values is 1 to 4
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte           13     7 (average)
   584                           ;	Chosen strategy is simple_byte
   585   000B76  0A01               	xorlw	1	; case 1
   586   000B78  B4D8               	btfsc	status,2,c
   587   000B7A  EFA6  F005         	goto	l1050
   588   000B7E  0A03               	xorlw	3	; case 2
   589   000B80  B4D8               	btfsc	status,2,c
   590   000B82  EFAB  F005         	goto	l1052
   591   000B86  0A01               	xorlw	1	; case 3
   592   000B88  B4D8               	btfsc	status,2,c
   593   000B8A  EFB0  F005         	goto	l1054
   594   000B8E  0A07               	xorlw	7	; case 4
   595   000B90  B4D8               	btfsc	status,2,c
   596   000B92  EFB5  F005         	goto	l1056
   597   000B96  EFCD  F005         	goto	l1062
   598   000B9A                     l1062:
   599                           
   600                           ;flexlcd.h: 130: Lcd_Cmd(data);
   601   000B9A  5008               	movf	Lcd_Out@data^0,w,c
   602   000B9C  EC85  F004         	call	_Lcd_Cmd
   603                           
   604                           ;flexlcd.h: 131: while(*buffer)
   605   000BA0  EFDC  F005         	goto	l1068
   606   000BA4                     l1064:
   607                           
   608                           ;flexlcd.h: 132: {;flexlcd.h: 133: Lcd_Chr_CP(*buffer);
   609   000BA4  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   610   000BA8  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   611   000BAC                     	if	0	;tblptru may be non-zero
   612   000BAC                     	endif
   613   000BAC                     	if	0	;tblptru may be non-zero
   614   000BAC                     	endif
   615   000BAC  0008               	tblrd		*
   616   000BAE  50F5               	movf	tablat,w,c
   617   000BB0  ECEB  F003         	call	_Lcd_Chr_CP
   618   000BB4                     
   619                           ;flexlcd.h: 134: buffer++;
   620   000BB4  4A05               	infsnz	Lcd_Out@buffer^0,f,c
   621   000BB6  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
   622   000BB8                     l1068:
   623   000BB8  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   624   000BBC  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   625   000BC0                     	if	0	;tblptru may be non-zero
   626   000BC0                     	endif
   627   000BC0                     	if	0	;tblptru may be non-zero
   628   000BC0                     	endif
   629   000BC0  0008               	tblrd		*
   630   000BC2  50F5               	movf	tablat,w,c
   631   000BC4  0900               	iorlw	0
   632   000BC6  A4D8               	btfss	status,2,c
   633   000BC8  EFE8  F005         	goto	u181
   634   000BCC  EFEA  F005         	goto	u180
   635   000BD0                     u181:
   636   000BD0  EFD2  F005         	goto	l1064
   637   000BD4                     u180:
   638   000BD4  0012               	return		;funcret
   639   000BD6                     __end_of_Lcd_Out:
   640                           	callstack 0
   641                           
   642 ;; *************** function _Lcd_Chr_CP *****************
   643 ;; Defined at:
   644 ;;		line 161 in file "flexlcd.h"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  data            1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  data            1    2[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   658 ;;      Params:         0       0       0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0
   660 ;;      Temps:          2       0       0       0       0       0       0
   661 ;;      Totals:         3       0       0       0       0       0       0
   662 ;;Total ram usage:        3 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_Lcd_Out
   668 ;;		_Lcd_Out2
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text2
   673   0007D6                     __ptext2:
   674                           	callstack 0
   675   0007D6                     _Lcd_Chr_CP:
   676                           	callstack 29
   677                           
   678                           ;incstack = 0
   679                           ;Lcd_Chr_CP@data stored from wreg
   680   0007D6  6E03               	movwf	Lcd_Chr_CP@data^0,c
   681   0007D8                     
   682                           ;flexlcd.h: 162: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
   683   0007D8  9284               	bcf	132,1,c	;volatile
   684   0007DA  8484               	bsf	132,2,c	;volatile
   685   0007DC                     
   686                           ;flexlcd.h: 163: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   687   0007DC  6A01               	clrf	??_Lcd_Chr_CP^0,c
   688   0007DE  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
   689   0007E0  D001               	bra	u45
   690   0007E2  2A01               	incf	??_Lcd_Chr_CP^0,f,c
   691   0007E4                     u45:
   692   0007E4  0E01               	movlw	1
   693   0007E6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   694   0007E8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   695   0007EA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   696   0007EC  5083               	movf	131,w,c	;volatile
   697   0007EE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   698   0007F0  0B7F               	andlw	-129
   699   0007F2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   700   0007F4  6E83               	movwf	131,c	;volatile
   701   0007F6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   702   0007FA  0E06               	movlw	6
   703   0007FC  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   704   0007FE                     u55:
   705   0007FE  90D8               	bcf	status,0,c
   706   000800  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   707   000802  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   708   000804  EFFF  F003         	goto	u55
   709   000808  0E01               	movlw	1
   710   00080A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   711   00080C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   712   00080E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   713   000810  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   714   000812  5083               	movf	131,w,c	;volatile
   715   000814  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   716   000816  0BBF               	andlw	-65
   717   000818  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   718   00081A  6E83               	movwf	131,c	;volatile
   719                           
   720                           ;flexlcd.h: 164: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
   721   00081C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   722   000820  0E05               	movlw	5
   723   000822  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   724   000824                     u65:
   725   000824  90D8               	bcf	status,0,c
   726   000826  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   727   000828  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   728   00082A  EF12  F004         	goto	u65
   729   00082E  0E01               	movlw	1
   730   000830  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   731   000832  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   732   000834  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   733   000836  5083               	movf	131,w,c	;volatile
   734   000838  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   735   00083A  0BDF               	andlw	-33
   736   00083C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   737   00083E  6E83               	movwf	131,c	;volatile
   738   000840  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   739   000844  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   740   000846  0E0F               	movlw	15
   741   000848  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   742   00084A  0E01               	movlw	1
   743   00084C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   744   00084E  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   745   000850  5083               	movf	131,w,c	;volatile
   746   000852  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   747   000854  0BEF               	andlw	-17
   748   000856  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   749   000858  6E83               	movwf	131,c	;volatile
   750   00085A                     
   751                           ;flexlcd.h: 165: _delay(10);
   752   00085A  0E03               	movlw	3
   753   00085C                     u317:
   754   00085C  2EE8               	decfsz	wreg,f,c
   755   00085E  D7FE               	bra	u317
   756   000860  F000               	nop	
   757   000862                     
   758                           ;flexlcd.h: 166: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   759   000862  8284               	bsf	132,1,c	;volatile
   760   000864  0E03               	movlw	3
   761   000866                     u327:
   762   000866  2EE8               	decfsz	wreg,f,c
   763   000868  D7FE               	bra	u327
   764   00086A  F000               	nop	
   765   00086C  9284               	bcf	132,1,c	;volatile
   766                           
   767                           ;flexlcd.h: 167: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
   768   00086E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   769   000872  90D8               	bcf	status,0,c
   770   000874  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   771   000876  90D8               	bcf	status,0,c
   772   000878  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   773   00087A  90D8               	bcf	status,0,c
   774   00087C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   775   00087E  0E01               	movlw	1
   776   000880  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   777   000882  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   778   000884  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   779   000886  5083               	movf	131,w,c	;volatile
   780   000888  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   781   00088A  0B7F               	andlw	-129
   782   00088C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   783   00088E  6E83               	movwf	131,c	;volatile
   784   000890  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   785   000894  90D8               	bcf	status,0,c
   786   000896  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   787   000898  90D8               	bcf	status,0,c
   788   00089A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   789   00089C  0E01               	movlw	1
   790   00089E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   791   0008A0  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   792   0008A2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   793   0008A4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   794   0008A6  5083               	movf	131,w,c	;volatile
   795   0008A8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   796   0008AA  0BBF               	andlw	-65
   797   0008AC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   798   0008AE  6E83               	movwf	131,c	;volatile
   799                           
   800                           ;flexlcd.h: 168: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
   801   0008B0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   802   0008B4  90D8               	bcf	status,0,c
   803   0008B6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   804   0008B8  0E01               	movlw	1
   805   0008BA  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   806   0008BC  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   807   0008BE  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   808   0008C0  5083               	movf	131,w,c	;volatile
   809   0008C2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   810   0008C4  0BDF               	andlw	-33
   811   0008C6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   812   0008C8  6E83               	movwf	131,c	;volatile
   813   0008CA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   814   0008CE  0E01               	movlw	1
   815   0008D0  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   816   0008D2  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   817   0008D4  5083               	movf	131,w,c	;volatile
   818   0008D6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   819   0008D8  0BEF               	andlw	-17
   820   0008DA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   821   0008DC  6E83               	movwf	131,c	;volatile
   822   0008DE                     
   823                           ;flexlcd.h: 169: _delay(10);
   824   0008DE  0E03               	movlw	3
   825   0008E0                     u337:
   826   0008E0  2EE8               	decfsz	wreg,f,c
   827   0008E2  D7FE               	bra	u337
   828   0008E4  F000               	nop	
   829   0008E6                     
   830                           ;flexlcd.h: 170: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   831   0008E6  8284               	bsf	132,1,c	;volatile
   832   0008E8  0E03               	movlw	3
   833   0008EA                     u347:
   834   0008EA  2EE8               	decfsz	wreg,f,c
   835   0008EC  D7FE               	bra	u347
   836   0008EE  F000               	nop	
   837   0008F0  9284               	bcf	132,1,c	;volatile
   838   0008F2                     
   839                           ;flexlcd.h: 171: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
   840   0008F2  0E03               	movlw	3
   841   0008F4                     u357:
   842   0008F4  2EE8               	decfsz	wreg,f,c
   843   0008F6  D7FE               	bra	u357
   844   0008F8  F000               	nop	
   845   0008FA  0E0F               	movlw	15
   846   0008FC  6E01               	movwf	??_Lcd_Chr_CP^0,c
   847   0008FE  0E48               	movlw	72
   848   000900                     u367:
   849   000900  2EE8               	decfsz	wreg,f,c
   850   000902  D7FE               	bra	u367
   851   000904  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
   852   000906  D7FC               	bra	u367
   853   000908  0012               	return		;funcret
   854   00090A                     __end_of_Lcd_Chr_CP:
   855                           	callstack 0
   856                           
   857 ;; *************** function _Lcd_Init *****************
   858 ;; Defined at:
   859 ;;		line 77 in file "flexlcd.h"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  data            1    4[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         0       0       0       0       0       0       0
   874 ;;      Locals:         1       0       0       0       0       0       0
   875 ;;      Temps:          1       0       0       0       0       0       0
   876 ;;      Totals:         2       0       0       0       0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 1
   880 ;; This function calls:
   881 ;;		_Lcd_Cmd
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text3
   888   000A36                     __ptext3:
   889                           	callstack 0
   890   000A36                     _Lcd_Init:
   891                           	callstack 29
   892   000A36                     
   893                           ;flexlcd.h: 78: unsigned char data;;flexlcd.h: 79: TRISDbits.TRISD7 = 0;
   894   000A36  9E95               	bcf	149,7,c	;volatile
   895                           
   896                           ;flexlcd.h: 80: TRISDbits.TRISD6 = 0;
   897   000A38  9C95               	bcf	149,6,c	;volatile
   898                           
   899                           ;flexlcd.h: 81: TRISDbits.TRISD5 = 0;
   900   000A3A  9A95               	bcf	149,5,c	;volatile
   901                           
   902                           ;flexlcd.h: 82: TRISDbits.TRISD4 = 0;
   903   000A3C  9895               	bcf	149,4,c	;volatile
   904                           
   905                           ;flexlcd.h: 83: TRISEbits.TRISE2 = 0;
   906   000A3E  9496               	bcf	150,2,c	;volatile
   907                           
   908                           ;flexlcd.h: 84: TRISEbits.TRISE1 = 0;
   909   000A40  9296               	bcf	150,1,c	;volatile
   910                           
   911                           ;flexlcd.h: 85: PORTDbits.RD7 = 0;
   912   000A42  9E83               	bcf	131,7,c	;volatile
   913                           
   914                           ;flexlcd.h: 86: PORTDbits.RD6 = 0;
   915   000A44  9C83               	bcf	131,6,c	;volatile
   916                           
   917                           ;flexlcd.h: 87: PORTDbits.RD5 = 0;
   918   000A46  9A83               	bcf	131,5,c	;volatile
   919                           
   920                           ;flexlcd.h: 88: PORTDbits.RD4 = 0;
   921   000A48  9883               	bcf	131,4,c	;volatile
   922                           
   923                           ;flexlcd.h: 89: PORTEbits.RE1 = 0;
   924   000A4A  9284               	bcf	132,1,c	;volatile
   925                           
   926                           ;flexlcd.h: 90: PORTEbits.RE2 = 0;
   927   000A4C  9484               	bcf	132,2,c	;volatile
   928   000A4E                     
   929                           ;flexlcd.h: 91: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   930   000A4E  0E0F               	movlw	15
   931   000A50  6E04               	movwf	??_Lcd_Init^0,c
   932   000A52  0E48               	movlw	72
   933   000A54                     u377:
   934   000A54  2EE8               	decfsz	wreg,f,c
   935   000A56  D7FE               	bra	u377
   936   000A58  2E04               	decfsz	??_Lcd_Init^0,f,c
   937   000A5A  D7FC               	bra	u377
   938                           
   939                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   940   000A5C  0E0F               	movlw	15
   941   000A5E  6E04               	movwf	??_Lcd_Init^0,c
   942   000A60  0E48               	movlw	72
   943   000A62                     u387:
   944   000A62  2EE8               	decfsz	wreg,f,c
   945   000A64  D7FE               	bra	u387
   946   000A66  2E04               	decfsz	??_Lcd_Init^0,f,c
   947   000A68  D7FC               	bra	u387
   948                           
   949                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   950   000A6A  0E0F               	movlw	15
   951   000A6C  6E04               	movwf	??_Lcd_Init^0,c
   952   000A6E  0E48               	movlw	72
   953   000A70                     u397:
   954   000A70  2EE8               	decfsz	wreg,f,c
   955   000A72  D7FE               	bra	u397
   956   000A74  2E04               	decfsz	??_Lcd_Init^0,f,c
   957   000A76  D7FC               	bra	u397
   958                           
   959                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   960   000A78  0E0F               	movlw	15
   961   000A7A  6E04               	movwf	??_Lcd_Init^0,c
   962   000A7C  0E48               	movlw	72
   963   000A7E                     u407:
   964   000A7E  2EE8               	decfsz	wreg,f,c
   965   000A80  D7FE               	bra	u407
   966   000A82  2E04               	decfsz	??_Lcd_Init^0,f,c
   967   000A84  D7FC               	bra	u407
   968                           
   969                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   970   000A86  0E0F               	movlw	15
   971   000A88  6E04               	movwf	??_Lcd_Init^0,c
   972   000A8A  0E48               	movlw	72
   973   000A8C                     u417:
   974   000A8C  2EE8               	decfsz	wreg,f,c
   975   000A8E  D7FE               	bra	u417
   976   000A90  2E04               	decfsz	??_Lcd_Init^0,f,c
   977   000A92  D7FC               	bra	u417
   978                           
   979                           ;flexlcd.h: 96: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   980   000A94  0E0F               	movlw	15
   981   000A96  6E04               	movwf	??_Lcd_Init^0,c
   982   000A98  0E48               	movlw	72
   983   000A9A                     u427:
   984   000A9A  2EE8               	decfsz	wreg,f,c
   985   000A9C  D7FE               	bra	u427
   986   000A9E  2E04               	decfsz	??_Lcd_Init^0,f,c
   987   000AA0  D7FC               	bra	u427
   988   000AA2                     
   989                           ;flexlcd.h: 97: for(data = 1; data < 4; data ++)
   990   000AA2  0E01               	movlw	1
   991   000AA4  6E05               	movwf	Lcd_Init@data^0,c
   992   000AA6                     l51:
   993                           
   994                           ;flexlcd.h: 98: {;flexlcd.h: 99: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
   995   000AA6  9E83               	bcf	131,7,c	;volatile
   996   000AA8  9C83               	bcf	131,6,c	;volatile
   997   000AAA  8A83               	bsf	131,5,c	;volatile
   998   000AAC  8883               	bsf	131,4,c	;volatile
   999   000AAE  9284               	bcf	132,1,c	;volatile
  1000                           
  1001                           ;flexlcd.h: 100: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 
      +                          = 1; PORTDbits.RD4 = 1;
  1002   000AB0  9484               	bcf	132,2,c	;volatile
  1003   000AB2  9E83               	bcf	131,7,c	;volatile
  1004   000AB4  9C83               	bcf	131,6,c	;volatile
  1005   000AB6  8A83               	bsf	131,5,c	;volatile
  1006   000AB8  8883               	bsf	131,4,c	;volatile
  1007                           
  1008                           ;flexlcd.h: 101: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1009   000ABA  8284               	bsf	132,1,c	;volatile
  1010   000ABC  9484               	bcf	132,2,c	;volatile
  1011   000ABE                     
  1012                           ;flexlcd.h: 102: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1013   000ABE  0E03               	movlw	3
  1014   000AC0                     u437:
  1015   000AC0  2EE8               	decfsz	wreg,f,c
  1016   000AC2  D7FE               	bra	u437
  1017   000AC4  F000               	nop	
  1018   000AC6                     
  1019                           ;flexlcd.h: 103: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
  1020   000AC6  9E83               	bcf	131,7,c	;volatile
  1021   000AC8  9C83               	bcf	131,6,c	;volatile
  1022   000ACA  8A83               	bsf	131,5,c	;volatile
  1023   000ACC  8883               	bsf	131,4,c	;volatile
  1024   000ACE  9284               	bcf	132,1,c	;volatile
  1025   000AD0                     
  1026                           ;flexlcd.h: 104: PORTEbits.RE2 = 0;
  1027   000AD0  9484               	bcf	132,2,c	;volatile
  1028                           
  1029                           ;flexlcd.h: 105: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1030   000AD2  0E0F               	movlw	15
  1031   000AD4  6E04               	movwf	??_Lcd_Init^0,c
  1032   000AD6  0E48               	movlw	72
  1033   000AD8                     u447:
  1034   000AD8  2EE8               	decfsz	wreg,f,c
  1035   000ADA  D7FE               	bra	u447
  1036   000ADC  2E04               	decfsz	??_Lcd_Init^0,f,c
  1037   000ADE  D7FC               	bra	u447
  1038   000AE0  2A05               	incf	Lcd_Init@data^0,f,c
  1039   000AE2  0E03               	movlw	3
  1040   000AE4  6405               	cpfsgt	Lcd_Init@data^0,c
  1041   000AE6  EF77  F005         	goto	u71
  1042   000AEA  EF79  F005         	goto	u70
  1043   000AEE                     u71:
  1044   000AEE  EF53  F005         	goto	l51
  1045   000AF2                     u70:
  1046   000AF2                     
  1047                           ;flexlcd.h: 106: };flexlcd.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1048   000AF2  9E83               	bcf	131,7,c	;volatile
  1049   000AF4  9C83               	bcf	131,6,c	;volatile
  1050   000AF6  8A83               	bsf	131,5,c	;volatile
  1051   000AF8  9883               	bcf	131,4,c	;volatile
  1052   000AFA  9284               	bcf	132,1,c	;volatile
  1053   000AFC  9484               	bcf	132,2,c	;volatile
  1054                           
  1055                           ;flexlcd.h: 108: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1056   000AFE  9E83               	bcf	131,7,c	;volatile
  1057   000B00  9C83               	bcf	131,6,c	;volatile
  1058   000B02  8A83               	bsf	131,5,c	;volatile
  1059   000B04  9883               	bcf	131,4,c	;volatile
  1060   000B06  8284               	bsf	132,1,c	;volatile
  1061   000B08  9484               	bcf	132,2,c	;volatile
  1062   000B0A                     
  1063                           ;flexlcd.h: 109: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1064   000B0A  0E03               	movlw	3
  1065   000B0C                     u457:
  1066   000B0C  2EE8               	decfsz	wreg,f,c
  1067   000B0E  D7FE               	bra	u457
  1068   000B10  F000               	nop	
  1069   000B12                     
  1070                           ;flexlcd.h: 110: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1071   000B12  9E83               	bcf	131,7,c	;volatile
  1072   000B14  9C83               	bcf	131,6,c	;volatile
  1073   000B16  8A83               	bsf	131,5,c	;volatile
  1074   000B18  9883               	bcf	131,4,c	;volatile
  1075   000B1A  9284               	bcf	132,1,c	;volatile
  1076   000B1C  9484               	bcf	132,2,c	;volatile
  1077                           
  1078                           ;flexlcd.h: 111: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1079   000B1E  0E0F               	movlw	15
  1080   000B20  6E04               	movwf	??_Lcd_Init^0,c
  1081   000B22  0E48               	movlw	72
  1082   000B24                     u467:
  1083   000B24  2EE8               	decfsz	wreg,f,c
  1084   000B26  D7FE               	bra	u467
  1085   000B28  2E04               	decfsz	??_Lcd_Init^0,f,c
  1086   000B2A  D7FC               	bra	u467
  1087   000B2C  0E28               	movlw	40
  1088   000B2E  EC85  F004         	call	_Lcd_Cmd
  1089   000B32  0E10               	movlw	16
  1090   000B34  EC85  F004         	call	_Lcd_Cmd
  1091   000B38  0E01               	movlw	1
  1092   000B3A  EC85  F004         	call	_Lcd_Cmd
  1093   000B3E  0E0F               	movlw	15
  1094   000B40  EC85  F004         	call	_Lcd_Cmd
  1095   000B44  0012               	return		;funcret
  1096   000B46                     __end_of_Lcd_Init:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _Lcd_Cmd *****************
  1100 ;; Defined at:
  1101 ;;		line 175 in file "flexlcd.h"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  data            1    wreg     unsigned char 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  data            1    2[COMRAM] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1115 ;;      Params:         0       0       0       0       0       0       0
  1116 ;;      Locals:         1       0       0       0       0       0       0
  1117 ;;      Temps:          2       0       0       0       0       0       0
  1118 ;;      Totals:         3       0       0       0       0       0       0
  1119 ;;Total ram usage:        3 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_Lcd_Init
  1125 ;;		_Lcd_Out
  1126 ;;		_main
  1127 ;;		_Lcd_Out2
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text4
  1132   00090A                     __ptext4:
  1133                           	callstack 0
  1134   00090A                     _Lcd_Cmd:
  1135                           	callstack 29
  1136                           
  1137                           ;incstack = 0
  1138                           ;Lcd_Cmd@data stored from wreg
  1139   00090A  6E03               	movwf	Lcd_Cmd@data^0,c
  1140   00090C                     
  1141                           ;flexlcd.h: 176: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1142   00090C  9284               	bcf	132,1,c	;volatile
  1143   00090E  9484               	bcf	132,2,c	;volatile
  1144   000910                     
  1145                           ;flexlcd.h: 177: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1146   000910  6A01               	clrf	??_Lcd_Cmd^0,c
  1147   000912  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1148   000914  D001               	bra	u15
  1149   000916  2A01               	incf	??_Lcd_Cmd^0,f,c
  1150   000918                     u15:
  1151   000918  0E01               	movlw	1
  1152   00091A  1601               	andwf	??_Lcd_Cmd^0,f,c
  1153   00091C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1154   00091E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1155   000920  5083               	movf	131,w,c	;volatile
  1156   000922  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1157   000924  0B7F               	andlw	-129
  1158   000926  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1159   000928  6E83               	movwf	131,c	;volatile
  1160   00092A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1161   00092E  0E06               	movlw	6
  1162   000930  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1163   000932                     u25:
  1164   000932  90D8               	bcf	status,0,c
  1165   000934  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1166   000936  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1167   000938  EF99  F004         	goto	u25
  1168   00093C  0E01               	movlw	1
  1169   00093E  1601               	andwf	??_Lcd_Cmd^0,f,c
  1170   000940  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1171   000942  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1172   000944  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1173   000946  5083               	movf	131,w,c	;volatile
  1174   000948  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1175   00094A  0BBF               	andlw	-65
  1176   00094C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1177   00094E  6E83               	movwf	131,c	;volatile
  1178                           
  1179                           ;flexlcd.h: 178: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1180   000950  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1181   000954  0E05               	movlw	5
  1182   000956  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1183   000958                     u35:
  1184   000958  90D8               	bcf	status,0,c
  1185   00095A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1186   00095C  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1187   00095E  EFAC  F004         	goto	u35
  1188   000962  0E01               	movlw	1
  1189   000964  1601               	andwf	??_Lcd_Cmd^0,f,c
  1190   000966  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1191   000968  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1192   00096A  5083               	movf	131,w,c	;volatile
  1193   00096C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1194   00096E  0BDF               	andlw	-33
  1195   000970  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1196   000972  6E83               	movwf	131,c	;volatile
  1197   000974  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1198   000978  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1199   00097A  0E0F               	movlw	15
  1200   00097C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1201   00097E  0E01               	movlw	1
  1202   000980  1601               	andwf	??_Lcd_Cmd^0,f,c
  1203   000982  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1204   000984  5083               	movf	131,w,c	;volatile
  1205   000986  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1206   000988  0BEF               	andlw	-17
  1207   00098A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1208   00098C  6E83               	movwf	131,c	;volatile
  1209   00098E                     
  1210                           ;flexlcd.h: 179: _delay(10);
  1211   00098E  0E03               	movlw	3
  1212   000990                     u477:
  1213   000990  2EE8               	decfsz	wreg,f,c
  1214   000992  D7FE               	bra	u477
  1215   000994  F000               	nop	
  1216   000996                     
  1217                           ;flexlcd.h: 180: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1218   000996  8284               	bsf	132,1,c	;volatile
  1219   000998  0E03               	movlw	3
  1220   00099A                     u487:
  1221   00099A  2EE8               	decfsz	wreg,f,c
  1222   00099C  D7FE               	bra	u487
  1223   00099E  F000               	nop	
  1224   0009A0  9284               	bcf	132,1,c	;volatile
  1225                           
  1226                           ;flexlcd.h: 181: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1227   0009A2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1228   0009A6  90D8               	bcf	status,0,c
  1229   0009A8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1230   0009AA  90D8               	bcf	status,0,c
  1231   0009AC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1232   0009AE  90D8               	bcf	status,0,c
  1233   0009B0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1234   0009B2  0E01               	movlw	1
  1235   0009B4  1601               	andwf	??_Lcd_Cmd^0,f,c
  1236   0009B6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1237   0009B8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1238   0009BA  5083               	movf	131,w,c	;volatile
  1239   0009BC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1240   0009BE  0B7F               	andlw	-129
  1241   0009C0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1242   0009C2  6E83               	movwf	131,c	;volatile
  1243   0009C4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1244   0009C8  90D8               	bcf	status,0,c
  1245   0009CA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1246   0009CC  90D8               	bcf	status,0,c
  1247   0009CE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1248   0009D0  0E01               	movlw	1
  1249   0009D2  1601               	andwf	??_Lcd_Cmd^0,f,c
  1250   0009D4  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1251   0009D6  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1252   0009D8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1253   0009DA  5083               	movf	131,w,c	;volatile
  1254   0009DC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1255   0009DE  0BBF               	andlw	-65
  1256   0009E0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1257   0009E2  6E83               	movwf	131,c	;volatile
  1258                           
  1259                           ;flexlcd.h: 182: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1260   0009E4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1261   0009E8  90D8               	bcf	status,0,c
  1262   0009EA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1263   0009EC  0E01               	movlw	1
  1264   0009EE  1601               	andwf	??_Lcd_Cmd^0,f,c
  1265   0009F0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1266   0009F2  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1267   0009F4  5083               	movf	131,w,c	;volatile
  1268   0009F6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1269   0009F8  0BDF               	andlw	-33
  1270   0009FA  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1271   0009FC  6E83               	movwf	131,c	;volatile
  1272   0009FE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1273   000A02  0E01               	movlw	1
  1274   000A04  1601               	andwf	??_Lcd_Cmd^0,f,c
  1275   000A06  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1276   000A08  5083               	movf	131,w,c	;volatile
  1277   000A0A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1278   000A0C  0BEF               	andlw	-17
  1279   000A0E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1280   000A10  6E83               	movwf	131,c	;volatile
  1281   000A12                     
  1282                           ;flexlcd.h: 183: _delay(10);
  1283   000A12  0E03               	movlw	3
  1284   000A14                     u497:
  1285   000A14  2EE8               	decfsz	wreg,f,c
  1286   000A16  D7FE               	bra	u497
  1287   000A18  F000               	nop	
  1288   000A1A                     
  1289                           ;flexlcd.h: 184: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1290   000A1A  8284               	bsf	132,1,c	;volatile
  1291   000A1C  0E03               	movlw	3
  1292   000A1E                     u507:
  1293   000A1E  2EE8               	decfsz	wreg,f,c
  1294   000A20  D7FE               	bra	u507
  1295   000A22  F000               	nop	
  1296   000A24  9284               	bcf	132,1,c	;volatile
  1297   000A26                     
  1298                           ;flexlcd.h: 185: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1299   000A26  0E0F               	movlw	15
  1300   000A28  6E01               	movwf	??_Lcd_Cmd^0,c
  1301   000A2A  0E48               	movlw	72
  1302   000A2C                     u517:
  1303   000A2C  2EE8               	decfsz	wreg,f,c
  1304   000A2E  D7FE               	bra	u517
  1305   000A30  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1306   000A32  D7FC               	bra	u517
  1307   000A34  0012               	return		;funcret
  1308   000A36                     __end_of_Lcd_Cmd:
  1309                           	callstack 0
  1310                           
  1311                           	psect	rparam
  1312   000000                     
  1313                           	psect	idloc
  1314                           
  1315                           ;Config register IDLOC0 @ 0x200000
  1316                           ;	unspecified, using default values
  1317   200000                     	org	2097152
  1318   200000  FF                 	db	255
  1319                           
  1320                           ;Config register IDLOC1 @ 0x200001
  1321                           ;	unspecified, using default values
  1322   200001                     	org	2097153
  1323   200001  FF                 	db	255
  1324                           
  1325                           ;Config register IDLOC2 @ 0x200002
  1326                           ;	unspecified, using default values
  1327   200002                     	org	2097154
  1328   200002  FF                 	db	255
  1329                           
  1330                           ;Config register IDLOC3 @ 0x200003
  1331                           ;	unspecified, using default values
  1332   200003                     	org	2097155
  1333   200003  FF                 	db	255
  1334                           
  1335                           ;Config register IDLOC4 @ 0x200004
  1336                           ;	unspecified, using default values
  1337   200004                     	org	2097156
  1338   200004  FF                 	db	255
  1339                           
  1340                           ;Config register IDLOC5 @ 0x200005
  1341                           ;	unspecified, using default values
  1342   200005                     	org	2097157
  1343   200005  FF                 	db	255
  1344                           
  1345                           ;Config register IDLOC6 @ 0x200006
  1346                           ;	unspecified, using default values
  1347   200006                     	org	2097158
  1348   200006  FF                 	db	255
  1349                           
  1350                           ;Config register IDLOC7 @ 0x200007
  1351                           ;	unspecified, using default values
  1352   200007                     	org	2097159
  1353   200007  FF                 	db	255
  1354                           
  1355                           	psect	config
  1356                           
  1357                           ; Padding undefined space
  1358   300000                     	org	3145728
  1359   300000  FF                 	db	255
  1360                           
  1361                           ;Config register CONFIG1H @ 0x300001
  1362                           ;	Oscillator Selection bits
  1363                           ;	OSC = HS, HS oscillator
  1364                           ;	Fail-Safe Clock Monitor Enable bit
  1365                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1366                           ;	Internal/External Oscillator Switchover bit
  1367                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1368   300001                     	org	3145729
  1369   300001  02                 	db	2
  1370                           
  1371                           ;Config register CONFIG2L @ 0x300002
  1372                           ;	Power-up Timer Enable bit
  1373                           ;	PWRT = OFF, PWRT disabled
  1374                           ;	Brown-out Reset Enable bits
  1375                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1376                           ;	Brown Out Reset Voltage bits
  1377                           ;	BORV = 3, Minimum setting
  1378   300002                     	org	3145730
  1379   300002  1F                 	db	31
  1380                           
  1381                           ;Config register CONFIG2H @ 0x300003
  1382                           ;	Watchdog Timer Enable bit
  1383                           ;	WDT = ON, WDT enabled
  1384                           ;	Watchdog Timer Postscale Select bits
  1385                           ;	WDTPS = 32768, 1:32768
  1386   300003                     	org	3145731
  1387   300003  1F                 	db	31
  1388                           
  1389                           ; Padding undefined space
  1390   300004                     	org	3145732
  1391   300004  FF                 	db	255
  1392                           
  1393                           ;Config register CONFIG3H @ 0x300005
  1394                           ;	CCP2 MUX bit
  1395                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1396                           ;	PORTB A/D Enable bit
  1397                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1398                           ;	Low-Power Timer1 Oscillator Enable bit
  1399                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1400                           ;	MCLR Pin Enable bit
  1401                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1402   300005                     	org	3145733
  1403   300005  01                 	db	1
  1404                           
  1405                           ;Config register CONFIG4L @ 0x300006
  1406                           ;	Stack Full/Underflow Reset Enable bit
  1407                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1408                           ;	Single-Supply ICSP Enable bit
  1409                           ;	LVP = ON, Single-Supply ICSP enabled
  1410                           ;	Extended Instruction Set Enable bit
  1411                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1412                           ;	Background Debugger Enable bit
  1413                           ;	DEBUG = 0x1, unprogrammed default
  1414   300006                     	org	3145734
  1415   300006  85                 	db	133
  1416                           
  1417                           ; Padding undefined space
  1418   300007                     	org	3145735
  1419   300007  FF                 	db	255
  1420                           
  1421                           ;Config register CONFIG5L @ 0x300008
  1422                           ;	Code Protection bit
  1423                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1424                           ;	Code Protection bit
  1425                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1426                           ;	Code Protection bit
  1427                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1428                           ;	Code Protection bit
  1429                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1430   300008                     	org	3145736
  1431   300008  0F                 	db	15
  1432                           
  1433                           ;Config register CONFIG5H @ 0x300009
  1434                           ;	Boot Block Code Protection bit
  1435                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1436                           ;	Data EEPROM Code Protection bit
  1437                           ;	CPD = OFF, Data EEPROM not code-protected
  1438   300009                     	org	3145737
  1439   300009  C0                 	db	192
  1440                           
  1441                           ;Config register CONFIG6L @ 0x30000A
  1442                           ;	Write Protection bit
  1443                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1444                           ;	Write Protection bit
  1445                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1446                           ;	Write Protection bit
  1447                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1448                           ;	Write Protection bit
  1449                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1450   30000A                     	org	3145738
  1451   30000A  0F                 	db	15
  1452                           
  1453                           ;Config register CONFIG6H @ 0x30000B
  1454                           ;	Configuration Register Write Protection bit
  1455                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1456                           ;	Boot Block Write Protection bit
  1457                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1458                           ;	Data EEPROM Write Protection bit
  1459                           ;	WRTD = OFF, Data EEPROM not write-protected
  1460   30000B                     	org	3145739
  1461   30000B  E0                 	db	224
  1462                           
  1463                           ;Config register CONFIG7L @ 0x30000C
  1464                           ;	Table Read Protection bit
  1465                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1466                           ;	Table Read Protection bit
  1467                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1468                           ;	Table Read Protection bit
  1469                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1470                           ;	Table Read Protection bit
  1471                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1472   30000C                     	org	3145740
  1473   30000C  0F                 	db	15
  1474                           
  1475                           ;Config register CONFIG7H @ 0x30000D
  1476                           ;	Boot Block Table Read Protection bit
  1477                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1478   30000D                     	org	3145741
  1479   30000D  40                 	db	64
  1480                           tosu	equ	0xFFF
  1481                           tosh	equ	0xFFE
  1482                           tosl	equ	0xFFD
  1483                           stkptr	equ	0xFFC
  1484                           pclatu	equ	0xFFB
  1485                           pclath	equ	0xFFA
  1486                           pcl	equ	0xFF9
  1487                           tblptru	equ	0xFF8
  1488                           tblptrh	equ	0xFF7
  1489                           tblptrl	equ	0xFF6
  1490                           tablat	equ	0xFF5
  1491                           prodh	equ	0xFF4
  1492                           prodl	equ	0xFF3
  1493                           indf0	equ	0xFEF
  1494                           postinc0	equ	0xFEE
  1495                           postdec0	equ	0xFED
  1496                           preinc0	equ	0xFEC
  1497                           plusw0	equ	0xFEB
  1498                           fsr0h	equ	0xFEA
  1499                           fsr0l	equ	0xFE9
  1500                           wreg	equ	0xFE8
  1501                           indf1	equ	0xFE7
  1502                           postinc1	equ	0xFE6
  1503                           postdec1	equ	0xFE5
  1504                           preinc1	equ	0xFE4
  1505                           plusw1	equ	0xFE3
  1506                           fsr1h	equ	0xFE2
  1507                           fsr1l	equ	0xFE1
  1508                           bsr	equ	0xFE0
  1509                           indf2	equ	0xFDF
  1510                           postinc2	equ	0xFDE
  1511                           postdec2	equ	0xFDD
  1512                           preinc2	equ	0xFDC
  1513                           plusw2	equ	0xFDB
  1514                           fsr2h	equ	0xFDA
  1515                           fsr2l	equ	0xFD9
  1516                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      14
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1481
                                              8 COMRAM     6     6      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     877
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      E       E       1       11.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         E      0       0      16        0.0%
BITBIGSFRhhl        2E      0       0      17        0.0%
BITBIGSFRhl         2A      0       0      18        0.0%
BITBIGSFRlhlh        5      0       0      19        0.0%
BITBIGSFRlhll        5      0       0      20        0.0%
BITBIGSFRlll         1      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 18 18:46:36 2023

                     l51 0AA6                       l52 0AF2                       l53 0B44  
                     l82 0908                       l66 0BD4                       l85 0A34  
                     l97 07CC                       u15 0918                       u25 0932  
                     u35 0958                       u45 07E4                       u70 0AF2  
                     u71 0AEE                       u55 07FE                       u65 0824  
                    l910 0ACA                      l920 0B0A                      l912 0ACC  
                    l904 0ABE                      l850 0910                      l930 0B1A  
                    l922 0B12                      l914 0ACE                      l906 0AC6  
                    l860 0A12                      l852 098E                      l940 0B32  
                    l932 0B1C                      l924 0B14                      l916 0AD0  
                    l908 0AC8                      l862 0A1A                      l854 0996  
                    l942 0B38                      l934 0B2C                      l926 0B16  
                    l918 0AE0                      l870 07D8                      l864 0A1C  
                    l856 0998                      l848 090C                      l944 0B38  
                    l936 0B2C                      l928 0B18                      l880 086C  
                    l872 07DC                      l866 0A24                      l858 09A0  
                    l946 0B3E                      l938 0B32                      l890 08F2  
                    l882 08DE                      l874 085A                      l868 0A26  
                    l948 0B3E                      l892 08FA                      l884 08E6  
                    l876 0862                      l894 0A36                      l886 08E8  
                    l878 0864                      l896 0A4E                      l888 08F0  
                    l898 0AA2                      u200 0686                      u201 0682  
                    u210 06CA                      u211 06C6                      u220 070E  
                    u221 070A                      u230 0758                      u231 0754  
                    u240 0794                      u241 0790                      u250 07A8  
                    u251 07A4                      u307 0772                      u180 0BD4  
                    u260 07C6                      u317 085C                      u181 0BD0  
                    u261 07C2                      u190 066A                      u407 0A7E  
                    u327 0866                      u191 0666                      u417 0A8C  
                    u337 08E0                      u507 0A1E                      u427 0A9A  
                    u347 08EA                      u517 0A2C                      u437 0AC0  
                    u357 08F4                      u277 06AE                      u447 0AD8  
                    u367 0900                      u287 06F2                      u457 0B0C  
                    u377 0A54                      u297 0736                      u467 0B24  
                    u387 0A62                      u477 0990                      u397 0A70  
                    u487 099A                      u497 0A14                      wreg 000FE8  
                   l1100 0700                     l1110 0758                     l1102 070E  
                   l1120 07B8                     l1112 0768                     l1104 0720  
                   l1050 0B4C                     l1122 07C6                     l1114 0780  
                   l1106 072C                     l1052 0B56                     l1060 0B74  
                   l1116 0794                     l1108 0744                     l1054 0B60  
                   l1062 0B9A                     l1118 07A8                     l1070 0608  
                   l1064 0BA4                     l1056 0B6A                     l1048 0B48  
                   l1080 066A                     l1072 0610                     l1066 0BB4  
                   l1090 06A4                     l1082 0670                     l1074 0652  
                   l1068 0BB8                     l1092 06BC                     l1084 0678  
                   l1076 0656                     l1094 06CA                     l1086 0686  
                   l1078 065C                     l1096 06DC                     l1088 0698  
                   l1098 06E8                     STR_1 0601                     STR_2 0603  
                   STR_3 0605                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main 0608  
                   start 0000          __end_of_Lcd_Cmd 0A36          __end_of_Lcd_Out 0BD6  
           ___param_bank 000000               _Lcd_Chr_CP 07D6                    ?_main 0001  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    main@l 000B  
                  tablat 000FF5                    status 000FD8         __end_of_Lcd_Init 0B46  
        __initialization 0BD6             __end_of_main 07D6                   ??_main 0009  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
              ??_Lcd_Cmd 0001                ??_Lcd_Out 0007              ?_Lcd_Chr_CP 0001  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0BD6            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001               ??_Lcd_Init 0004                  _Lcd_Cmd 090A  
                _Lcd_Out 0B46                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0BD6                  __ramtop 0600  
                __ptext0 0608                  __ptext1 0B46                  __ptext2 07D6  
                __ptext3 0A36                  __ptext4 090A                  main@col 000D  
   end_of_initialization 0BD6            __Lmediumconst 0000             ??_Lcd_Chr_CP 0001  
              _PORTBbits 000F81                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISDbits 000F95                _TRISEbits 000F96       __end_of_Lcd_Chr_CP 090A  
    start_initialization 0BD6            Lcd_Out@buffer 0005                 ?_Lcd_Cmd 0001  
               ?_Lcd_Out 0004              __smallconst 0600                 Lcd_Out@x 0004  
               Lcd_Out@y 0007             Lcd_Init@data 0005                 _Lcd_Init 0A36  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
         Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003                 isa$xinst 000000  
            Lcd_Out@data 0008  
